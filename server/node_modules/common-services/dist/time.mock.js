"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _sinon = _interopRequireDefault(require("sinon"));

var _time = _interopRequireDefault(require("./time"));

var _knifecycle = require("knifecycle");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* Architecture Note #1.2.1: Mocking time

The time mock uses the [`sinon`](https://github.com/sinonjs/sinon/)
 module under the hood like for the logging mock.
*/
var _default = (0, _knifecycle.reuseSpecialProps)(_time.default, initTimeMock);
/**
 * Instantiate the time service mock
 * @name initTimeMock
 * @function
 * @return {Promise<Function>}  A promise of the mocked
 *  time function
 * @example
 * import initTimeMock from 'common-services/dist/time.mock';
 * import assert from 'assert';
 *
 * const time = await initTimeMock();
 *
 * // Let's returns Thomas birth date (OMG ya father
 * // talking me about its childrens :D).
 * time.returns(new Date('2014-01-26T00:00:00.000Z'));
 *
 * assert.equal(time(), 1390694400000);
 * assert.deepEqual(time.args, [[]], 'Called once');
 *
 * time.reset();
 *
 * assert.deepEqual(time.args, []);
 */


exports.default = _default;

async function initTimeMock() {
  return _sinon.default.stub();
}
//# sourceMappingURL=time.mock.js.map