{"version":3,"sources":["../src/index.mock.test.ts"],"names":["describe","files","beforeAll","done","fs","readdir","__dirname","err","_files_","test","Promise","all","filter","file","includes","endsWith","map","require","path","join","default","then","modules","assert","deepEqual","Object","keys","services","sort","module","name","replace","catch"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;;;;;;;AAEAA,QAAQ,CAAC,YAAD,EAAe,MAAM;AAC3B,MAAIC,KAAJ;AAEAC,EAAAA,SAAS,CAAEC,IAAD,IAAU;AAClBC,gBAAGC,OAAH,CAAWC,SAAX,EAAsB,CAACC,GAAD,EAAMC,OAAN,KAAkB;AACtC,UAAID,GAAJ,EAAS;AACPJ,QAAAA,IAAI,CAACI,GAAD,CAAJ;AACA;AACD;;AACDN,MAAAA,KAAK,GAAGO,OAAR;AACAL,MAAAA,IAAI;AACL,KAPD;AAQD,GATQ,CAAT;AAWAM,EAAAA,IAAI,CAAC,2CAAD,EAA+CN,IAAD,IAAU;AAC1DO,IAAAA,OAAO,CAACC,GAAR,CACEV,KAAK,CACFW,MADH,CACWC,IAAD,IAAU,CAAC,CAAC,eAAD,EAAkBC,QAAlB,CAA2BD,IAA3B,CADrB,EAEGD,MAFH,CAEWC,IAAD,IAAU,CAACA,IAAI,CAACE,QAAL,CAAc,OAAd,CAFrB,EAGGH,MAHH,CAGWC,IAAD,IAAUA,IAAI,CAACE,QAAL,CAAc,UAAd,CAHpB,EAIGC,GAJH,CAIQH,IAAD,IAAUI,OAAO,CAACC,cAAKC,IAAL,CAAUb,SAAV,EAAqBO,IAArB,CAAD,CAAP,CAAoCO,OAJrD,CADF,CAKiE;AALjE,MAOGC,IAPH,CAOSC,OAAD,IAAa;AACjBC,sBAAOC,SAAP,CACEC,MAAM,CAACC,IAAP,CAAYC,QAAZ,EAAsBC,IAAtB,EADF,EAEEN,OAAO,CACJN,GADH,CACQa,MAAD,IAAaA,MAAD,CAAgBC,IADnC,EAEGd,GAFH,CAEQc,IAAD,IAAUA,IAAI,CAACC,OAAL,CAAa,WAAb,EAA0B,EAA1B,CAFjB,EAGGH,IAHH,EAFF;AAOD,KAfH,EAgBGP,IAhBH,CAgBQ,MAAMlB,IAAI,EAhBlB,EAiBG6B,KAjBH,CAiBS7B,IAjBT;AAkBD,GAnBG,CAAJ;AAoBD,CAlCO,CAAR","sourcesContent":["import assert from 'assert';\nimport fs from 'fs';\nimport path from 'path';\nimport * as services from './index.mock';\n\ndescribe('index.mock', () => {\n  let files;\n\n  beforeAll((done) => {\n    fs.readdir(__dirname, (err, _files_) => {\n      if (err) {\n        done(err);\n        return;\n      }\n      files = _files_;\n      done();\n    });\n  });\n\n  test('should import all mocks of the src folder', (done) => {\n    Promise.all(\n      files\n        .filter((file) => !['index.mock.ts'].includes(file))\n        .filter((file) => !file.endsWith('.d.ts'))\n        .filter((file) => file.endsWith('.mock.ts'))\n        .map((file) => require(path.join(__dirname, file)).default), // eslint-disable-line\n    )\n      .then((modules) => {\n        assert.deepEqual(\n          Object.keys(services).sort(),\n          modules\n            .map((module) => (module as any).name as string)\n            .map((name) => name.replace(/(bound )*/, ''))\n            .sort(),\n        );\n      })\n      .then(() => done())\n      .catch(done);\n  });\n});\n"],"file":"index.mock.test.js"}