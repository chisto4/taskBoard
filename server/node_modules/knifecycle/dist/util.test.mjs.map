{"version":3,"sources":["../src/util.test.ts"],"names":["assert","sinon","reuseSpecialProps","wrapInitializer","parseDependencyDeclaration","name","autoName","type","inject","autoInject","alsoInject","useInject","mergeInject","parseInjections","singleton","extra","initializer","constant","service","autoService","provider","autoProvider","handler","autoHandler","SPECIAL_PROPS","aProviderInitializer","_services","aServiceInitializer","describe","it","from","to","$name","$type","$inject","$singleton","$extra","httpHandler","newFn","notEqual","equal","deepEqual","newFn2","baseServiceInitializer","log","stub","newInitializer","newService","args","INJECT","baseInitializer","baseProviderInitializer","dependencies","throws","fromDependencies","fromInitializer","toDependencies","toInitializer","baseProvider","ENV","mysql","db","noop","undefined","debug","aDebug","foo","bar","SINGLETON","baseName","NAME","hash","initHash","initializeHash","extraInformations","EXTRA","baseExtraInformations","yolo","additionalExtraInformations","baseType","TYPE","baseValue","constantInitializer","VALUE","aServiceBuilder","extraData","cool","nice","baseServiceBuilder","initializeMySQL","aProviderInitializerBuilder","injectedServices","services","kikooo","lol","theInitializer","sampleHandler","theHandler","result","deps","serviceName","mappedName","optional"],"mappings":"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","sourcesContent":["import assert from 'assert';\nimport sinon from 'sinon';\nimport {\n  reuseSpecialProps,\n  wrapInitializer,\n  parseDependencyDeclaration,\n  name,\n  autoName,\n  type,\n  inject,\n  autoInject,\n  alsoInject,\n  useInject,\n  mergeInject,\n  parseInjections,\n  singleton,\n  extra,\n  initializer,\n  constant,\n  service,\n  autoService,\n  provider,\n  autoProvider,\n  handler,\n  autoHandler,\n  SPECIAL_PROPS,\n} from './util';\nimport type { PromiseValue } from 'type-fest';\nimport type { Provider } from './util';\n\nasync function aProviderInitializer(_services: unknown) {\n  return {\n    service: 'A_PROVIDER_SERVICE',\n  };\n}\nasync function aServiceInitializer(_services: unknown) {\n  return 'A_PROVIDER_SERVICE';\n}\n\ndescribe('reuseSpecialProps', () => {\n  it('should work', () => {\n    // We can safely ignore coverage here since the\n    // function are here just as placeholders\n    /* istanbul ignore next */\n    async function from() {\n      return 'from';\n    }\n    /* istanbul ignore next */\n    async function to() {\n      return 'to';\n    }\n\n    from.$name = 'from';\n    from.$type = 'service';\n    from.$inject = ['ki', 'kooo', 'lol'];\n    from.$singleton = false;\n    from.$extra = { httpHandler: true };\n\n    const newFn = reuseSpecialProps(from, to) as any;\n\n    assert.notEqual(newFn, to);\n    assert.equal(newFn.$name, from.$name);\n    assert.equal(newFn.$type, from.$type);\n    assert.notEqual(newFn.$inject, from.$inject);\n    assert.deepEqual(newFn.$inject, from.$inject);\n    assert.equal(newFn.$singleton, from.$singleton);\n    assert.notEqual(newFn.$extra, from.$extra);\n    assert.deepEqual(newFn.$extra, from.$extra);\n\n    const newFn2 = reuseSpecialProps(from as any, to, {\n      $name: 'yolo',\n    }) as any;\n\n    assert.notEqual(newFn2, to);\n    assert.equal(newFn2.$name, 'yolo');\n    assert.equal(newFn2.$type, from.$type);\n    assert.notEqual(newFn2.$inject, from.$inject);\n    assert.deepEqual(newFn2.$inject, from.$inject);\n    assert.equal(newFn2.$singleton, from.$singleton);\n    assert.notEqual(newFn.$extra, from.$extra);\n    assert.deepEqual(newFn.$extra, from.$extra);\n  });\n});\n\ndescribe('wrapInitializer', () => {\n  it('should work with a service initializer', async () => {\n    async function baseServiceInitializer() {\n      return () => 'test';\n    }\n\n    const log = sinon.stub();\n    const newInitializer = wrapInitializer(\n      async ({ log }, service: () => string) => {\n        log('Wrapping...');\n        return () => service() + '-wrapped';\n      },\n      service(\n        baseServiceInitializer,\n        'baseServiceInitializer',\n        ['log', '?test'],\n        false,\n        {\n          httpHandler: false,\n        },\n      ),\n    );\n\n    const newService = await newInitializer({ log });\n    assert.equal(newService(), 'test-wrapped');\n    assert.deepEqual(log.args, [['Wrapping...']]);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], ['log', '?test']);\n  });\n\n  it('should work with a provider initialzer', async () => {\n    async function baseInitializer() {\n      return { service: () => 'test' };\n    }\n\n    const log = sinon.stub();\n    const baseProviderInitializer = provider(\n      baseInitializer,\n      'baseInitializer',\n      ['log', '?test'],\n      false,\n      {\n        httpHandler: false,\n      },\n    );\n    const newInitializer = wrapInitializer(async ({ log }, service): Promise<\n      Provider<() => string>\n    > => {\n      log('Wrapping...');\n      return { service: () => service.service() + '-wrapped' };\n    }, baseProviderInitializer);\n\n    const newService = await newInitializer({ log });\n    assert.equal(newService.service(), 'test-wrapped');\n    assert.deepEqual(log.args, [['Wrapping...']]);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], ['log', '?test']);\n  });\n});\n\ndescribe('inject', () => {\n  it('should allow to decorate an initializer with dependencies', () => {\n    const dependencies = ['ENV'];\n    const newInitializer = inject<{ ENV: string }, string>(\n      dependencies,\n      provider(aProviderInitializer, 'aProvider'),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer builder with dependencies', () => {\n    const dependencies = ['ENV'];\n    const newInitializer = inject<{ ENV: string }, string>(\n      dependencies,\n      aProviderInitializer,\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer with dependencies', () => {\n    const dependencies = ['ENV'];\n    const newInitializer = inject<{ ENV: string }, string>(\n      dependencies,\n      service(aServiceInitializer, 'aService'),\n    );\n\n    assert.notEqual(newInitializer, aServiceInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer builder with dependencies', () => {\n    const dependencies = ['ENV'];\n    const newInitializer = inject<{ ENV: string }, string>(\n      dependencies,\n      aServiceInitializer,\n    );\n\n    assert.notEqual(newInitializer, aServiceInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer with mapped dependencies', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const newInitializer = inject(dependencies, aProviderInitializer);\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should fail with a constant', () => {\n    assert.throws(() => {\n      inject(['test'], constant('test', 'test') as any);\n    }, /E_BAD_INJECT_IN_CONSTANT/);\n  });\n});\ndescribe('useInject', () => {\n  it('should set the right dependencies', () => {\n    const fromDependencies = ['ENV', 'CORS'];\n    const fromInitializer = inject(fromDependencies, aProviderInitializer);\n    const toDependencies = ['db', 'log'];\n    const toInitializer = inject(toDependencies, aProviderInitializer);\n    const newInitializer = useInject(fromInitializer, toInitializer);\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], fromDependencies);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], toDependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], [\n      ...fromDependencies,\n    ]);\n  });\n});\n\ndescribe('mergeInject', () => {\n  it('should amend dependencies', () => {\n    const fromDependencies = ['ENV', 'CORS'];\n    const fromInitializer = inject<\n      {\n        db: 'db';\n        log: 'log';\n      },\n      PromiseValue<ReturnType<typeof aProviderInitializer>>\n    >(fromDependencies, aProviderInitializer);\n    const toDependencies = ['db', 'log'];\n    const toInitializer = inject(toDependencies, aProviderInitializer);\n    const newInitializer = mergeInject(fromInitializer, toInitializer);\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], fromDependencies);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], toDependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], [\n      ...toDependencies,\n      ...fromDependencies,\n    ]);\n  });\n});\n\ndescribe('autoInject', () => {\n  it('should allow to decorate an initializer with dependencies', () => {\n    const baseProvider = async ({ ENV, mysql: db }) => async () => ({\n      ENV,\n      db,\n    });\n    const dependencies = ['ENV', 'mysql'];\n    const newInitializer = autoInject(baseProvider);\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer with a function name', () => {\n    async function baseProvider({ ENV, mysql: db }) {\n      async () => ({\n        ENV,\n        db,\n      });\n    }\n    const dependencies = ['ENV', 'mysql'];\n    const newInitializer = autoInject(baseProvider);\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer with optional dependencies', () => {\n    const noop = () => undefined;\n    const baseProvider = async ({\n      ENV,\n      log = noop,\n      debug: aDebug = noop,\n    }) => async () => ({\n      ENV,\n      log,\n      aDebug,\n    });\n    const dependencies = ['ENV', '?log', '?debug'];\n    const newInitializer = autoInject(baseProvider);\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer with several arguments', () => {\n    const noop = () => undefined;\n    const baseProvider = async ({\n      ENV,\n      log = noop,\n      debug: aDebug = noop,\n    }) => async () => ({\n      ENV,\n      log,\n      aDebug,\n    });\n    const dependencies = ['ENV', '?log', '?debug'];\n    const newInitializer = autoInject(baseProvider);\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer with complex arguments', () => {\n    const noop = () => undefined;\n    const baseProvider = async ({\n      ENV,\n      log = noop,\n      debug: aDebug = noop,\n    }) => async () => ({\n      ENV,\n      log,\n      aDebug,\n    });\n    const dependencies = ['ENV', '?log', '?debug'];\n    const newInitializer = autoInject(baseProvider);\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should fail with non async initializers', () => {\n    assert.throws(() => {\n      autoInject((({ foo: bar = { bar: 'foo' } }) => {\n        return bar;\n      }) as any);\n    }, /E_NON_ASYNC_INITIALIZER/);\n  });\n\n  it('should fail with too complex injections', () => {\n    assert.throws(() => {\n      autoInject(async ({ foo: bar = { bar: 'foo' } }) => {\n        return bar;\n      });\n    }, /E_AUTO_INJECTION_FAILURE/);\n  });\n\n  it('should fail with no injections', () => {\n    assert.throws(() => {\n      autoInject(async () => undefined);\n    }, /E_AUTO_INJECTION_FAILURE/);\n  });\n});\n\ndescribe('alsoInject', () => {\n  it('should allow to decorate an initializer with dependencies', () => {\n    const newInitializer = alsoInject(\n      ['ENV'],\n      inject(['TEST'], aProviderInitializer),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], ['TEST', 'ENV']);\n  });\n\n  it('should allow to decorate an initializer with dependencies', () => {\n    const newInitializer = alsoInject(['ENV'], aProviderInitializer);\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], ['ENV']);\n  });\n\n  it('should dedupe dependencies', () => {\n    const baseProvider = inject(['?TEST'], aProviderInitializer);\n    const newInitializer = alsoInject(\n      ['ENV', '?NODE_ENV', '?TEST', 'TEST2', 'db>mysql'],\n      alsoInject(['ENV', 'NODE_ENV', '?TEST', '?TEST2', 'mysql'], baseProvider),\n    );\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], [\n      'mysql',\n      'ENV',\n      'NODE_ENV',\n      '?TEST',\n      'TEST2',\n      'db>mysql',\n    ]);\n  });\n\n  it('should preserve single optional dependencies', () => {\n    const baseProvider = inject(['ENV', '?TEST'], aProviderInitializer);\n    const newInitializer = alsoInject(\n      ['ENV', '?TEST2'],\n      alsoInject(['ENV', '?TEST3'], baseProvider),\n    );\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], [\n      '?TEST',\n      '?TEST3',\n      'ENV',\n      '?TEST2',\n    ]);\n  });\n\n  it('should preserve mapped dependencies', () => {\n    const baseProvider = inject(['mysql', '?sftp'], aProviderInitializer);\n    const newInitializer = alsoInject(['db>mysql', '?ftp>sftp'], baseProvider);\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], [\n      'mysql',\n      '?sftp',\n      'db>mysql',\n      '?ftp>sftp',\n    ]);\n  });\n\n  it('should solve dependencies alias name clash', () => {\n    const baseProvider = inject(['?TEST'], aProviderInitializer);\n    const newInitializer = alsoInject(\n      ['ENV', '?NODE_ENV', '?TEST', 'db>mysql', '?log>logly'],\n      alsoInject(\n        ['ENV', 'NODE_ENV', '?TEST', 'db>pg', '?log>logger'],\n        baseProvider,\n      ),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], [\n      'ENV',\n      'NODE_ENV',\n      '?TEST',\n      'db>mysql',\n      '?log>logly',\n    ]);\n  });\n\n  it('should solve dependencies alias name clash', () => {\n    const baseProvider = inject(['?TEST'], aProviderInitializer);\n    const newInitializer = alsoInject(\n      ['ENV', '?NODE_ENV', '?TEST', 'db>mysql', '?log>logly'],\n      alsoInject(\n        ['ENV', 'NODE_ENV', '?TEST', 'db>pg', '?log>logger'],\n        baseProvider,\n      ),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], [\n      'ENV',\n      'NODE_ENV',\n      '?TEST',\n      'db>mysql',\n      '?log>logly',\n    ]);\n  });\n});\n\ndescribe('parseInjections', () => {\n  it('should work with TypeScript dependencies', () => {\n    assert.deepEqual(\n      parseInjections(`async function initNexmo({\n      ENV,\n      NEXMO,\n      log = noop,\n    }: {\n      ENV: any;\n      NEXMO: any;\n      log: Function;\n    }): Promise<SMSService> {}`),\n      ['ENV', 'NEXMO', '?log'],\n    );\n  });\n\n  it('should allow to decorate an initializer with dependencies', () => {\n    const newInitializer = alsoInject(['ENV'], aProviderInitializer);\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], ['ENV']);\n  });\n});\n\ndescribe('singleton', () => {\n  it('should allow to decorate an initializer with singleton option', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const newInitializer = inject(\n      dependencies,\n      singleton(aProviderInitializer, true),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.SINGLETON], true);\n  });\n\n  it('should allow to be used several times', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const newInitializer = inject(\n      dependencies,\n      singleton(singleton(aProviderInitializer), false),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.SINGLETON], false);\n  });\n});\n\ndescribe('name', () => {\n  it('should allow to decorate an initializer with a name', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseName = 'hash';\n    const newInitializer = inject(\n      dependencies,\n      name(baseName, aProviderInitializer),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n  });\n});\n\ndescribe('autoName', () => {\n  it('should allow to decorate an initializer with its function name', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseName = 'hash';\n    const newInitializer = inject(\n      dependencies,\n      autoName(async function hash() {\n        return undefined;\n      }),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n  });\n\n  it('should allow to decorate an initializer with its init like function name', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseName = 'hash';\n    const newInitializer = inject(\n      dependencies,\n      autoName(async function initHash() {\n        return undefined;\n      }),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n  });\n\n  it('should allow to decorate an initializer with its initialize like function name', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseName = 'hash';\n    const newInitializer = inject(\n      dependencies,\n      autoName(async function initializeHash() {\n        return undefined;\n      }),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n  });\n\n  it('should allow to decorate a bounded initializer', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseName = 'hash';\n    const newInitializer = autoName(\n      inject(\n        dependencies,\n        singleton(async function initializeHash() {\n          return undefined;\n        }),\n      ),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.SINGLETON], true);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n  });\n\n  it('should fail with anonymous functions', () => {\n    assert.throws(() => {\n      autoName(async () => undefined);\n    }, /E_AUTO_NAMING_FAILURE/);\n  });\n});\n\ndescribe('extra', () => {\n  it('should allow to decorate an initializer with extra infos', () => {\n    const extraInformations = { httpHandler: true };\n    const newInitializer = extra(extraInformations, aProviderInitializer);\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.EXTRA], extraInformations);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.EXTRA], extraInformations);\n  });\n\n  it('should allow to decorate an initializer with extra infos', () => {\n    const extraInformations = { httpHandler: true };\n    const newInitializer = extra(extraInformations, aProviderInitializer, true);\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.EXTRA], extraInformations);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.EXTRA], extraInformations);\n  });\n\n  it('should allow to decorate an initializer with additional extra infos', () => {\n    const baseExtraInformations = { yolo: true, httpHandler: false };\n    const additionalExtraInformations = { httpHandler: true };\n    const newInitializer = extra(\n      baseExtraInformations,\n      extra(additionalExtraInformations, aProviderInitializer),\n      true,\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.EXTRA], baseExtraInformations);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.EXTRA], baseExtraInformations);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.EXTRA], {\n      ...baseExtraInformations,\n      ...baseExtraInformations,\n    });\n  });\n});\n\ndescribe('type', () => {\n  it('should allow to decorate an initializer with a type', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseName = 'hash';\n    const baseType = 'service';\n    const newInitializer = inject(\n      dependencies,\n      name(baseName, type(baseType, aProviderInitializer)),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], baseType);\n  });\n});\n\ndescribe('initializer', () => {\n  it('should allow to decorate an initializer with every properties', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseName = 'hash';\n    const baseType = 'service';\n    const newInitializer = initializer(\n      {\n        type: baseType,\n        inject: dependencies,\n        singleton: true,\n        name: baseName,\n      },\n      aServiceInitializer,\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.SINGLETON], true);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], baseType);\n  });\n\n  it('should fail with bad properties', () => {\n    assert.throws(() => {\n      initializer(\n        {\n          name: 'yolo',\n          yolo: '',\n        } as any,\n        async () => undefined,\n      );\n    }, /E_BAD_PROPERTY/);\n  });\n});\n\ndescribe('constant', () => {\n  it('should allow to create an initializer from a constant', async () => {\n    const baseName = 'THE_VALUE';\n    const baseValue = 42;\n    const constantInitializer = constant(baseName, baseValue);\n\n    assert.equal(constantInitializer[SPECIAL_PROPS.NAME], baseName);\n    assert.equal(constantInitializer[SPECIAL_PROPS.TYPE], 'constant');\n    assert.equal(constantInitializer[SPECIAL_PROPS.VALUE], baseValue);\n  });\n\n  it('should fail with dependencies since it makes no sense', () => {\n    assert.throws(() => {\n      constant(\n        'time',\n        inject(['hash3'], async () => undefined),\n      );\n    }, /E_CONSTANT_INJECTION/);\n  });\n});\n\ndescribe('service', () => {\n  it('should allow to create an initializer from a service builder', async () => {\n    const aServiceBuilder = async (_services: unknown) => 'A_SERVICE';\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const extraData = { cool: true };\n    const baseName = 'hash';\n    const baseType = 'service';\n    const newInitializer = service(\n      aServiceBuilder,\n      baseName,\n      dependencies,\n      true,\n      extraData,\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.SINGLETON], true);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.EXTRA], extraData);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], baseType);\n  });\n\n  it('should allow to create an initializer from a generic service builder', async () => {\n    const aServiceBuilder = async <T>(_services: T) => '';\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const extraData = { nice: true };\n    const baseName = 'hash';\n    const baseType = 'service';\n    const newInitializer = service(\n      aServiceBuilder,\n      baseName,\n      dependencies,\n      true,\n      extraData,\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.SINGLETON], true);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.EXTRA], extraData);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], baseType);\n  });\n\n  it('should fail with no service builder', () => {\n    assert.throws(() => {\n      service(undefined as any);\n    }, /E_NO_SERVICE_BUILDER/);\n  });\n});\n\ndescribe('autoService', () => {\n  it('should detect the service details', () => {\n    const baseServiceBuilder = async function initializeMySQL({ ENV }) {\n      return ENV;\n    };\n    const newInitializer = autoService(baseServiceBuilder);\n\n    assert.notEqual(newInitializer, baseServiceBuilder);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], ['ENV']);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], 'mySQL');\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], 'service');\n  });\n\n  it('should detect the service details even with no dependencies', () => {\n    const baseServiceBuilder = async function initializeMySQL() {\n      return;\n    };\n    const newInitializer = autoService(baseServiceBuilder);\n\n    assert.notEqual(newInitializer, baseServiceBuilder);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], []);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], 'mySQL');\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], 'service');\n  });\n});\n\ndescribe('provider', () => {\n  it('should allow to create an initializer from a provider builder', async () => {\n    const aProviderInitializerBuilder = async () => ({ service: 'A_SERVICE' });\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const extraData = { singleton: true };\n    const baseName = 'hash';\n    const baseType = 'provider';\n    const newInitializer = provider(\n      aProviderInitializerBuilder,\n      baseName,\n      dependencies,\n      true,\n      extraData,\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.SINGLETON], true);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.EXTRA], extraData);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], baseType);\n  });\n\n  it('should allow to create an initializer from a provider builder', async () => {\n    const aServiceBuilder = async (_services: unknown) => ({\n      service: 'A_SERVICE',\n    });\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const extraData = { extra: true };\n    const baseName = 'hash';\n    const baseType = 'provider';\n    const newInitializer = provider(\n      name(\n        baseName,\n        inject(dependencies, singleton(extra(extraData, aServiceBuilder))),\n      ),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.SINGLETON], true);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.EXTRA], extraData);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], baseType);\n  });\n\n  it('should fail with no provider builder', () => {\n    assert.throws(() => {\n      provider(undefined as any);\n    }, /E_NO_PROVIDER_BUILDER/);\n  });\n});\n\ndescribe('autoProvider', () => {\n  it('should detect the provider details', () => {\n    const baseInitializer = async function initializeMySQL({\n      ENV,\n    }: {\n      ENV: unknown;\n    }) {\n      return { service: ENV };\n    };\n    const newInitializer = autoProvider(baseInitializer);\n\n    assert.notEqual(newInitializer, baseInitializer);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], ['ENV']);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], 'mySQL');\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], 'provider');\n  });\n\n  it('should detect the provider details even with no dependencies', () => {\n    const baseInitializer = async function initializeMySQL() {\n      return { service: 'A_SERVICE' };\n    };\n    const newInitializer = autoProvider(baseInitializer);\n\n    assert.notEqual(newInitializer, baseInitializer);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], []);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], 'mySQL');\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], 'provider');\n  });\n});\n\ndescribe('handler', () => {\n  it('should work', async () => {\n    const baseName = 'sampleHandler';\n    const injectedServices = ['kikooo', 'lol'];\n    const services = {\n      kikooo: 'kikooo',\n      lol: 'lol',\n    };\n    const theInitializer = handler(sampleHandler, baseName, injectedServices);\n\n    assert.deepEqual((theInitializer as any).$name, baseName);\n    assert.deepEqual((theInitializer as any).$inject, injectedServices);\n\n    const theHandler = await theInitializer(services);\n    const result = await theHandler('test');\n    assert.deepEqual(result, {\n      deps: services,\n      args: ['test'],\n    });\n\n    async function sampleHandler(deps, ...args) {\n      return { deps, args };\n    }\n  });\n\n  it('should fail with no name', () => {\n    assert.throws(() => {\n      handler(() => undefined);\n    }, /E_NO_HANDLER_NAME/);\n  });\n});\n\ndescribe('autoHandler', () => {\n  it('should work', async () => {\n    const services = {\n      kikooo: 'kikooo',\n      lol: 'lol',\n    };\n    const theInitializer = autoHandler(sampleHandler);\n\n    assert.deepEqual((theInitializer as any).$name, sampleHandler.name);\n    assert.deepEqual((theInitializer as any).$inject, ['kikooo', 'lol']);\n\n    const theHandler = await theInitializer(services);\n    const result = await theHandler('test');\n    assert.deepEqual(result, {\n      deps: services,\n      args: ['test'],\n    });\n\n    async function sampleHandler({ kikooo, lol }, ...args) {\n      return { deps: { kikooo, lol }, args };\n    }\n  });\n\n  it('should work with spread services', async () => {\n    const services = {\n      kikooo: 'kikooo',\n      lol: 'lol',\n    };\n    const theInitializer = autoHandler(sampleHandler);\n\n    assert.deepEqual((theInitializer as any).$name, sampleHandler.name);\n    assert.deepEqual((theInitializer as any).$inject, ['kikooo', 'lol']);\n\n    const theHandler = await theInitializer(services);\n    const result = await theHandler('test');\n    assert.deepEqual(result, {\n      deps: services,\n      args: ['test'],\n    });\n\n    async function sampleHandler({ kikooo, lol, ...services }, ...args) {\n      return { deps: { kikooo, lol, ...services }, args };\n    }\n  });\n\n  it('should fail for anonymous functions', () => {\n    assert.throws(() => {\n      autoHandler(() => undefined);\n    }, /E_AUTO_NAMING_FAILURE/);\n  });\n});\n\ndescribe('parseDependencyDeclaration', () => {\n  it('should work', () => {\n    assert.deepEqual(parseDependencyDeclaration('db>pgsql'), {\n      serviceName: 'db',\n      mappedName: 'pgsql',\n      optional: false,\n    });\n  });\n\n  it('should work with unmapped names', () => {\n    assert.deepEqual(parseDependencyDeclaration('?pgsql'), {\n      serviceName: 'pgsql',\n      mappedName: 'pgsql',\n      optional: true,\n    });\n  });\n});\n"],"file":"util.test.mjs"}