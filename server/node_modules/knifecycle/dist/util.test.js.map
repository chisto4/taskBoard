{"version":3,"sources":["../src/util.test.ts"],"names":["aProviderInitializer","_services","service","aServiceInitializer","describe","it","from","to","$name","$type","$inject","$singleton","$extra","httpHandler","newFn","assert","notEqual","equal","deepEqual","newFn2","baseServiceInitializer","log","sinon","stub","newInitializer","newService","args","SPECIAL_PROPS","INJECT","baseInitializer","baseProviderInitializer","dependencies","throws","fromDependencies","fromInitializer","toDependencies","toInitializer","baseProvider","ENV","mysql","db","noop","undefined","debug","aDebug","foo","bar","SINGLETON","baseName","NAME","hash","initHash","initializeHash","extraInformations","EXTRA","baseExtraInformations","yolo","additionalExtraInformations","baseType","TYPE","type","inject","singleton","name","baseValue","constantInitializer","VALUE","aServiceBuilder","extraData","cool","nice","baseServiceBuilder","initializeMySQL","aProviderInitializerBuilder","extra","injectedServices","services","kikooo","lol","theInitializer","sampleHandler","theHandler","result","deps","serviceName","mappedName","optional"],"mappings":"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","sourcesContent":["import assert from 'assert';\nimport sinon from 'sinon';\nimport {\n  reuseSpecialProps,\n  wrapInitializer,\n  parseDependencyDeclaration,\n  name,\n  autoName,\n  type,\n  inject,\n  autoInject,\n  alsoInject,\n  useInject,\n  mergeInject,\n  parseInjections,\n  singleton,\n  extra,\n  initializer,\n  constant,\n  service,\n  autoService,\n  provider,\n  autoProvider,\n  handler,\n  autoHandler,\n  SPECIAL_PROPS,\n} from './util';\nimport type { PromiseValue } from 'type-fest';\nimport type { Provider } from './util';\n\nasync function aProviderInitializer(_services: unknown) {\n  return {\n    service: 'A_PROVIDER_SERVICE',\n  };\n}\nasync function aServiceInitializer(_services: unknown) {\n  return 'A_PROVIDER_SERVICE';\n}\n\ndescribe('reuseSpecialProps', () => {\n  it('should work', () => {\n    // We can safely ignore coverage here since the\n    // function are here just as placeholders\n    /* istanbul ignore next */\n    async function from() {\n      return 'from';\n    }\n    /* istanbul ignore next */\n    async function to() {\n      return 'to';\n    }\n\n    from.$name = 'from';\n    from.$type = 'service';\n    from.$inject = ['ki', 'kooo', 'lol'];\n    from.$singleton = false;\n    from.$extra = { httpHandler: true };\n\n    const newFn = reuseSpecialProps(from, to) as any;\n\n    assert.notEqual(newFn, to);\n    assert.equal(newFn.$name, from.$name);\n    assert.equal(newFn.$type, from.$type);\n    assert.notEqual(newFn.$inject, from.$inject);\n    assert.deepEqual(newFn.$inject, from.$inject);\n    assert.equal(newFn.$singleton, from.$singleton);\n    assert.notEqual(newFn.$extra, from.$extra);\n    assert.deepEqual(newFn.$extra, from.$extra);\n\n    const newFn2 = reuseSpecialProps(from as any, to, {\n      $name: 'yolo',\n    }) as any;\n\n    assert.notEqual(newFn2, to);\n    assert.equal(newFn2.$name, 'yolo');\n    assert.equal(newFn2.$type, from.$type);\n    assert.notEqual(newFn2.$inject, from.$inject);\n    assert.deepEqual(newFn2.$inject, from.$inject);\n    assert.equal(newFn2.$singleton, from.$singleton);\n    assert.notEqual(newFn.$extra, from.$extra);\n    assert.deepEqual(newFn.$extra, from.$extra);\n  });\n});\n\ndescribe('wrapInitializer', () => {\n  it('should work with a service initializer', async () => {\n    async function baseServiceInitializer() {\n      return () => 'test';\n    }\n\n    const log = sinon.stub();\n    const newInitializer = wrapInitializer(\n      async ({ log }, service: () => string) => {\n        log('Wrapping...');\n        return () => service() + '-wrapped';\n      },\n      service(\n        baseServiceInitializer,\n        'baseServiceInitializer',\n        ['log', '?test'],\n        false,\n        {\n          httpHandler: false,\n        },\n      ),\n    );\n\n    const newService = await newInitializer({ log });\n    assert.equal(newService(), 'test-wrapped');\n    assert.deepEqual(log.args, [['Wrapping...']]);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], ['log', '?test']);\n  });\n\n  it('should work with a provider initialzer', async () => {\n    async function baseInitializer() {\n      return { service: () => 'test' };\n    }\n\n    const log = sinon.stub();\n    const baseProviderInitializer = provider(\n      baseInitializer,\n      'baseInitializer',\n      ['log', '?test'],\n      false,\n      {\n        httpHandler: false,\n      },\n    );\n    const newInitializer = wrapInitializer(async ({ log }, service): Promise<\n      Provider<() => string>\n    > => {\n      log('Wrapping...');\n      return { service: () => service.service() + '-wrapped' };\n    }, baseProviderInitializer);\n\n    const newService = await newInitializer({ log });\n    assert.equal(newService.service(), 'test-wrapped');\n    assert.deepEqual(log.args, [['Wrapping...']]);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], ['log', '?test']);\n  });\n});\n\ndescribe('inject', () => {\n  it('should allow to decorate an initializer with dependencies', () => {\n    const dependencies = ['ENV'];\n    const newInitializer = inject<{ ENV: string }, string>(\n      dependencies,\n      provider(aProviderInitializer, 'aProvider'),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer builder with dependencies', () => {\n    const dependencies = ['ENV'];\n    const newInitializer = inject<{ ENV: string }, string>(\n      dependencies,\n      aProviderInitializer,\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer with dependencies', () => {\n    const dependencies = ['ENV'];\n    const newInitializer = inject<{ ENV: string }, string>(\n      dependencies,\n      service(aServiceInitializer, 'aService'),\n    );\n\n    assert.notEqual(newInitializer, aServiceInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer builder with dependencies', () => {\n    const dependencies = ['ENV'];\n    const newInitializer = inject<{ ENV: string }, string>(\n      dependencies,\n      aServiceInitializer,\n    );\n\n    assert.notEqual(newInitializer, aServiceInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer with mapped dependencies', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const newInitializer = inject(dependencies, aProviderInitializer);\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should fail with a constant', () => {\n    assert.throws(() => {\n      inject(['test'], constant('test', 'test') as any);\n    }, /E_BAD_INJECT_IN_CONSTANT/);\n  });\n});\ndescribe('useInject', () => {\n  it('should set the right dependencies', () => {\n    const fromDependencies = ['ENV', 'CORS'];\n    const fromInitializer = inject(fromDependencies, aProviderInitializer);\n    const toDependencies = ['db', 'log'];\n    const toInitializer = inject(toDependencies, aProviderInitializer);\n    const newInitializer = useInject(fromInitializer, toInitializer);\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], fromDependencies);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], toDependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], [\n      ...fromDependencies,\n    ]);\n  });\n});\n\ndescribe('mergeInject', () => {\n  it('should amend dependencies', () => {\n    const fromDependencies = ['ENV', 'CORS'];\n    const fromInitializer = inject<\n      {\n        db: 'db';\n        log: 'log';\n      },\n      PromiseValue<ReturnType<typeof aProviderInitializer>>\n    >(fromDependencies, aProviderInitializer);\n    const toDependencies = ['db', 'log'];\n    const toInitializer = inject(toDependencies, aProviderInitializer);\n    const newInitializer = mergeInject(fromInitializer, toInitializer);\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], fromDependencies);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], toDependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], [\n      ...toDependencies,\n      ...fromDependencies,\n    ]);\n  });\n});\n\ndescribe('autoInject', () => {\n  it('should allow to decorate an initializer with dependencies', () => {\n    const baseProvider = async ({ ENV, mysql: db }) => async () => ({\n      ENV,\n      db,\n    });\n    const dependencies = ['ENV', 'mysql'];\n    const newInitializer = autoInject(baseProvider);\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer with a function name', () => {\n    async function baseProvider({ ENV, mysql: db }) {\n      async () => ({\n        ENV,\n        db,\n      });\n    }\n    const dependencies = ['ENV', 'mysql'];\n    const newInitializer = autoInject(baseProvider);\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer with optional dependencies', () => {\n    const noop = () => undefined;\n    const baseProvider = async ({\n      ENV,\n      log = noop,\n      debug: aDebug = noop,\n    }) => async () => ({\n      ENV,\n      log,\n      aDebug,\n    });\n    const dependencies = ['ENV', '?log', '?debug'];\n    const newInitializer = autoInject(baseProvider);\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer with several arguments', () => {\n    const noop = () => undefined;\n    const baseProvider = async ({\n      ENV,\n      log = noop,\n      debug: aDebug = noop,\n    }) => async () => ({\n      ENV,\n      log,\n      aDebug,\n    });\n    const dependencies = ['ENV', '?log', '?debug'];\n    const newInitializer = autoInject(baseProvider);\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should allow to decorate an initializer with complex arguments', () => {\n    const noop = () => undefined;\n    const baseProvider = async ({\n      ENV,\n      log = noop,\n      debug: aDebug = noop,\n    }) => async () => ({\n      ENV,\n      log,\n      aDebug,\n    });\n    const dependencies = ['ENV', '?log', '?debug'];\n    const newInitializer = autoInject(baseProvider);\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n  });\n\n  it('should fail with non async initializers', () => {\n    assert.throws(() => {\n      autoInject((({ foo: bar = { bar: 'foo' } }) => {\n        return bar;\n      }) as any);\n    }, /E_NON_ASYNC_INITIALIZER/);\n  });\n\n  it('should fail with too complex injections', () => {\n    assert.throws(() => {\n      autoInject(async ({ foo: bar = { bar: 'foo' } }) => {\n        return bar;\n      });\n    }, /E_AUTO_INJECTION_FAILURE/);\n  });\n\n  it('should fail with no injections', () => {\n    assert.throws(() => {\n      autoInject(async () => undefined);\n    }, /E_AUTO_INJECTION_FAILURE/);\n  });\n});\n\ndescribe('alsoInject', () => {\n  it('should allow to decorate an initializer with dependencies', () => {\n    const newInitializer = alsoInject(\n      ['ENV'],\n      inject(['TEST'], aProviderInitializer),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], ['TEST', 'ENV']);\n  });\n\n  it('should allow to decorate an initializer with dependencies', () => {\n    const newInitializer = alsoInject(['ENV'], aProviderInitializer);\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], ['ENV']);\n  });\n\n  it('should dedupe dependencies', () => {\n    const baseProvider = inject(['?TEST'], aProviderInitializer);\n    const newInitializer = alsoInject(\n      ['ENV', '?NODE_ENV', '?TEST', 'TEST2', 'db>mysql'],\n      alsoInject(['ENV', 'NODE_ENV', '?TEST', '?TEST2', 'mysql'], baseProvider),\n    );\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], [\n      'mysql',\n      'ENV',\n      'NODE_ENV',\n      '?TEST',\n      'TEST2',\n      'db>mysql',\n    ]);\n  });\n\n  it('should preserve single optional dependencies', () => {\n    const baseProvider = inject(['ENV', '?TEST'], aProviderInitializer);\n    const newInitializer = alsoInject(\n      ['ENV', '?TEST2'],\n      alsoInject(['ENV', '?TEST3'], baseProvider),\n    );\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], [\n      '?TEST',\n      '?TEST3',\n      'ENV',\n      '?TEST2',\n    ]);\n  });\n\n  it('should preserve mapped dependencies', () => {\n    const baseProvider = inject(['mysql', '?sftp'], aProviderInitializer);\n    const newInitializer = alsoInject(['db>mysql', '?ftp>sftp'], baseProvider);\n\n    assert.notEqual(newInitializer, baseProvider);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], [\n      'mysql',\n      '?sftp',\n      'db>mysql',\n      '?ftp>sftp',\n    ]);\n  });\n\n  it('should solve dependencies alias name clash', () => {\n    const baseProvider = inject(['?TEST'], aProviderInitializer);\n    const newInitializer = alsoInject(\n      ['ENV', '?NODE_ENV', '?TEST', 'db>mysql', '?log>logly'],\n      alsoInject(\n        ['ENV', 'NODE_ENV', '?TEST', 'db>pg', '?log>logger'],\n        baseProvider,\n      ),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], [\n      'ENV',\n      'NODE_ENV',\n      '?TEST',\n      'db>mysql',\n      '?log>logly',\n    ]);\n  });\n\n  it('should solve dependencies alias name clash', () => {\n    const baseProvider = inject(['?TEST'], aProviderInitializer);\n    const newInitializer = alsoInject(\n      ['ENV', '?NODE_ENV', '?TEST', 'db>mysql', '?log>logly'],\n      alsoInject(\n        ['ENV', 'NODE_ENV', '?TEST', 'db>pg', '?log>logger'],\n        baseProvider,\n      ),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], [\n      'ENV',\n      'NODE_ENV',\n      '?TEST',\n      'db>mysql',\n      '?log>logly',\n    ]);\n  });\n});\n\ndescribe('parseInjections', () => {\n  it('should work with TypeScript dependencies', () => {\n    assert.deepEqual(\n      parseInjections(`async function initNexmo({\n      ENV,\n      NEXMO,\n      log = noop,\n    }: {\n      ENV: any;\n      NEXMO: any;\n      log: Function;\n    }): Promise<SMSService> {}`),\n      ['ENV', 'NEXMO', '?log'],\n    );\n  });\n\n  it('should allow to decorate an initializer with dependencies', () => {\n    const newInitializer = alsoInject(['ENV'], aProviderInitializer);\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], ['ENV']);\n  });\n});\n\ndescribe('singleton', () => {\n  it('should allow to decorate an initializer with singleton option', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const newInitializer = inject(\n      dependencies,\n      singleton(aProviderInitializer, true),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.SINGLETON], true);\n  });\n\n  it('should allow to be used several times', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const newInitializer = inject(\n      dependencies,\n      singleton(singleton(aProviderInitializer), false),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.SINGLETON], false);\n  });\n});\n\ndescribe('name', () => {\n  it('should allow to decorate an initializer with a name', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseName = 'hash';\n    const newInitializer = inject(\n      dependencies,\n      name(baseName, aProviderInitializer),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n  });\n});\n\ndescribe('autoName', () => {\n  it('should allow to decorate an initializer with its function name', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseName = 'hash';\n    const newInitializer = inject(\n      dependencies,\n      autoName(async function hash() {\n        return undefined;\n      }),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n  });\n\n  it('should allow to decorate an initializer with its init like function name', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseName = 'hash';\n    const newInitializer = inject(\n      dependencies,\n      autoName(async function initHash() {\n        return undefined;\n      }),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n  });\n\n  it('should allow to decorate an initializer with its initialize like function name', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseName = 'hash';\n    const newInitializer = inject(\n      dependencies,\n      autoName(async function initializeHash() {\n        return undefined;\n      }),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n  });\n\n  it('should allow to decorate a bounded initializer', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseName = 'hash';\n    const newInitializer = autoName(\n      inject(\n        dependencies,\n        singleton(async function initializeHash() {\n          return undefined;\n        }),\n      ),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.SINGLETON], true);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n  });\n\n  it('should fail with anonymous functions', () => {\n    assert.throws(() => {\n      autoName(async () => undefined);\n    }, /E_AUTO_NAMING_FAILURE/);\n  });\n});\n\ndescribe('extra', () => {\n  it('should allow to decorate an initializer with extra infos', () => {\n    const extraInformations = { httpHandler: true };\n    const newInitializer = extra(extraInformations, aProviderInitializer);\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.EXTRA], extraInformations);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.EXTRA], extraInformations);\n  });\n\n  it('should allow to decorate an initializer with extra infos', () => {\n    const extraInformations = { httpHandler: true };\n    const newInitializer = extra(extraInformations, aProviderInitializer, true);\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.EXTRA], extraInformations);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.EXTRA], extraInformations);\n  });\n\n  it('should allow to decorate an initializer with additional extra infos', () => {\n    const baseExtraInformations = { yolo: true, httpHandler: false };\n    const additionalExtraInformations = { httpHandler: true };\n    const newInitializer = extra(\n      baseExtraInformations,\n      extra(additionalExtraInformations, aProviderInitializer),\n      true,\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.EXTRA], baseExtraInformations);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.EXTRA], baseExtraInformations);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.EXTRA], {\n      ...baseExtraInformations,\n      ...baseExtraInformations,\n    });\n  });\n});\n\ndescribe('type', () => {\n  it('should allow to decorate an initializer with a type', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseName = 'hash';\n    const baseType = 'service';\n    const newInitializer = inject(\n      dependencies,\n      name(baseName, type(baseType, aProviderInitializer)),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], baseType);\n  });\n});\n\ndescribe('initializer', () => {\n  it('should allow to decorate an initializer with every properties', () => {\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const baseName = 'hash';\n    const baseType = 'service';\n    const newInitializer = initializer(\n      {\n        type: baseType,\n        inject: dependencies,\n        singleton: true,\n        name: baseName,\n      },\n      aServiceInitializer,\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.SINGLETON], true);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], baseType);\n  });\n\n  it('should fail with bad properties', () => {\n    assert.throws(() => {\n      initializer(\n        {\n          name: 'yolo',\n          yolo: '',\n        } as any,\n        async () => undefined,\n      );\n    }, /E_BAD_PROPERTY/);\n  });\n});\n\ndescribe('constant', () => {\n  it('should allow to create an initializer from a constant', async () => {\n    const baseName = 'THE_VALUE';\n    const baseValue = 42;\n    const constantInitializer = constant(baseName, baseValue);\n\n    assert.equal(constantInitializer[SPECIAL_PROPS.NAME], baseName);\n    assert.equal(constantInitializer[SPECIAL_PROPS.TYPE], 'constant');\n    assert.equal(constantInitializer[SPECIAL_PROPS.VALUE], baseValue);\n  });\n\n  it('should fail with dependencies since it makes no sense', () => {\n    assert.throws(() => {\n      constant(\n        'time',\n        inject(['hash3'], async () => undefined),\n      );\n    }, /E_CONSTANT_INJECTION/);\n  });\n});\n\ndescribe('service', () => {\n  it('should allow to create an initializer from a service builder', async () => {\n    const aServiceBuilder = async (_services: unknown) => 'A_SERVICE';\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const extraData = { cool: true };\n    const baseName = 'hash';\n    const baseType = 'service';\n    const newInitializer = service(\n      aServiceBuilder,\n      baseName,\n      dependencies,\n      true,\n      extraData,\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.SINGLETON], true);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.EXTRA], extraData);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], baseType);\n  });\n\n  it('should allow to create an initializer from a generic service builder', async () => {\n    const aServiceBuilder = async <T>(_services: T) => '';\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const extraData = { nice: true };\n    const baseName = 'hash';\n    const baseType = 'service';\n    const newInitializer = service(\n      aServiceBuilder,\n      baseName,\n      dependencies,\n      true,\n      extraData,\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.SINGLETON], true);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.EXTRA], extraData);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], baseType);\n  });\n\n  it('should fail with no service builder', () => {\n    assert.throws(() => {\n      service(undefined as any);\n    }, /E_NO_SERVICE_BUILDER/);\n  });\n});\n\ndescribe('autoService', () => {\n  it('should detect the service details', () => {\n    const baseServiceBuilder = async function initializeMySQL({ ENV }) {\n      return ENV;\n    };\n    const newInitializer = autoService(baseServiceBuilder);\n\n    assert.notEqual(newInitializer, baseServiceBuilder);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], ['ENV']);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], 'mySQL');\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], 'service');\n  });\n\n  it('should detect the service details even with no dependencies', () => {\n    const baseServiceBuilder = async function initializeMySQL() {\n      return;\n    };\n    const newInitializer = autoService(baseServiceBuilder);\n\n    assert.notEqual(newInitializer, baseServiceBuilder);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], []);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], 'mySQL');\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], 'service');\n  });\n});\n\ndescribe('provider', () => {\n  it('should allow to create an initializer from a provider builder', async () => {\n    const aProviderInitializerBuilder = async () => ({ service: 'A_SERVICE' });\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const extraData = { singleton: true };\n    const baseName = 'hash';\n    const baseType = 'provider';\n    const newInitializer = provider(\n      aProviderInitializerBuilder,\n      baseName,\n      dependencies,\n      true,\n      extraData,\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.SINGLETON], true);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.EXTRA], extraData);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], baseType);\n  });\n\n  it('should allow to create an initializer from a provider builder', async () => {\n    const aServiceBuilder = async (_services: unknown) => ({\n      service: 'A_SERVICE',\n    });\n    const dependencies = ['ANOTHER_ENV>ENV'];\n    const extraData = { extra: true };\n    const baseName = 'hash';\n    const baseType = 'provider';\n    const newInitializer = provider(\n      name(\n        baseName,\n        inject(dependencies, singleton(extra(extraData, aServiceBuilder))),\n      ),\n    );\n\n    assert.notEqual(newInitializer, aProviderInitializer);\n    assert.notEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], dependencies);\n    assert.equal(newInitializer[SPECIAL_PROPS.SINGLETON], true);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.EXTRA], extraData);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], baseName);\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], baseType);\n  });\n\n  it('should fail with no provider builder', () => {\n    assert.throws(() => {\n      provider(undefined as any);\n    }, /E_NO_PROVIDER_BUILDER/);\n  });\n});\n\ndescribe('autoProvider', () => {\n  it('should detect the provider details', () => {\n    const baseInitializer = async function initializeMySQL({\n      ENV,\n    }: {\n      ENV: unknown;\n    }) {\n      return { service: ENV };\n    };\n    const newInitializer = autoProvider(baseInitializer);\n\n    assert.notEqual(newInitializer, baseInitializer);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], ['ENV']);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], 'mySQL');\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], 'provider');\n  });\n\n  it('should detect the provider details even with no dependencies', () => {\n    const baseInitializer = async function initializeMySQL() {\n      return { service: 'A_SERVICE' };\n    };\n    const newInitializer = autoProvider(baseInitializer);\n\n    assert.notEqual(newInitializer, baseInitializer);\n    assert.deepEqual(newInitializer[SPECIAL_PROPS.INJECT], []);\n    assert.equal(newInitializer[SPECIAL_PROPS.NAME], 'mySQL');\n    assert.equal(newInitializer[SPECIAL_PROPS.TYPE], 'provider');\n  });\n});\n\ndescribe('handler', () => {\n  it('should work', async () => {\n    const baseName = 'sampleHandler';\n    const injectedServices = ['kikooo', 'lol'];\n    const services = {\n      kikooo: 'kikooo',\n      lol: 'lol',\n    };\n    const theInitializer = handler(sampleHandler, baseName, injectedServices);\n\n    assert.deepEqual((theInitializer as any).$name, baseName);\n    assert.deepEqual((theInitializer as any).$inject, injectedServices);\n\n    const theHandler = await theInitializer(services);\n    const result = await theHandler('test');\n    assert.deepEqual(result, {\n      deps: services,\n      args: ['test'],\n    });\n\n    async function sampleHandler(deps, ...args) {\n      return { deps, args };\n    }\n  });\n\n  it('should fail with no name', () => {\n    assert.throws(() => {\n      handler(() => undefined);\n    }, /E_NO_HANDLER_NAME/);\n  });\n});\n\ndescribe('autoHandler', () => {\n  it('should work', async () => {\n    const services = {\n      kikooo: 'kikooo',\n      lol: 'lol',\n    };\n    const theInitializer = autoHandler(sampleHandler);\n\n    assert.deepEqual((theInitializer as any).$name, sampleHandler.name);\n    assert.deepEqual((theInitializer as any).$inject, ['kikooo', 'lol']);\n\n    const theHandler = await theInitializer(services);\n    const result = await theHandler('test');\n    assert.deepEqual(result, {\n      deps: services,\n      args: ['test'],\n    });\n\n    async function sampleHandler({ kikooo, lol }, ...args) {\n      return { deps: { kikooo, lol }, args };\n    }\n  });\n\n  it('should work with spread services', async () => {\n    const services = {\n      kikooo: 'kikooo',\n      lol: 'lol',\n    };\n    const theInitializer = autoHandler(sampleHandler);\n\n    assert.deepEqual((theInitializer as any).$name, sampleHandler.name);\n    assert.deepEqual((theInitializer as any).$inject, ['kikooo', 'lol']);\n\n    const theHandler = await theInitializer(services);\n    const result = await theHandler('test');\n    assert.deepEqual(result, {\n      deps: services,\n      args: ['test'],\n    });\n\n    async function sampleHandler({ kikooo, lol, ...services }, ...args) {\n      return { deps: { kikooo, lol, ...services }, args };\n    }\n  });\n\n  it('should fail for anonymous functions', () => {\n    assert.throws(() => {\n      autoHandler(() => undefined);\n    }, /E_AUTO_NAMING_FAILURE/);\n  });\n});\n\ndescribe('parseDependencyDeclaration', () => {\n  it('should work', () => {\n    assert.deepEqual(parseDependencyDeclaration('db>pgsql'), {\n      serviceName: 'db',\n      mappedName: 'pgsql',\n      optional: false,\n    });\n  });\n\n  it('should work with unmapped names', () => {\n    assert.deepEqual(parseDependencyDeclaration('?pgsql'), {\n      serviceName: 'pgsql',\n      mappedName: 'pgsql',\n      optional: true,\n    });\n  });\n});\n"],"file":"util.test.js"}