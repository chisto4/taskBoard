"use strict";

var _assert = _interopRequireDefault(require("assert"));

var _knifecycle = require("knifecycle");

var _pg = _interopRequireDefault(require("./pg"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe('initPGService', () => {
  const log = jest.fn();
  const ENV = {};
  const PG = {};
  beforeEach(() => {
    log.mockClear();
  });
  test('should work', async () => {
    const pg = await (0, _pg.default)({
      ENV,
      PG,
      log
    });
    (0, _assert.default)(pg);
    expect(log.mock.calls).toMatchSnapshot();
  });
  describe('pg', () => {
    test('should work', async () => {
      const pg = await (0, _pg.default)({
        ENV,
        PG,
        log
      });
      (0, _assert.default)(pg);
      log.mockClear();
      expect(log.mock.calls).toMatchSnapshot();
    });
  });
  test('should work with Knifecycle', async () => {
    const $ = new _knifecycle.Knifecycle().register(_pg.default).register((0, _knifecycle.constant)('log', log)).register((0, _knifecycle.constant)('PG', {}));
    const {
      pg
    } = await $.run(['pg']);
    (0, _assert.default)(pg);
    expect(log.mock.calls).toMatchSnapshot();
  });
});
//# sourceMappingURL=pg.test.js.map