{"ast":null,"code":"var _jsxFileName = \"/home/fusion/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/GitHub/taskBoard/client/src/components/pages/workSpace/WorkSpace.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './workSpaceStyled.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst WorkSpace = ({\n  event\n}) => {\n  _s();\n\n  const [columns, setColumns] = useState([{\n    id: 1,\n    title: \"What need\",\n    items: [{\n      id: 1,\n      title: \"Develpometn\"\n    }, {\n      id: 2,\n      title: 'Create desigen Todo'\n    }, {\n      id: 3,\n      title: 'made Hello world made Hello world '\n    }, {\n      id: 4,\n      title: 'Always make Zalupa test on console'\n    }]\n  }, {\n    id: 2,\n    title: \"Process on work\",\n    items: [{\n      id: 1,\n      title: 'Write your cold develope'\n    }, {\n      id: 2,\n      title: 'Choice deisgen on Dribble'\n    }, {\n      id: 3,\n      title: 'react Native'\n    }]\n  }, {\n    id: 3,\n    title: 'Complete',\n    items: [{\n      id: 1,\n      title: 'Make a photo'\n    }]\n  }]); //FORE ITEM\n\n  const [currentColumn, setCurrentColumn] = useState(null);\n  const [currentItem, setCurrentItem] = useState(null);\n\n  function dragOverHandler(event) {\n    event.preventDefault();\n\n    if (event.target.className === 'item') {\n      event.target.classList.toggle('boxShadow');\n    }\n  }\n\n  function dragLeaveHandler(event) {\n    event.target.classList.remove('boxShadow');\n  }\n\n  function dragStartHandler(event, column, item) {\n    // debugger\n    console.log('Start column', column);\n    console.log('Start item', item);\n    setCurrentColumn(column);\n    setCurrentItem(item);\n  }\n\n  function dragEndHandler(event) {\n    event.target.classList.remove('boxShadow');\n  }\n\n  function dragDropHandler(event, column, item) {\n    event.preventDefault();\n    const currentIndex = currentColumn.items.indexOf(currentItem);\n    currentColumn.items.splice(currentIndex, 1);\n    const dropIndex = column.items.indexOf(item);\n    column.items.splice(dropIndex + 1, 0, currentItem);\n    setColumns(columns.map(brd => {\n      if (brd.id === column.id) {\n        return column;\n      }\n\n      if (brd.id === currentColumn.id) {\n        return currentColumn;\n      }\n\n      return brd;\n    }));\n  }\n\n  function dropeZeroStickHandler(event, column, item) {\n    const currentIndex = currentColumn.items.indexOf(currentItem);\n\n    if (!currentIndex.includes(currentItem.id)) {\n      column.items.push(currentItem);\n      const currentIndex = currentColumn.items.indexOf(currentItem);\n      currentColumn.items.splice(currentIndex, 1);\n      setColumns(columns.map(b => {\n        if (b.id === column.id) {\n          return column;\n        }\n\n        if (b.id === currentColumn.id) {\n          return currentColumn;\n        }\n\n        return b;\n      }));\n    }\n  }\n\n  function columnStartHandler(event, column, item) {\n    // debugger\n    console.log('Start column', column);\n    console.log('Start item', item);\n    setCurrentColumn(column);\n    setCurrentItem(item);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"workSpace\",\n    children: columns.map(column => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      onDragOver: event => dragOverHandler(event) // onDrop={(event)=> dropeZeroStickHandler(event, column, {item: column.item})}\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column__title\",\n        children: column.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), column.items.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        onDragOver: event => dragOverHandler(event),\n        onDragLeave: event => dragLeaveHandler(event),\n        onDragStart: event => dragStartHandler(event, column, item),\n        onDragEnd: event => dragEndHandler(event),\n        onDrop: event => dragDropHandler(event, column, item),\n        className: \"item\",\n        draggable: true,\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WorkSpace, \"gRFvNi0EQOGZ35vRUe8qii85qIA=\");\n\n_c = WorkSpace;\nexport default WorkSpace;\n\nvar _c;\n\n$RefreshReg$(_c, \"WorkSpace\");","map":{"version":3,"sources":["/home/fusion/Документы/GitHub/taskBoard/client/src/components/pages/workSpace/WorkSpace.tsx"],"names":["React","useState","WorkSpace","event","columns","setColumns","id","title","items","currentColumn","setCurrentColumn","currentItem","setCurrentItem","dragOverHandler","preventDefault","target","className","classList","toggle","dragLeaveHandler","remove","dragStartHandler","column","item","console","log","dragEndHandler","dragDropHandler","currentIndex","indexOf","splice","dropIndex","map","brd","dropeZeroStickHandler","includes","push","b","columnStartHandler"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport './workSpaceStyled.css';\n\nimport deleteButton  from '../../../icon/delete.png';\nimport closeButton  from '../../../icon/close.png';\n\ninterface IWorkSpace {\n  event: any\n}\n\nconst WorkSpace: React.FC<IWorkSpace> = ({event}) => {\n  const [columns, setColumns] = useState([\n    {id:1, title:\"What need\", items:[{id:1, title:\"Develpometn\"},{id:2, title:'Create desigen Todo'},\n                {id:3, title:'made Hello world made Hello world '},{id:4, title:'Always make Zalupa test on console'}]},\n    {id:2, title:\"Process on work\", items:[{id:1, title:'Write your cold develope'}, \n                {id:2, title:'Choice deisgen on Dribble'},{id:3, title:'react Native'}]},\n    {id:3, title:'Complete', items:[{id:1, title:'Make a photo'}]}\n  ])\n\n  //FORE ITEM\n  const [currentColumn, setCurrentColumn] = useState(null)\n  const [currentItem, setCurrentItem] = useState(null)\n\n  function dragOverHandler(event){\n    event.preventDefault()\n    if(event.target.className === 'item'){\n      event.target.classList.toggle('boxShadow')\n    }\n  }\n\n  function dragLeaveHandler(event){\n    event.target.classList.remove('boxShadow')\n  }\n\n  function dragStartHandler(event, column, item){\n    // debugger\n    console.log('Start column', column) \n    console.log('Start item', item) \n    setCurrentColumn(column)\n    setCurrentItem(item)\n  }\n\n  function dragEndHandler(event){\n    event.target.classList.remove('boxShadow')\n  }\n\n  function dragDropHandler(event, column, item){\n    event.preventDefault()\n    const currentIndex = currentColumn.items.indexOf(currentItem)\n    currentColumn.items.splice(currentIndex, 1)\n    const dropIndex = column.items.indexOf(item)\n    column.items.splice(dropIndex + 1, 0, currentItem)\n    setColumns(columns.map(brd => {\n      if (brd.id === column.id){\n        return column\n      }\n      if (brd.id === currentColumn.id){\n        return currentColumn\n      }\n      return brd\n    }))\n  }\n\n  function dropeZeroStickHandler(event, column, item) {\n    const currentIndex = currentColumn.items.indexOf(currentItem)\n      if (!currentIndex.includes(currentItem.id)) {\n      column.items.push(currentItem)\n             const currentIndex = currentColumn.items.indexOf(currentItem)\n             currentColumn.items.splice(currentIndex, 1)\n             setColumns(columns.map(b => {\n                if (b.id === column.id) {\n                   return column\n                }\n                if (b.id === currentColumn.id) {\n                   return currentColumn\n                }\n                return b\n             }))\n          }\n  }\n\n  function columnStartHandler(event, column, item){\n    // debugger\n    console.log('Start column', column) \n    console.log('Start item', item) \n    setCurrentColumn(column)\n    setCurrentItem(item)\n  }\n\n  return (\n    <div className=\"workSpace\">\n      {columns.map(column =>\n        <div className=\"column\"\n        onDragOver={(event)=> dragOverHandler(event)}\n        // onDrop={(event)=> dropeZeroStickHandler(event, column, {item: column.item})}\n        >\n          <div className=\"column__title\">{column.title}\n          </div>\n            {column.items.map(item =>\n                <div \n                onDragOver={(event)=> dragOverHandler(event)}\n                onDragLeave={(event)=> dragLeaveHandler(event)}\n                onDragStart={(event)=> dragStartHandler(event, column, item)}\n                onDragEnd={(event)=> dragEndHandler(event)}\n                onDrop={(event)=> dragDropHandler(event, column, item)}\n                className=\"item\"\n                draggable={true}\n                >\n                  {item.title}\n                </div>\n                \n              )}\n        </div>\n        )}\n    </div>\n    );\n  };\n\nexport default WorkSpace;"]},"metadata":{},"sourceType":"module"}