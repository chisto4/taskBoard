{"ast":null,"code":"import React, { useContext } from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { authRoutes, publicRoutes } from \"../routes\";\nimport { SHOP_ROUTE } from \"../utils/consts\";\nimport { Context } from \"../../index\";\nimport { observer } from \"mobx-react-lite\";\nconst AppRouter = observer(_c = () => {// const {user} = useContext(Context)\n  // console.log(user)\n  // return (\n  //     <Switch>\n  //         {user.isAuth && authRoutes.map(({path, Component}) =>\n  //             <Route key={path} path={path} component={Component} exact/>\n  //         )}\n  //         {publicRoutes.map(({path, Component}) =>\n  //             <Route key={path} path={path} component={Component} exact/>\n  //         )}\n  //         <Redirect to={SHOP_ROUTE}/>\n  //     </Switch>\n  // );\n});\n_c2 = AppRouter;\nexport default AppRouter;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppRouter$observer\");\n$RefreshReg$(_c2, \"AppRouter\");","map":{"version":3,"sources":["/home/fusion/Документы/GitHub/taskBoard/client/src/components/routePage/AppRouter.js"],"names":["React","useContext","Switch","Route","Redirect","authRoutes","publicRoutes","SHOP_ROUTE","Context","observer","AppRouter"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,QAAvB,QAAsC,kBAAtC;AACA,SAAQC,UAAR,EAAoBC,YAApB,QAAuC,WAAvC;AACA,SAAQC,UAAR,QAAyB,iBAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,QAAR,QAAuB,iBAAvB;AAEA,MAAMC,SAAS,GAAGD,QAAQ,MAAC,MAAM,CAC7B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAfyB,CAA1B;MAAMC,S;AAiBN,eAAeA,SAAf","sourcesContent":["import React, {useContext} from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom'\nimport {authRoutes, publicRoutes} from \"../routes\";\nimport {SHOP_ROUTE} from \"../utils/consts\";\nimport {Context} from \"../../index\";\nimport {observer} from \"mobx-react-lite\";\n\nconst AppRouter = observer(() => {\n    // const {user} = useContext(Context)\n\n    // console.log(user)\n    // return (\n    //     <Switch>\n    //         {user.isAuth && authRoutes.map(({path, Component}) =>\n    //             <Route key={path} path={path} component={Component} exact/>\n    //         )}\n    //         {publicRoutes.map(({path, Component}) =>\n    //             <Route key={path} path={path} component={Component} exact/>\n    //         )}\n    //         <Redirect to={SHOP_ROUTE}/>\n    //     </Switch>\n    // );\n});\n\nexport default AppRouter;"]},"metadata":{},"sourceType":"module"}