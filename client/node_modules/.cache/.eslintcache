[{"/Users/chistofor/Documents/project/taskBoard/client/src/index.tsx":"1","/Users/chistofor/Documents/project/taskBoard/client/src/store/index.ts":"2","/Users/chistofor/Documents/project/taskBoard/client/src/App.tsx":"3","/Users/chistofor/Documents/project/taskBoard/client/src/store/reducers.ts":"4","/Users/chistofor/Documents/project/taskBoard/client/src/store/userReducer/userThunk.ts":"5","/Users/chistofor/Documents/project/taskBoard/client/src/api/routePage/AppRouter.tsx":"6","/Users/chistofor/Documents/project/taskBoard/client/src/pages/components/modalWindows/userRegistrationForm/UserRegistrationForm.tsx":"7","/Users/chistofor/Documents/project/taskBoard/client/src/pages/components/modalWindows/loginForm/loginForm.tsx":"8","/Users/chistofor/Documents/project/taskBoard/client/src/pages/components/header/header.tsx":"9","/Users/chistofor/Documents/project/taskBoard/client/src/store/userReducer/userReducer.ts":"10","/Users/chistofor/Documents/project/taskBoard/client/src/store/boardReducer/boardReducer.ts":"11","/Users/chistofor/Documents/project/taskBoard/client/src/store/userReducer/actionUser.ts":"12","/Users/chistofor/Documents/project/taskBoard/client/src/api/userApi/userApi.ts":"13","/Users/chistofor/Documents/project/taskBoard/client/src/api/userApi/uploadFile/uploadImageApi.ts":"14","/Users/chistofor/Documents/project/taskBoard/client/src/api/const/const.js":"15","/Users/chistofor/Documents/project/taskBoard/client/src/api/routePage/routes.tsx":"16","/Users/chistofor/Documents/project/taskBoard/client/src/store/userReducer/constansUser.ts":"17","/Users/chistofor/Documents/project/taskBoard/client/src/store/boardReducer/constansBoard.ts":"18","/Users/chistofor/Documents/project/taskBoard/client/src/api/index.ts":"19","/Users/chistofor/Documents/project/taskBoard/client/src/pages/homePage/homePage.tsx":"20","/Users/chistofor/Documents/project/taskBoard/client/src/pages/login/loginPage.tsx":"21","/Users/chistofor/Documents/project/taskBoard/client/src/pages/registration/registartionWindow.tsx":"22","/Users/chistofor/Documents/project/taskBoard/client/src/pages/userPage/userPage.tsx":"23","/Users/chistofor/Documents/project/taskBoard/client/src/pages/boardspace/boardSpace.tsx":"24","/Users/chistofor/Documents/project/taskBoard/client/src/pages/workSpace/WorkSpace.tsx":"25","/Users/chistofor/Documents/project/taskBoard/client/src/store/boardReducer/boardThunk.ts":"26","/Users/chistofor/Documents/project/taskBoard/client/src/pages/components/main/Main.tsx":"27","/Users/chistofor/Documents/project/taskBoard/client/src/store/boardReducer/actionBoard.ts":"28","/Users/chistofor/Documents/project/taskBoard/client/src/api/boardApi/boardApi.ts":"29","/Users/chistofor/Documents/project/taskBoard/client/src/pages/boardspace/descriptionTask/descriptionTaskModal.tsx":"30","/Users/chistofor/Documents/project/taskBoard/client/src/pages/boardspace/BoardSpace.tsx":"31","/Users/chistofor/Documents/project/taskBoard/client/src/pages/boardspace/DescriptionTask/DescriptionTaskModal.tsx":"32","/Users/chistofor/Documents/project/taskBoard/client/src/pages/boardspace/BoardItem/BoardItem.tsx":"33","/Users/chistofor/Documents/project/taskBoard/client/src/pages/boardspace/ColumnItem/ColumnItem.tsx":"34","/Users/chistofor/Documents/project/taskBoard/client/src/pages/boardspace/TasksItem/TasksItem.tsx":"35","/Users/chistofor/Documents/project/taskBoard/client/src/pages/boardspace/TaskItem/TaskItem.tsx":"36"},{"size":241,"mtime":1629877235719,"results":"37","hashOfConfig":"38"},{"size":457,"mtime":1629877235799,"results":"39","hashOfConfig":"38"},{"size":1777,"mtime":1630909965140,"results":"40","hashOfConfig":"38"},{"size":585,"mtime":1630670131072,"results":"41","hashOfConfig":"38"},{"size":2554,"mtime":1630491006500,"results":"42","hashOfConfig":"38"},{"size":810,"mtime":1629959531256,"results":"43","hashOfConfig":"38"},{"size":2721,"mtime":1629959531319,"results":"44","hashOfConfig":"38"},{"size":923,"mtime":1629959531317,"results":"45","hashOfConfig":"38"},{"size":2369,"mtime":1630909965272,"results":"46","hashOfConfig":"38"},{"size":1944,"mtime":1630676634993,"results":"47","hashOfConfig":"38"},{"size":2740,"mtime":1630943665890,"results":"48","hashOfConfig":"38"},{"size":1893,"mtime":1630651805714,"results":"49","hashOfConfig":"38"},{"size":2749,"mtime":1630671853961,"results":"50","hashOfConfig":"38"},{"size":570,"mtime":1630671163584,"results":"51","hashOfConfig":"38"},{"size":438,"mtime":1630909965204,"results":"52","hashOfConfig":"38"},{"size":1116,"mtime":1630933262355,"results":"53","hashOfConfig":"38"},{"size":1907,"mtime":1630491006499,"results":"54","hashOfConfig":"38"},{"size":2451,"mtime":1630909965496,"results":"55","hashOfConfig":"38"},{"size":780,"mtime":1630671190120,"results":"56","hashOfConfig":"38"},{"size":595,"mtime":1629959531323,"results":"57","hashOfConfig":"38"},{"size":2485,"mtime":1630676777377,"results":"58","hashOfConfig":"38"},{"size":3762,"mtime":1630676716870,"results":"59","hashOfConfig":"38"},{"size":9223,"mtime":1630679596267,"results":"60","hashOfConfig":"38"},{"size":2531,"mtime":1630936057785,"results":"61","hashOfConfig":"38"},{"size":2967,"mtime":1630909965339,"results":"62","hashOfConfig":"38"},{"size":3887,"mtime":1630909965466,"results":"63","hashOfConfig":"38"},{"size":940,"mtime":1630909965273,"results":"64","hashOfConfig":"38"},{"size":2554,"mtime":1630909965402,"results":"65","hashOfConfig":"38"},{"size":2609,"mtime":1630921011718,"results":"66","hashOfConfig":"38"},{"size":972,"mtime":1630933218669,"results":"67","hashOfConfig":"38"},{"size":2531,"mtime":1630936057785,"results":"68","hashOfConfig":"38"},{"size":972,"mtime":1630933218669,"results":"69","hashOfConfig":"38"},{"size":447,"mtime":1630943665890,"results":"70","hashOfConfig":"38"},{"size":2182,"mtime":1630943665890,"results":"71","hashOfConfig":"38"},{"size":588,"mtime":1630943665890,"results":"72","hashOfConfig":"38"},{"size":937,"mtime":1630935531886,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"a3mr1x",{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"76"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"76"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"76"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"76"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"76"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"76"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"76"},{"filePath":"147","messages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"76"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"76"},"/Users/chistofor/Documents/project/taskBoard/client/src/index.tsx",[],["159","160"],"/Users/chistofor/Documents/project/taskBoard/client/src/store/index.ts",[],"/Users/chistofor/Documents/project/taskBoard/client/src/App.tsx",["161","162"],"import React, { useEffect, useState } from 'react';\n\nimport './App.css';\nimport { BrowserRouter, Switch } from 'react-router-dom';\nimport UserRegistrationForm from './pages/components/modalWindows/userRegistrationForm/UserRegistrationForm'\nimport UserLoginForm from './pages/components/modalWindows/loginForm/loginForm';\nimport AppRouter from './api/routePage/AppRouter';\n\nimport Header from './pages/components/header/header';\nimport { useDispatch } from 'react-redux';\nimport { updateUserInformationToken } from './store/userReducer/userThunk';\nimport { useAppSelector } from './store/reducers';\n// import { useAppSelector } from './store/reducers';\n\nfunction App() {\n  const [logForm, setLogForm] = useState(false);\n  const [regForm, setRegForm] = useState(false);\n  // const urlParams = useHistory();\n\n  // useEffect(() => getUsersByPage(urlParams), [urlParams])\n\n  const dispatch = useDispatch();\n\n  const isAuth = useAppSelector((state) => state.user.auth)\n\n  const onClickLog = () => {\n    setLogForm(!logForm);\n    if (regForm) {\n      setRegForm(!regForm);\n    }\n  }\n  const onClickReg = () => {\n    setRegForm(!regForm);\n    if (logForm) {\n      setLogForm(!logForm);\n    }\n  }\n\n  useEffect(() => {\n    dispatch(updateUserInformationToken());\n  }, [])\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header onClickLog={onClickLog}\n          onClickReg={onClickReg}\n        />\n        {regForm && <UserRegistrationForm\n          onClickReg={onClickReg}\n        />}\n        {logForm && <UserLoginForm\n          onClickLog={onClickLog}\n        />}\n        <AppRouter />\\\n\n        <Switch>\n          {/* <Route path=\"registration\" component={UserRegistrationForm}/> */}\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/chistofor/Documents/project/taskBoard/client/src/store/reducers.ts",[],"/Users/chistofor/Documents/project/taskBoard/client/src/store/userReducer/userThunk.ts",["163"],"import { getAvatarInfo, uploadImageApi } from \"../../api/userApi/uploadFile/uploadImageApi\";\nimport { editUsers, regUser, logUser, getToken, editUsersEmailPassword} from \"../../api/userApi/userApi\";\nimport { IUser } from \"../../types/types\";\nimport { AppDispatch } from \"../reducers\";\nimport {\n  actionsGetTokenError,\n  actionsLogAuth,\n  actionsLogError,\n  actionsLogOut,\n  actionsSetError,\n  actionsUpdateUser,\n  actionsSetAuth,\n  actionsUploadError,\n  actionsUploadImage\n} from './actionUser'\n\nexport const registrationUsers = (user: IUser) => async (dispatch: AppDispatch): Promise<void> => {\n  try {\n    const data = await regUser(user)\n    localStorage.setItem('token', data.token)\n    dispatch(actionsUpdateUser(data.newUser));\n    dispatch(actionsSetAuth(true));\n    } catch (error: any) {\n    dispatch(actionsSetError(error.message))\n  }\n};\nexport const loginUser = (user: IUser) => async (dispatch: AppDispatch): Promise<void> => {\n  try {\n    const data = await logUser(user)\n    localStorage.setItem('token', data.token)\n    dispatch(actionsUpdateUser(data.userLogin));\n    dispatch(actionsLogAuth(true));\n  } catch (error: any) {\n    dispatch(actionsLogError(error.message))\n  }\n};\nexport const updateUser = (user: IUser) => async (dispatch: AppDispatch): Promise<void> => {\n  try {\n    const data = await editUsers(user)\n    dispatch(actionsUpdateUser(data));\n    dispatch(actionsLogAuth(true));\n  } catch (error: any) {\n    dispatch(actionsLogError(error.message))\n  }\n};\nexport const editUsersEmail = (user: IUser) => async (dispatch: AppDispatch): Promise<void> => {\n  try {\n    const data = await editUsersEmailPassword(user)\n    dispatch(actionsUpdateUser(data));\n    dispatch(actionsLogAuth(true));\n  } catch (error: any) {\n    dispatch(actionsLogError(error.message))\n  }\n};\nexport const updateUserInformationToken = () => async (dispatch: AppDispatch): Promise<void> => {\n  try {\n    const user = await getToken();\n    dispatch(actionsUpdateUser(user));\n    dispatch(actionsSetAuth(true));\n  } catch (error: any) {\n    dispatch(actionsGetTokenError(error.message))\n  }\n};\nexport const uploadUserAvatar = (file: FormData) => async (dispatch: AppDispatch): Promise<void> => {\n  try {\n    const data = await uploadImageApi(file)\n    const pathImage = data.file.path\n    console.log(pathImage)\n    dispatch(actionsUploadImage(pathImage));\n  } catch (error: any) {\n    dispatch(actionsUploadError(error.message))\n  }\n};\nexport const logOutThunk = () => (dispatch: AppDispatch) => {\n  dispatch(actionsLogOut());\n  localStorage.clear();\n};\n","/Users/chistofor/Documents/project/taskBoard/client/src/api/routePage/AppRouter.tsx",[],"/Users/chistofor/Documents/project/taskBoard/client/src/pages/components/modalWindows/userRegistrationForm/UserRegistrationForm.tsx",[],"/Users/chistofor/Documents/project/taskBoard/client/src/pages/components/modalWindows/loginForm/loginForm.tsx",[],"/Users/chistofor/Documents/project/taskBoard/client/src/pages/components/header/header.tsx",[],"/Users/chistofor/Documents/project/taskBoard/client/src/store/userReducer/userReducer.ts",[],"/Users/chistofor/Documents/project/taskBoard/client/src/store/boardReducer/boardReducer.ts",[],"/Users/chistofor/Documents/project/taskBoard/client/src/store/userReducer/actionUser.ts",[],"/Users/chistofor/Documents/project/taskBoard/client/src/api/userApi/userApi.ts",["164"],"import { Dispatch } from 'react';\nimport { Action } from 'redux';\nimport { IUser, ILogUser } from \"../../types/types\";\nimport axios from '../index';\n\nexport const regUser = async (user: IUser) => {\n  const res = await axios.post('/registration', user);\n  console.log('User info registration', res.data);\n  return res.data\n};\n\nexport const logUser = async (user: ILogUser) => {\n  const res = await axios.post('/login', user);\n  console.log('res.data when login user', res.data)\n  return res.data\n};\n\nexport const getToken = async () => {\n  const res = await axios.get('/token');\n  console.log('User info token update', res.data);\n  return res.data\n};\n\nexport const editUsers = async (user: IUser) => {\n  const res = await axios.put('/user', user);\n  if (res.status === 200) {\n    console.log('User info update2', res.data);\n  }\n  return res.data\n};\n\nexport const editUsersEmailPassword = async (user: IUser) => {\n  const res = await axios.put('/user/email', user);\n  if (res.status === 200) {\n    console.log('Update user email and password', res.data);\n  }\n  return res.data\n};\n\nexport const logOut = (): void => {\n  localStorage.clear();\n  document.location.href = 'http://localhost:3000/';\n};\n\n\nexport const deleteUsers = (user: {\n  id: number,\n  email: string,\n  password: string,\n}, token: string) => {\n  return async (dispatch: Dispatch<Action>): Promise<void> => {\n\n    const response = await axios.delete(`/users/${user.id}`, {\n\n      headers: { Authorization: localStorage.getItem('token') }\n    })\n\n    const result = await response.data;\n\n    if (response.status === 200) {\n      console.log(result);\n      const users = [{\n        id: user.id,\n        email: user.email,\n      }];\n      document.location.href = 'http://localhost:3000/';\n    }\n    else {\n      alert(result.message);\n    }\n  };\n};\n\n// const getOne = async ({ one, two }) => {\n//   const res = await axios.get('zalupa', {\n//     params: {\n//       id: 1,\n//       one,\n//       two\n//     }\n//   })\n// }\n// export const editUsers = async (user: IUser) => {\n//   try {\n//     const res = await axios.put('/user', user);\n//     console.log('User info registaration', res.data);\n//     // document.location.href = 'http://localhost:3000/login';\n//     return res.data\n\n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n\n// export const getToken = async () => {  \n//   try {\n//     const res = await axios.get('/token');\n//     console.log('User info token update', res.data);\n//         if (res.status == 200) {\n//       console.log(res);\n//       const users = [{\n//         id: user.id,\n//         surname: user.surname,\n//         email: user.email,\n//         dob: user.dob,\n//       }];\n//     return res.data\n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n","/Users/chistofor/Documents/project/taskBoard/client/src/api/userApi/uploadFile/uploadImageApi.ts",[],"/Users/chistofor/Documents/project/taskBoard/client/src/api/const/const.js",[],["165","166"],"/Users/chistofor/Documents/project/taskBoard/client/src/api/routePage/routes.tsx",[],"/Users/chistofor/Documents/project/taskBoard/client/src/store/userReducer/constansUser.ts",[],"/Users/chistofor/Documents/project/taskBoard/client/src/store/boardReducer/constansBoard.ts",[],"/Users/chistofor/Documents/project/taskBoard/client/src/api/index.ts",[],"/Users/chistofor/Documents/project/taskBoard/client/src/pages/homePage/homePage.tsx",[],"/Users/chistofor/Documents/project/taskBoard/client/src/pages/login/loginPage.tsx",["167","168"],"\nimport React, { useEffect, useState } from 'react';\n\nimport styles from './loginPage.module.scss';\nimport Main from \"../components/main/Main\";\nimport closeButton from '../../icon/close.png';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { IUser } from '../../types/types';\nimport { loginUser } from \"../../store/userReducer/userThunk\";\nimport { useAppSelector } from '../../store/reducers';\nimport { useHistory } from 'react-router';\n\nconst UserLogin: React.FC = (): JSX.Element => {\n  const [userLogin, setUserLogin] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n\n  const auth = useAppSelector((state) => state.user.auth)\n  let history = useHistory();\n  const dispatch = useDispatch();\n\n  const errorWrapper = useAppSelector((state) => state.user.error)\n  const [moadlMessage, setMoadlMessage] = useState<string | null>('');\n\n  const userInfo: React.FormEventHandler<HTMLFormElement> = (event) => {\n    event.preventDefault();\n    console.log('event', event);\n\n    const user: IUser = {\n      login: userLogin,\n      email: userEmail,\n      password: userPassword,\n      name: '',\n      surname: '',\n      dob: '',\n      avatarId: null\n    };\n    dispatch(loginUser(user));\n    setMoadlMessage(errorWrapper)\n  };\n\n  useEffect(() => {\n    if (auth) { history.push(\"/user\") }\n  }, [auth, history])\n\n  return (\n    <Main>\n\n      {moadlMessage && <div className={styles.modal_Inform_Window}>\n        <div className={styles.modal_Inform_Window_h4}>\n          <h4>Sorry, but something went wrong:</h4>\n          <h6>{moadlMessage}</h6>\n        </div>\n        <div className={styles.modal_Inform_Window_link}>\n          <a onClick={() => setMoadlMessage('')}>\n            <img src={closeButton} className={styles.close_button} alt='User Avatar'></img>\n          </a>\n        </div>\n      </div>}\n\n      <form className={styles.form} onSubmit={userInfo}>\n        <h1>LOGIN</h1>\n        <input onChange={(e) => setUserLogin(e.target.value)} name='login' type=\"text\" placeholder='Enter your Login' />\n        <input onChange={(e) => setUserEmail(e.target.value)} name='email' type=\"email\" placeholder='Enter your Email' />\n        <input onChange={(e) => setUserPassword(e.target.value)} name='password' type=\"password\" placeholder='Enter your Password' />\n        <button type=\"submit\" className={styles.registrationButton}>LOGIN</button>\n      </form>\n    </Main>\n  );\n}\nexport default UserLogin;\n","/Users/chistofor/Documents/project/taskBoard/client/src/pages/registration/registartionWindow.tsx",["169","170"],"import Main from \"../components/main/Main\";\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styles from './userRegistrationFormStyle.module.scss';\nimport closeButton  from '../../icon/close.png';\n\n\nimport { registrationUsers } from \"../../store/userReducer/userThunk\";\nimport { IUser } from \"../../types/types\";\nimport { useAppSelector } from \"../../store/reducers\";\nimport { useHistory } from \"react-router\";\n\nconst UserRegistration: React.FC = (): JSX.Element => {\n  const [userName, setUserName] = useState('');\n  const [userSurName, setUserSurName] = useState('');\n  const [userLogin, setUserLogin] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n  const [userDob, setUserDob] = useState('');\n\n  const auth = useAppSelector((state) => state.user.auth)\n\n  const errorWrapper = useAppSelector((state) => state.user.error)\n  const [moadlMessage, setMoadlMessage] = useState<string | null>('');\n\n  const dispatch = useDispatch();\n\n  let history = useHistory();\n\n\n  const userInfo: React.FormEventHandler<HTMLFormElement> = (event) => {\n    event.preventDefault();\n    console.log('event', event);\n    const parseDate = new Date(userDob);\n\n    const user: IUser = {\n      name: userName,\n      surname: userSurName,\n      login: userLogin,\n      email: userEmail,\n      password: userPassword,\n      dob: parseDate,\n      avatarId: null\n    };\n    dispatch(registrationUsers(user));\n    setMoadlMessage(errorWrapper)\n  };\n\n  useEffect(() => {\n    if (auth) {history.push(\"/user\")}\n    }, [auth, history])\n\n  return (\n    <Main>\n\n    {moadlMessage && <div className={styles.modal_Inform_Window}>\n      <div className={styles.modal_Inform_Window_h4}>\n        <h4>Sorry, but something went wrong:</h4>\n        <h6>{moadlMessage}</h6>\n      </div>\n      <div className={styles.modal_Inform_Window_link}>\n      <a onClick={() => setMoadlMessage('')}>\n      <img src={closeButton} className={styles.close_button} alt='User Avatar'></img>\n      </a>\n      </div>\n    </div>}\n    \n      <form className={styles.form} onSubmit={userInfo}>\n        <h1>REGISTRATION</h1>\n        <input onChange={(e) => setUserName(e.target.value)} name='name' type=\"text\" placeholder='Enter your Name' />\n        <input onChange={(e) => setUserSurName(e.target.value)} name='surname' type=\"text\" placeholder='Enter your Last Name' />\n        <input onChange={(e) => setUserLogin(e.target.value)} name='login' type=\"text\" placeholder='Enter your Login' />\n        <input onChange={(e) => setUserEmail(e.target.value)} name='email' type=\"email\" placeholder='Enter your Email' />\n        <input onChange={(e) => setUserPassword(e.target.value)} name='password' type=\"password\" placeholder='Enter your Password' />\n        <input onChange={(e) => setUserDob(e.target.value)} name='dob' type=\"date\" placeholder='Enter your Date of Born' />\n        {/* <input name='avatar' type=\"text\" placeholder='Choice your Avatar'/> */}\n        <button type=\"submit\" className={styles.registrationButton}>REGISTRATION</button>\n      </form>\n    </Main>\n  );\n}\nexport default UserRegistration;\n\n\n//  const getUserIfo: React.FC<Props> = (props) =>{\n//     const [state, setState] = useState<UserInterface[]>([]);\n\n//     useEffect(() => {\n//       console.log('getUserIfo')\n//       instance.get('user')\n//         .then(r => {\n//           console.log('result', r.data)\n//           setState(r.data)\n//         })\n//         .catch(e => console.log('error', e.message))\n//     }, []);\n\n//     return (\n//     <main className={styles.main}>\n//       {state.map(item => <h1 key={item.id}>{item.name}</h1>)}\n//       {props.children}\n//     </main>\n//       );\n//   }\n\n\n","/Users/chistofor/Documents/project/taskBoard/client/src/pages/userPage/userPage.tsx",["171","172","173","174","175","176","177","178","179","180","181"],"import Main from \"../components/main/Main\";\n// import {useDispatch, useSelector} from \"react-redux\";\n// import { FormEvent } from 'react';\nimport React, { useState, useRef, useCallback, useEffect } from 'react';\nimport { baseURL } from '../../api/index';\n\nimport styles from './userPage.module.scss';\nimport baseAvatar from '../../image/wtf.jpeg';\nimport closeButton  from '../../icon/close.png';\nimport { useAppSelector } from \"../../store/reducers\";\nimport { IUser } from \"../../types/types\";\nimport { editUsersEmail, updateUser, updateUserInformationToken, uploadUserAvatar } from \"../../store/userReducer/userThunk\";\nimport { useDispatch } from \"react-redux\";\nimport { format, compareAsc } from 'date-fns';\nimport { Card, Form, Button, Figure } from 'react-bootstrap';\nimport axios from '../../api/index';\n\nconst UserPage: React.FC = (): JSX.Element => {\n  const { name: stateName, dob: stateDob, email: stateEmail,\n    login: stateLogin, surname: stateSurName, avatarId: stateAvatarId\n  } = useAppSelector((state) => state.user.user)\n\n  const error = useAppSelector((state) => state.user.error)\n  console.log('ERRRROR', error)\n\n  const thrueDateFormat = format(new Date(stateDob), 'MM/dd/yyyy')\n  const dispatch = useDispatch();\n\n  const image = useAppSelector((state) => state.user.user.Image)\n  // const imageIdstate = useAppSelector((state) => state.user.user)\n  const imageIdstate = useAppSelector((state) => state)\n  console.log('tut padaet', image)\n  console.log('tut padaet2', imageIdstate)\n  const urlAvatar = !image ? baseAvatar : baseURL + '/' + image?.pathImages;\n  \n\n  const [userName, setUserName] = useState(stateName);\n  const [userSurName, setUserSurName] = useState(stateSurName);\n  const [userLogin, setUserLogin] = useState(stateLogin);\n  const [userDob, setUserDob] = useState(stateDob);\n  \n  const [userEmail, setUserEmail] = useState(stateEmail);\n  const [userPassword, setUserPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const [formSwitch, setFormSwitch] = useState(false);\n  const [valuePassword, setValuePassword] = useState(false);\n  const [userAvatar, setUserAvatar] = useState<string | Blob>('');;\n\n  const [moadlMessage, setMoadlMessage] = useState('');\n    const uploadAvatar = \"Your avatar has been update\"\n    const updaitUserInfo = \"Your user information has been update\"\n    const updaitEmailPassword = \"Update success\"\n\n  const userInfo: React.FormEventHandler<HTMLFormElement> = (event) => {\n    event.preventDefault();\n    console.log('event', event);\n\n    const user: IUser = {\n      name: userName,\n      surname: userSurName,\n      login: userLogin,\n      password: userPassword,\n      dob: userDob,\n      email: userEmail,\n    };\n    console.log('send', user);\n\n    dispatch(updateUser(user));\n    setMoadlMessage(updaitUserInfo)\n\n };\n\n  const userInfoPassEmail: React.FormEventHandler<HTMLFormElement> = (event) => {\n    event.preventDefault();\n    console.log('Password and Email event', event);\n\n    const validNewPassword = (newPassword === confirmPassword);\n    if(!validNewPassword){\n      setValuePassword(true)\n    } else {\n      const updatePassword = newPassword\n    const user: IUser = {\n      name: userName,\n      surname: userSurName,\n      login: userLogin,\n      password: updatePassword,\n      dob: userDob,\n      email: userEmail,\n    };\n    console.log('send', user);\n\n    dispatch(editUsersEmail(user));\n    setValuePassword(false)\n    setMoadlMessage(updaitEmailPassword)\n\n }};\n\n  const submitUserImg = (e: React.FormEvent<HTMLFormElement>) => {\n    const formData = new FormData();\n    e.preventDefault();\n    formData.append('file', userAvatar);\n    // console.log(\"FORM DATA DLYA DIMY\", formData)\n    dispatch(uploadUserAvatar(formData));\n    setUserAvatar('')\n    setMoadlMessage(uploadAvatar)\n  };\n\n  const setUseFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.currentTarget.files?.length) {\n      const currentAvatar = e.currentTarget.files[0];\n      setUserAvatar(currentAvatar);\n    }\n  };\n\n  return (\n    <Main >\n\n    {moadlMessage && <div className={styles.modal_Inform_Window}>\n      <div className={styles.modal_Inform_Window_h4}>\n        <h4>{moadlMessage}test</h4>\n      </div>\n      <div className={styles.modal_Inform_Window_link}>\n      <a onClick={() => setMoadlMessage('')}>\n      <img src={closeButton} className={styles.close_button} alt='close'></img>\n      </a>\n      </div>\n    </div>}\n\n      <div className={styles.user_update_information_main_wrapper}>\n\n        <div className={styles.default_user_info_wrapper}>\n\n          <div className={styles.user_avatar}>\n            <img src={urlAvatar} className={styles.circle_avatar} alt='User Avatar'></img>\n          </div>\n\n          <form\n            onSubmit={(e) => submitUserImg(e)}\n            className={styles.avatar_form}\n          >\n            <div className={styles.upload_wrapper}>\n              <label htmlFor=\"inp\" className={styles.input_label}>upload avatar</label>\n              <input id=\"inp\" className={styles.upload_input_form}\n                type=\"file\" name=\"file\"\n                onChange={(e) => setUseFile(e)}\n              />\n            </div>\n            <Button\n              variant=\"outline-primary\"\n              className={styles.input_label}\n              as=\"input\" type=\"submit\" value=\"Load\"\n              hidden={!userAvatar}\n              // onClick={(e) => setUserAvatar('')}\n            />\n          </form>\n\n          <div className={styles.def_string_info}>\n            <h6>Name:</h6><p>{stateName}</p>\n          </div>\n\n          <div className={styles.def_string_info}>\n            <h6>Last Name:</h6><p>{stateSurName}</p>\n          </div>\n\n          <div className={styles.def_string_info}>\n            <h6>Login:</h6><p>{stateLogin}</p>\n          </div>\n\n          <div className={styles.def_string_info}>\n            <h6>Date of born:</h6><p>{thrueDateFormat}</p>\n          </div>\n          {/* USER EMAIL */}\n          {/* <div className={styles.link_change_email}>\n        <a href=\"/email\">Change Email@adress</a>\n      </div> */}\n          {/* <button onSubmit={(deleteUsers)} className={styles.del_user_button}>DELETE USER</button> */}\n          {/* <span onClick={() => deleteUsers({email, })} className={styles.del_user_button}>DELETE USER</span> */}\n        </div>\n\n        <div className={styles.change_user_info_wrapper}>\n        {!formSwitch && <h1>Change user information</h1>}\n        {formSwitch && <h1>Change E-mail and password</h1>}\n\n          <div className={styles.change_update_form_window}>\n            <button className={styles.change_user_form_window_left} onClick={() => setFormSwitch(false)} >USER INFO</button>\n            <button className={styles.change_user_form_window_right} onClick={() => setFormSwitch(true)}>EMAIL & PASSWORD</button>\n          </div>\n\n          {!formSwitch && <form className={styles.form} onSubmit={userInfo}>\n            <input onChange={(e) => setUserName(e.target.value)} name='name' required defaultValue={stateName} type=\"text\" placeholder='Enter your Name' />\n            <input onChange={(e) => setUserSurName(e.target.value)} name='surname' required defaultValue={stateSurName} type=\"text\" placeholder='Enter your Last Name' />\n            <input onChange={(e) => setUserLogin(e.target.value)} name='login' required defaultValue={stateLogin} type=\"text\" placeholder='Enter your Login' />\n            {/* <input onChange={(e) => setUserEmail(e.target.value)} name='email' required defaultValue={stateEmail} type=\"text\" placeholder='Enter your Email' /> */}\n            {/* <input name='oldPassword' type=\"password\" placeholder='Enter your Old password'/>\n        <input name='newPassword' type=\"password\" placeholder='Enter your New password'/> */}\n            {/* <input onChange={(e) => setUserPassword(e.target.value)} name='newPasswordControl' required type=\"password\" placeholder='Confirm password' /> */}\n            <input onChange={(e) => setUserDob(e.target.value)} name='dob' type=\"date\" placeholder='Enter your Date of Born' />\n            <button type=\"submit\" className={styles.registrationButton}>update information</button>\n          </form>}\n\n          {formSwitch && <form className={styles.form} onSubmit={userInfoPassEmail}>\n            <input onChange={(e) => setUserEmail(e.target.value)} name='email' required defaultValue={stateEmail} type=\"email\" placeholder='Enter New Email' />\n            <input onChange={(e) => setUserPassword(e.target.value)} name='Password' required type=\"password\" placeholder='Enter Old Password' />\n            <input onChange={(e) => setNewPassword(e.target.value)} name='newPassword' required type=\"password\" placeholder='Enter your New Password' />\n            <input onChange={(e) => setConfirmPassword(e.target.value)} name='confirmPassword' required type=\"password\" placeholder='Confirm New Password' />\n              {valuePassword && <p className={styles.password_valid_message}>Password mismatch</p>}\n            <button type=\"submit\" className={styles.registrationButton}>update email and password</button>\n          </form>}\n        </div>\n      </div>\n    </Main>\n  );\n\n};\n\nexport default UserPage;","/Users/chistofor/Documents/project/taskBoard/client/src/pages/boardspace/boardSpace.tsx",["182","183","184","185","186","187","188","189","190","191","192","193","194","195","196"],"/Users/chistofor/Documents/project/taskBoard/client/src/pages/workSpace/WorkSpace.tsx",["197"],"import React, { useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\n\nimport styles from './workSpace.module.scss';\nimport closeButton from '../../icon/close.png';\n\n\nimport Main from '../components/main/Main';\nimport { useAppSelector } from '../../store/reducers';\nimport { IBoard, IColumn } from '../../types/types';\nimport { useDispatch } from 'react-redux';\nimport { creatBoard, deleteBoard, getAllBoards, getAllColumns } from '../../store/boardReducer/boardThunk';\nimport { BOARD_WINDOW } from '../../api/const/const';\n\nconst WorkSpace = () => {\n\n  const dispatch = useDispatch();\n  let history = useHistory();\n\n\n  const userBoardArray = useAppSelector((state) => state.board.board)\n  const [titleBoard, setTitleBoard] = useState('');\n\n\n  const boardInfo = (event: React.FormEvent<HTMLFormElement>) => {\n    console.log('event', event);\n\n    const board: IBoard = {\n      title: titleBoard,\n    };\n    console.log('send', board);\n\n    dispatch(creatBoard(board));\n    setTitleBoard(\"\");\n    event.preventDefault();\n   };\n\n   const deleteOneBoard = (id: number | undefined) => {\n    const board: IBoard = {\n      id: id,\n    };\n    console.log('BdfgsdgsD ID',board)\n    dispatch(deleteBoard(board));\n   }\n\n   const getAllColumnsClick = (id: number | undefined) => {\n    const column: IColumn = {\n      id,\n    };\n    console.log('BOARD ID',column)\n    dispatch(getAllColumns(column));\n    // dispatch(deleteBoard(column));\n    history.push(BOARD_WINDOW.replace(':id', `${column?.id}`))\n   }\n\n  useEffect(() => {\n    dispatch(getAllBoards());\n  }, [dispatch])\n\n  return (\n    <Main>\n      <div className={styles.workSpace}>\n        <div className={styles.header_input_wrapper}>\n          <form onSubmit={boardInfo} className={styles.header_input_form}>\n            <input\n              onChange={(e) => setTitleBoard(e.target.value)}\n              name='board' required\n              // defaultValue=\"New Board\" \n              value={titleBoard}\n              type=\"text\"\n              placeholder='New board'\n            />\n            <button type=\"submit\" className={styles.create_button}>CREATE</button>\n          </form >\n        </div>\n\n        <div className={styles.board_wrapper}\n        // onClick={() => { history.push(\"/user\") }}\n        >\n          {userBoardArray.map(board => <div className={styles.board}>\n            <div className={styles.close_button_wrapper}>\n              <a onClick={() => deleteOneBoard(board.id)}>\n                <img src={closeButton} className={styles.close_button} alt='delete'></img>\n              </a>\n            </div>\n            <p className={styles.board__title}\n              // onClick={() => (getAllColumnsClick(board.id), { history.push(BOARD_WINDOW) })}\n              onClick={() => getAllColumnsClick(board.id)}\n            >\n              {board.title}\n              </p>\n          </div>\n          )}\n        </div>\n      </div>\n    </Main>\n  );\n};\n\nexport default WorkSpace;","/Users/chistofor/Documents/project/taskBoard/client/src/store/boardReducer/boardThunk.ts",[],"/Users/chistofor/Documents/project/taskBoard/client/src/pages/components/main/Main.tsx",["198"],"import styles from './mainStyle.module.scss';\nimport blacWhiteButton from '../../../icon/daynight.png';\n\n\nimport React, { ReactNode, useState} from 'react';\n\ntype Props = {\n  children?: ReactNode | undefined;\n}\n\n\nconst Main: React.FC<Props> = (props) =>{\n\n  const [themeStyle, setThemeStyle] = useState(false)\n\n  const changeTheme = () => {\n      if(themeStyle === true){\n        setThemeStyle(false)\n      } else {\n        setThemeStyle(true)\n      }\n      console.log('theme state', changeTheme)\n  }\n  // export const styleState = themeStyle;\n\n  return (\n  <main className={styles.main}>\n      <div className={styles.color_theme_wrapper}>\n        <a onClick={() => changeTheme()}>\n          <img src={blacWhiteButton} className={styles.light_style_button} alt='color_theme'></img>\n        </a>\n      </div>\n\n    {/* {state.map(item => <h1 key={item.id}>{item.name}</h1>)} */}\n    {props.children}\n  </main>\n    );\n}\n\nexport default Main;\n","/Users/chistofor/Documents/project/taskBoard/client/src/store/boardReducer/actionBoard.ts",[],"/Users/chistofor/Documents/project/taskBoard/client/src/api/boardApi/boardApi.ts",[],"/Users/chistofor/Documents/project/taskBoard/client/src/pages/boardspace/descriptionTask/descriptionTaskModal.tsx",["199","200","201"],"/Users/chistofor/Documents/project/taskBoard/client/src/pages/boardspace/BoardSpace.tsx",["202","203","204","205","206","207","208","209","210","211","212","213","214"],"import React, { useState } from 'react';\nimport styles from './boardSpace.module.scss';\nimport deleteButton from '../../icon/deleteAll.png';\nimport deleteTaskButton from '../../icon/close.png';\n\nimport Main from '../components/main/Main';\nimport DescriptionTask from './DescriptionTask/DescriptionTaskModal'\nimport { useAppSelector } from '../../store/reducers';\nimport { IColumn, ITask } from '../../types/types';\nimport { useLocation, useParams } from 'react-router';\nimport { useDispatch } from 'react-redux';\nimport { creatColumn, creatTask, deleteColumn, deleteTask, getAllTasks } from '../../store/boardReducer/boardThunk';\nimport Boarditem from './BoardItem/BoardItem';\n\nconst BoardSpace = () => {\n  // const location = useLocation()\n  //@ts-ignore\n  const { id } = useParams()\n  const useBoardId = useParams()\n  //@ts-ignore\n  const boardIdNumber = +useBoardId.id\n\n  const dispatch = useDispatch();\n\n  const userColumnArray = useAppSelector((state) => state.board.column)\n  const userTaskArray = useAppSelector((state) => state.board.task)\n  const activeBoard = useAppSelector((state) => state.board.clickBoardId)\n\n  const [titleColumn, setTitleColumn] = useState('');\n  const [positionColumn, setPositionColumn] = useState(null);\n\n  const [visionDescription, setVisionDescription] = useState(false);\n\n\n  const craetNewColumnForm = (event: React.FormEvent<HTMLFormElement>) => {\n    const column: IColumn = {\n      title: titleColumn,\n      position: positionColumn,\n      boardId: boardIdNumber,\n    }\n    dispatch(creatColumn(column));\n    setTitleColumn(\"\");\n    event.preventDefault();\n  }\n\n  const getAllTask = (id: number | undefined) => {\n    const task: ITask = {\n      id: id\n    };\n    dispatch(getAllTasks(task))\n  }\n\n  return (\n    <Main>\n      <div className={styles.columnSpace}>\n        <div className={styles.new_column_input_wrapper}>\n          <form onSubmit={craetNewColumnForm} className={styles.header_input_form}>\n            <input\n              onChange={(e) => setTitleColumn(e.target.value)}\n              name='board' required\n              // defaultValue=\"New Board\" \n              value={titleColumn}\n              type=\"text\"\n              placeholder='New column'\n            />\n            <button type=\"submit\" className={styles.create_button}>CREATE</button>\n          </form >\n        </div>\n      </div>\n      <Boarditem  />\n      {visionDescription && <DescriptionTask \n        // visionDescription = {visionDescription}\n      />}\n      \n    </Main>\n  );\n};\n\nexport default BoardSpace;","/Users/chistofor/Documents/project/taskBoard/client/src/pages/boardspace/DescriptionTask/DescriptionTaskModal.tsx",["215","216","217"],"import React, { useState } from 'react';\n\nimport styles from './descriptionTaskModal.module.scss';\nimport deleteTaskButton from '../../../icon/close.png';\n\nconst DescriptionTask = () => {\n\nconst [taskDescription, setTaskDescription] = useState('');\n\nreturn (\n    <div className={styles.description_wrapper}>\n      <h5>Change Task Name</h5>\n      <form>\n      <input className={styles.input_task_title}></input>\n      </form>\n\n      <h6>Description</h6>\n      <form className={styles.description_form}>\n      <textarea className={styles.input_description}></textarea>\n      <button type=\"submit\" className={styles.save_description_button}>SAVE</button>\n      </form>\n\n      <div className={styles.close_button_wrapper}>\n        <a \n        // onClick={() => setVisionDescription(false)}\n        >\n          <img src={deleteTaskButton} className={styles.close_description_button} alt='close'></img>\n        </a>\n      </div>\n\n    </div>\n)\n}\nexport default DescriptionTask\n\n\n","/Users/chistofor/Documents/project/taskBoard/client/src/pages/boardspace/BoardItem/BoardItem.tsx",[],"/Users/chistofor/Documents/project/taskBoard/client/src/pages/boardspace/ColumnItem/ColumnItem.tsx",["218","219","220","221","222","223","224"],"/Users/chistofor/Documents/project/taskBoard/client/src/pages/boardspace/TasksItem/TasksItem.tsx",["225"],"/Users/chistofor/Documents/project/taskBoard/client/src/pages/boardspace/TaskItem/TaskItem.tsx",["226"],"import React from 'react'\nimport { useDispatch } from 'react-redux';\n\nimport { ITask } from '../../../types/types';\nimport styles from '../boardSpace.module.scss';\nimport deleteTaskButton from '../../../icon/close.png';\nimport { deleteTask } from '../../../store/boardReducer/boardThunk';\n\ninterface Props {\n  task:ITask\n}\n\nconst TaskItem: React.FC<Props> = ({task}) => {\n\n  const dispatch = useDispatch();\n\n  const deleteOneTask = (id: number | undefined) => {\n    const task: ITask = {\n      id: id,\n    };\n    console.log('BdfgsdgsD ID', task)\n    dispatch(deleteTask(task));\n  }\n\n  return(\n    <div\n    className={styles.task_style}\n    draggable={true}\n    >\n    {task.title}\n\n    <div className={styles.close_button_wrapper}>\n      <a onClick={() => deleteOneTask(task.id)}>\n        <img src={deleteTaskButton} className={styles.delete_task_button} alt='delete'></img>\n      </a>\n    </div>\n  </div>\n  )\n}\n\nexport default TaskItem\n",{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","severity":1,"message":"232","line":24,"column":9,"nodeType":"233","messageId":"234","endLine":24,"endColumn":15},{"ruleId":"235","severity":1,"message":"236","line":41,"column":6,"nodeType":"237","endLine":41,"endColumn":8,"suggestions":"238"},{"ruleId":"231","severity":1,"message":"239","line":1,"column":10,"nodeType":"233","messageId":"234","endLine":1,"endColumn":23},{"ruleId":"231","severity":1,"message":"240","line":62,"column":13,"nodeType":"233","messageId":"234","endLine":62,"endColumn":18},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","replacedBy":"230"},{"ruleId":"231","severity":1,"message":"241","line":8,"column":10,"nodeType":"233","messageId":"234","endLine":8,"endColumn":21},{"ruleId":"242","severity":1,"message":"243","line":56,"column":11,"nodeType":"244","endLine":56,"endColumn":50},{"ruleId":"231","severity":1,"message":"241","line":4,"column":23,"nodeType":"233","messageId":"234","endLine":4,"endColumn":34},{"ruleId":"242","severity":1,"message":"243","line":63,"column":7,"nodeType":"244","endLine":63,"endColumn":46},{"ruleId":"231","severity":1,"message":"245","line":4,"column":27,"nodeType":"233","messageId":"234","endLine":4,"endColumn":33},{"ruleId":"231","severity":1,"message":"246","line":4,"column":35,"nodeType":"233","messageId":"234","endLine":4,"endColumn":46},{"ruleId":"231","severity":1,"message":"247","line":4,"column":48,"nodeType":"233","messageId":"234","endLine":4,"endColumn":57},{"ruleId":"231","severity":1,"message":"248","line":12,"column":38,"nodeType":"233","messageId":"234","endLine":12,"endColumn":64},{"ruleId":"231","severity":1,"message":"249","line":14,"column":18,"nodeType":"233","messageId":"234","endLine":14,"endColumn":28},{"ruleId":"231","severity":1,"message":"250","line":15,"column":10,"nodeType":"233","messageId":"234","endLine":15,"endColumn":14},{"ruleId":"231","severity":1,"message":"251","line":15,"column":16,"nodeType":"233","messageId":"234","endLine":15,"endColumn":20},{"ruleId":"231","severity":1,"message":"252","line":15,"column":30,"nodeType":"233","messageId":"234","endLine":15,"endColumn":36},{"ruleId":"231","severity":1,"message":"253","line":16,"column":8,"nodeType":"233","messageId":"234","endLine":16,"endColumn":13},{"ruleId":"231","severity":1,"message":"254","line":20,"column":57,"nodeType":"233","messageId":"234","endLine":20,"endColumn":70},{"ruleId":"242","severity":1,"message":"243","line":125,"column":7,"nodeType":"244","endLine":125,"endColumn":46},{"ruleId":"231","severity":1,"message":"255","line":3,"column":8,"nodeType":"233","messageId":"234","endLine":3,"endColumn":20},{"ruleId":"231","severity":1,"message":"256","line":4,"column":8,"nodeType":"233","messageId":"234","endLine":4,"endColumn":24},{"ruleId":"231","severity":1,"message":"257","line":10,"column":10,"nodeType":"233","messageId":"234","endLine":10,"endColumn":21},{"ruleId":"231","severity":1,"message":"258","line":12,"column":23,"nodeType":"233","messageId":"234","endLine":12,"endColumn":32},{"ruleId":"231","severity":1,"message":"259","line":12,"column":34,"nodeType":"233","messageId":"234","endLine":12,"endColumn":46},{"ruleId":"231","severity":1,"message":"260","line":12,"column":48,"nodeType":"233","messageId":"234","endLine":12,"endColumn":58},{"ruleId":"231","severity":1,"message":"261","line":18,"column":11,"nodeType":"233","messageId":"234","endLine":18,"endColumn":13},{"ruleId":"231","severity":1,"message":"262","line":25,"column":9,"nodeType":"233","messageId":"234","endLine":25,"endColumn":24},{"ruleId":"231","severity":1,"message":"263","line":26,"column":9,"nodeType":"233","messageId":"234","endLine":26,"endColumn":22},{"ruleId":"231","severity":1,"message":"264","line":27,"column":9,"nodeType":"233","messageId":"234","endLine":27,"endColumn":20},{"ruleId":"231","severity":1,"message":"265","line":30,"column":26,"nodeType":"233","messageId":"234","endLine":30,"endColumn":43},{"ruleId":"231","severity":1,"message":"266","line":31,"column":10,"nodeType":"233","messageId":"234","endLine":31,"endColumn":23},{"ruleId":"231","severity":1,"message":"267","line":31,"column":25,"nodeType":"233","messageId":"234","endLine":31,"endColumn":36},{"ruleId":"231","severity":1,"message":"268","line":32,"column":29,"nodeType":"233","messageId":"234","endLine":32,"endColumn":49},{"ruleId":"231","severity":1,"message":"269","line":46,"column":9,"nodeType":"233","messageId":"234","endLine":46,"endColumn":19},{"ruleId":"242","severity":1,"message":"243","line":82,"column":15,"nodeType":"244","endLine":82,"endColumn":59},{"ruleId":"242","severity":1,"message":"243","line":29,"column":9,"nodeType":"244","endLine":29,"endColumn":42},{"ruleId":"231","severity":1,"message":"270","line":8,"column":8,"nodeType":"233","messageId":"234","endLine":8,"endColumn":23},{"ruleId":"231","severity":1,"message":"271","line":8,"column":25,"nodeType":"233","messageId":"234","endLine":8,"endColumn":43},{"ruleId":"242","severity":1,"message":"243","line":24,"column":9,"nodeType":"244","endLine":26,"endColumn":10},{"ruleId":"231","severity":1,"message":"255","line":3,"column":8,"nodeType":"233","messageId":"234","endLine":3,"endColumn":20},{"ruleId":"231","severity":1,"message":"256","line":4,"column":8,"nodeType":"233","messageId":"234","endLine":4,"endColumn":24},{"ruleId":"231","severity":1,"message":"257","line":10,"column":10,"nodeType":"233","messageId":"234","endLine":10,"endColumn":21},{"ruleId":"231","severity":1,"message":"258","line":12,"column":23,"nodeType":"233","messageId":"234","endLine":12,"endColumn":32},{"ruleId":"231","severity":1,"message":"259","line":12,"column":34,"nodeType":"233","messageId":"234","endLine":12,"endColumn":46},{"ruleId":"231","severity":1,"message":"260","line":12,"column":48,"nodeType":"233","messageId":"234","endLine":12,"endColumn":58},{"ruleId":"231","severity":1,"message":"261","line":18,"column":11,"nodeType":"233","messageId":"234","endLine":18,"endColumn":13},{"ruleId":"231","severity":1,"message":"262","line":25,"column":9,"nodeType":"233","messageId":"234","endLine":25,"endColumn":24},{"ruleId":"231","severity":1,"message":"263","line":26,"column":9,"nodeType":"233","messageId":"234","endLine":26,"endColumn":22},{"ruleId":"231","severity":1,"message":"264","line":27,"column":9,"nodeType":"233","messageId":"234","endLine":27,"endColumn":20},{"ruleId":"231","severity":1,"message":"265","line":30,"column":26,"nodeType":"233","messageId":"234","endLine":30,"endColumn":43},{"ruleId":"231","severity":1,"message":"268","line":32,"column":29,"nodeType":"233","messageId":"234","endLine":32,"endColumn":49},{"ruleId":"231","severity":1,"message":"269","line":46,"column":9,"nodeType":"233","messageId":"234","endLine":46,"endColumn":19},{"ruleId":"231","severity":1,"message":"270","line":8,"column":8,"nodeType":"233","messageId":"234","endLine":8,"endColumn":23},{"ruleId":"231","severity":1,"message":"271","line":8,"column":25,"nodeType":"233","messageId":"234","endLine":8,"endColumn":43},{"ruleId":"242","severity":1,"message":"243","line":24,"column":9,"nodeType":"244","endLine":26,"endColumn":10},{"ruleId":"231","severity":1,"message":"272","line":18,"column":24,"nodeType":"233","messageId":"234","endLine":18,"endColumn":39},{"ruleId":"231","severity":1,"message":"273","line":19,"column":24,"nodeType":"233","messageId":"234","endLine":19,"endColumn":39},{"ruleId":"231","severity":1,"message":"274","line":20,"column":10,"nodeType":"233","messageId":"234","endLine":20,"endColumn":22},{"ruleId":"231","severity":1,"message":"275","line":20,"column":24,"nodeType":"233","messageId":"234","endLine":20,"endColumn":35},{"ruleId":"231","severity":1,"message":"271","line":21,"column":27,"nodeType":"233","messageId":"234","endLine":21,"endColumn":45},{"ruleId":"276","severity":1,"message":"277","line":48,"column":3,"nodeType":"278","messageId":"279","endLine":50,"endColumn":5},{"ruleId":"242","severity":1,"message":"243","line":76,"column":5,"nodeType":"244","endLine":76,"endColumn":51},{"ruleId":null,"fatal":true,"severity":2,"message":"280","line":17,"column":21},{"ruleId":"242","severity":1,"message":"243","line":33,"column":7,"nodeType":"244","endLine":33,"endColumn":49},"no-native-reassign",["281"],"no-negated-in-lhs",["282"],"@typescript-eslint/no-unused-vars","'isAuth' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["283"],"'getAvatarInfo' is defined but never used.","'users' is assigned a value but never used.","'useSelector' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useRef' is defined but never used.","'useCallback' is defined but never used.","'useEffect' is defined but never used.","'updateUserInformationToken' is defined but never used.","'compareAsc' is defined but never used.","'Card' is defined but never used.","'Form' is defined but never used.","'Figure' is defined but never used.","'axios' is defined but never used.","'stateAvatarId' is assigned a value but never used.","'deleteButton' is defined but never used.","'deleteTaskButton' is defined but never used.","'useLocation' is defined but never used.","'creatTask' is defined but never used.","'deleteColumn' is defined but never used.","'deleteTask' is defined but never used.","'id' is assigned a value but never used.","'userColumnArray' is assigned a value but never used.","'userTaskArray' is assigned a value but never used.","'activeBoard' is assigned a value but never used.","'setPositionColumn' is assigned a value but never used.","'boardIdColumn' is assigned a value but never used.","'setIdColumn' is assigned a value but never used.","'setVisionDescription' is assigned a value but never used.","'getAllTask' is assigned a value but never used.","'taskDescription' is assigned a value but never used.","'setTaskDescription' is assigned a value but never used.","'setPositionTask' is assigned a value but never used.","'setPriorityTask' is assigned a value but never used.","'taskColumnId' is assigned a value but never used.","'setColumnId' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","Parsing error: ',' expected.","no-global-assign","no-unsafe-negation",{"desc":"284","fix":"285"},"Update the dependencies array to be: [dispatch]",{"range":"286","text":"287"},[1258,1260],"[dispatch]"]