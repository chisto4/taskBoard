[{"/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/index.tsx":"1","/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/App.tsx":"2","/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/Redux/store/index.ts":"3","/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/header/header.tsx":"4","/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/modalWindows/userRegistrationForm/UserRegistrationForm.tsx":"5","/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/modalWindows/loginForm/loginForm.tsx":"6","/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/pages/workSpace/WorkSpace.js":"7","/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/pages/userPage/userPage.tsx":"8","/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/Redux/reducer/index.ts":"9","/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/pages/registration/registartionWindow.tsx":"10","/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/pages/helloWindow/helloWindow.tsx":"11","/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/pages/login/loginPage.tsx":"12","/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/main/Main.tsx":"13","/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/Redux/reducer/userReducer.ts":"14","/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/api/index.ts":"15","/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/Redux/const.ts":"16","/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/Redux/types/useTypeSelector.ts":"17","/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/api/routePage/AppRouter.js":"18","/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/api/routePage/routes.js":"19","/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/pages/testPage/testPage.tsx":"20","/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/Redux/types/user.ts":"21","/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/Redux/action-creater/users.ts":"22","/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/api/const/const.js":"23"},{"size":279,"mtime":1629531801088,"results":"24","hashOfConfig":"25"},{"size":1250,"mtime":1629611867202,"results":"26","hashOfConfig":"25"},{"size":198,"mtime":1629531800795,"results":"27","hashOfConfig":"25"},{"size":1335,"mtime":1629612423201,"results":"28","hashOfConfig":"25"},{"size":2765,"mtime":1629531800798,"results":"29","hashOfConfig":"25"},{"size":920,"mtime":1629531800798,"results":"30","hashOfConfig":"25"},{"size":3543,"mtime":1629531800801,"results":"31","hashOfConfig":"25"},{"size":2949,"mtime":1629571692802,"results":"32","hashOfConfig":"25"},{"size":212,"mtime":1629628588545,"results":"33","hashOfConfig":"25"},{"size":3943,"mtime":1629575981671,"results":"34","hashOfConfig":"25"},{"size":593,"mtime":1629531800799,"results":"35","hashOfConfig":"25"},{"size":2310,"mtime":1629605247145,"results":"36","hashOfConfig":"25"},{"size":815,"mtime":1629531800797,"results":"37","hashOfConfig":"25"},{"size":673,"mtime":1629620494807,"results":"38","hashOfConfig":"25"},{"size":369,"mtime":1629636296090,"results":"39","hashOfConfig":"25"},{"size":1293,"mtime":1629566041583,"results":"40","hashOfConfig":"25"},{"size":207,"mtime":1629613998898,"results":"41","hashOfConfig":"25"},{"size":881,"mtime":1629634561912,"results":"42","hashOfConfig":"25"},{"size":1073,"mtime":1629634561912,"results":"43","hashOfConfig":"25"},{"size":1008,"mtime":1629634049240,"results":"44","hashOfConfig":"25"},{"size":629,"mtime":1629620495748,"results":"45","hashOfConfig":"25"},{"size":699,"mtime":1629627627968,"results":"46","hashOfConfig":"25"},{"size":359,"mtime":1629634560943,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"6cscnx",{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/index.tsx",[],["101","102"],"/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/App.tsx",["103"],"/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/Redux/store/index.ts",[],"/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/header/header.tsx",[],"/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/modalWindows/userRegistrationForm/UserRegistrationForm.tsx",["104"],"import React from 'react';\nimport { useState } from 'react';\nimport './userRegistrationFormStyle.css';\nimport closeButton from '../../../icon/close.png'\n\ninterface IUserRegistrationForm {\n  onClickReg: () => void;\n  // id: number;\n  // name: string;\n  // lastName: string;\n  // login: string;\n  // email: string;\n  // password: string;\n  // avatarUrl: string;\n}\n\nconst UserRegistrationForm: React.FC<IUserRegistrationForm> = ({onClickReg}) => {\n\n  const [name, setName] = useState('');\n  const [surname, setLastName] = useState('');\n  const [login, setLogin] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [dob, setDOB] = useState('');\n\n  interface AnyInput {\n    inputName: any;\n  }\n\n  const inputName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value)\n    console.log('zalupa', name)\n  }\n  const inputSurName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setLastName(event.target.value)\n    console.log('zalupa', surname)\n  }\n  const inputLogin = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setLogin(event.target.value)\n    console.log('zalupa', login)\n  }\n  const inputEmail = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setEmail(event.target.value)\n    console.log('zalupa', email)\n  }\n  const inputPassword = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPassword(event.target.value)\n    console.log('zalupa', password)\n  }\n  const inputDOB = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setDOB(event.target.value)\n    console.log('zalupa', dob)\n  }\n\n  return (\n    <form className=\"form\">\n      <h1>Registration</h1>\n      <button onClick={onClickReg} className=\"closeButton\">\n        <img src={closeButton} className=\"icon\" alt=\"closeButton\"/>\n      </button>\n      <input name='name' type=\"text\" value={name} onChange={(e) => inputName(e)}  placeholder='Enter your Name'/>\n      <input name='surname' type=\"text\"  value={surname} onChange={(e) => inputSurName(e)} placeholder='Enter your Last Name'/>\n      <input name='login' type=\"text\"  value={login} onChange={(e) => inputLogin(e)} placeholder='Enter your Login'/>\n      <input name='email' type=\"email\"  value={email} onChange={(e) => inputEmail(e)} placeholder='Enter your Email'/>\n      <input name='password' type=\"password\" value={password} onChange={(e) => inputPassword(e)} placeholder='Enter your Password'/>\n      <input name='dob' type=\"date\" value={dob} onChange={(e) => inputDOB(e)} placeholder='Enter your Date of Born'/>\n      <input name='avatarUrl' type=\"url\" placeholder='Choice your Avatar'/>\n        <button type=\"submit\" className=\"registrationButton\">REGISTRATION</button>\n    </form>\n    );\n}\n\nexport default UserRegistrationForm;\n","/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/modalWindows/loginForm/loginForm.tsx",[],"/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/pages/workSpace/WorkSpace.js",["105","106"],"import React, {useState} from 'react';\nimport './workSpaceStyled.css';\n\nimport deleteButton  from '../../../icon/delete.png';\nimport closeButton  from '../../../icon/close.png';\n\nimport Main from '../../main/Main';\n\n\ninterface IWorkSpace {\n}\n\nconst WorkSpace: React.FC<IWorkSpace> = () => {\n  const [columns, setColumns] = useState([\n    {id:1, title:\"What need\", items:[{id:1, title:\"Develpometn\"},{id:2, title:'Create desigen Todo'},\n                {id:3, title:'made Hello world made Hello world '},{id:4, title:'Always make Zalupa test on console'}]},\n    {id:2, title:\"Process on work\", items:[{id:1, title:'Write your cold develope'}, \n                {id:2, title:'Choice deisgen on Dribble'},{id:3, title:'react Native'}]},\n    {id:3, title:'Complete', items:[{id:1, title:'Make a photo'}]}\n  ])\n\n  //FORE ITEM\n  const [currentColumn, setCurrentColumn] = useState(null)\n  const [currentItem, setCurrentItem] = useState(null)\n\n  function dragOverHandler(event){\n    event.preventDefault()\n    if(event.target.className === 'item'){\n      event.target.classList.toggle('boxShadow')\n    }\n  }\n\n  function dragLeaveHandler(event){\n    event.target.classList.remove('boxShadow')\n  }\n\n  function dragStartHandler(event, column, item){\n    // debugger\n    console.log('Start column', column) \n    console.log('Start item', item) \n    setCurrentColumn(column)\n    setCurrentItem(item)\n  }\n\n  function dragEndHandler(event){\n    event.target.classList.remove('boxShadow')\n  }\n\n  function dragDropHandler(event, column, item){\n    event.preventDefault()\n    const currentIndex = currentColumn.items.indexOf(currentItem)\n    currentColumn.items.splice(currentIndex, 1)\n    const dropIndex = column.items.indexOf(item)\n    column.items.splice(dropIndex + 1, 0, currentItem)\n    setColumns(columns.map(brd => {\n      if (brd.id === column.id){\n        return column\n      }\n      if (brd.id === currentColumn.id){\n        return currentColumn\n      }\n      return brd\n    }))\n  }\n\n  function dropeZeroStickHandler(event, column, item) {\n    const currentId = column.items.map(item => item.id)\nif (!currentId.includes(currentItem.id)) {\n  column.items.push(currentItem)\n         const currentIndex = currentColumn.items.indexOf(currentItem)\n         currentColumn.items.splice(currentIndex, 1)\n         setColumns(columns.map(b => {\n            if (b.id === column.id) {\n               return column\n            }\n            if (b.id === currentColumn.id) {\n               return currentColumn\n            }\n            return b\n         }))\n      }\n  }\n\n  return (\n    <Main>\n    <div className=\"workSpace\">\n      {columns.map(column =>\n        <div className=\"column\"\n        onDragOver={(event)=> dragOverHandler(event)}\n        onDrop={(event)=> dropeZeroStickHandler(event, column, {item: column.item})}\n        >\n          <div className=\"column__title\">{column.title}\n          </div>\n            {column.items.map(item =>\n                <div \n                onDragOver={(event)=> dragOverHandler(event)}\n                onDragLeave={(event)=> dragLeaveHandler(event)}\n                onDragStart={(event)=> dragStartHandler(event, column, item)}\n                onDragEnd={(event)=> dragEndHandler(event)}\n                onDrop={(event)=> dragDropHandler(event, column, item)}\n                className=\"item\"\n                draggable={true}\n                >\n                  {item.title}\n                </div>\n                \n              )}\n        </div>\n        )}\n    </div>\n    </Main>\n    );\n  };\n\nexport default WorkSpace;",["107","108"],"/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/pages/userPage/userPage.tsx",["109","110","111","112"],"import Main from \"../../main/Main\";\nimport {useSelector} from \"react-redux\";\nimport { ReactNode } from \"react\";\n\nimport styles from './userPage.module.scss'\nimport userAvatar from '../../../image/georgeMaichael.jpeg'\nimport instance from \"../../api\";\nimport { useTypedSelector } from \"../../Redux/types/useTypeSelector\";\n\ninterface UserInterface {\n    id: number;\n    name: string;\n    surname: string;\n    login: string;\n    email: string;\n    token: string;\n    dob: Date;\n  }\n\n  type Props = {\n    children?: ReactNode | undefined;\n  }\n\n  // const userInfo = async (event: { preventDefault: () => void; }) => {\n  //   const res = await instance.post('/user',      \n  //   {\n  //     name: name,\n  //     surname: surname,\n  //     login: login,\n  //     email: email,\n  //     password: password,\n  //     dob: dob\n  // })\n  //   event.preventDefault();\n\n  //   return (\n  //       <div className={styles.userRegistrationSucces}>\n  //         User Hes registration\n  //         console.log('registracia rabotaet');\n  //       </div>\n  //   );\n  // } \n\nconst UserPage: React.FC = () => {\n  const state = useTypedSelector(state => state.user)\n  console.log('tets state', state)\n  return (\n\n  <Main >\n    <div className={styles.user_update_information_main_wrapper}>\n    <div className={styles.default_user_info_wrapper}>\n      <div className={styles.user_avatar}>\n        <img src={userAvatar} className={styles.circle_avatar} alt='User Avatar'></img>\n      </div>\n      <div className={styles.def_string_info}>\n        <h6>Name:</h6><p>Nikolas</p>\n      </div>\n\n      <div className={styles.def_string_info}>\n        <h6>Last Name:</h6><p>Chistofor</p>\n      </div>\n\n      <div className={styles.def_string_info}>\n        <h6>Login:</h6><p>Chisto4</p>\n      </div>\n\n      <div className={styles.def_string_info}>\n        <h6>Date of born:</h6><p>23/08/1991</p>\n      </div>\n\n      <div className={styles.link_change_email}>\n        <a href=\"/email\">Change Email@adress</a>\n      </div>\n    </div>\n\n    <div className={styles.change_user_info_wrapper}>\n      {/* <form className={styles.form} onSubmit={userInfo}> */}\n      <form className={styles.form}>\n          <h1>Change user information</h1>\n        <input name='name' type=\"text\" placeholder='Enter your Name'/>\n        <input name='surname' type=\"text\"  placeholder='Enter your Last Name'/>\n        <input name='login' type=\"text\"  placeholder='Enter your Login'/>\n        <input name='oldPassword' type=\"password\" placeholder='Enter your Old password'/>\n        <input name='newPassword' type=\"password\" placeholder='Enter your New password'/>\n        <input name='newPasswordControl' type=\"password\" placeholder='Confirm the password'/>\n        <input name='dob' type=\"date\" placeholder='Enter your Date of Born'/>\n        <button type=\"submit\" className={styles.registrationButton}>upadte information</button>\n      </form>\n    </div>\n    </div>\n  </Main>\n);\n};\n\nexport default UserPage;","/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/Redux/reducer/index.ts",[],"/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/pages/registration/registartionWindow.tsx",["113","114","115"],"import Main from \"../../main/Main\";\n\nimport React, {ReactNode, useEffect, useState} from 'react';\nimport styles from './userRegistrationFormStyle.module.scss';\n\nimport instance from '../../api/index'\n\n\ninterface IUserRegistrationForm {\n  onClickReg: () => void;\n  // id: number;\n  // name: string;\n  // lastName: string;\n  // login: string;\n  // email: string;\n  // password: string;\n  // avatarUrl: string;\n}\n\nconst UserRegistration: React.FC<IUserRegistrationForm> = ({onClickReg}) => {\n\n  const [name, setName] = useState('');\n  const [surname, setLastName] = useState('');\n  const [login, setLogin] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [dob, setDOB] = useState('');\n\n  const inputName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value.toLocaleLowerCase())\n  }\n  const inputSurName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setLastName(event.target.value.toLocaleLowerCase())\n  }\n  const inputLogin = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setLogin(event.target.value.toLocaleLowerCase())\n  }\n  const inputEmail = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setEmail(event.target.value.toLocaleLowerCase())\n  }\n  const inputPassword = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPassword(event.target.value)\n  }\n  const inputDOB = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setDOB(event.target.value)\n }\n\n  interface UserInterface {\n    id: number;\n    name: string;\n    surname: string;\n    login: string;\n    email: string;\n    token: string;\n    dob: Date;\n  }\n\n  type Props = {\n    children?: ReactNode | undefined;\n  }\n\n  const userInfo = async (event: { preventDefault: () => void; }) => {\n    event.preventDefault();\n    debugger;\n\n    const res = await instance.post('/registration',      \n    {\n      name: name,\n      surname: surname,\n      login: login,\n      email: email,\n      password: password,\n      dob: dob\n  })\n\n  if (res.data === 'registered') {\n    \n  }\n  debugger;\n\nreturn false;\n    // return (\n    //     <div className={styles.userRegistrationSucces}>\n    //       User Hes registration\n    //       console.log('registracia rabotaet');\n    //     </div>\n    // );\n  }  \n\n//  const getUserIfo: React.FC<Props> = (props) =>{\n//     const [state, setState] = useState<UserInterface[]>([]);\n      \n//     useEffect(() => {\n//       console.log('getUserIfo')\n//       instance.get('user')\n//         .then(r => {\n//           console.log('result', r.data)\n//           setState(r.data)\n//         })\n//         .catch(e => console.log('error', e.message))\n//     }, []);\n  \n//     return (\n//     <main className={styles.main}>\n//       {state.map(item => <h1 key={item.id}>{item.name}</h1>)}\n//       {props.children}\n//     </main>\n//       );\n//   }\n\n  return (\n    <Main>\n      <form className={styles.form} onSubmit={userInfo}>\n        <h1>REGISTRATION</h1>\n        <input name='name' type=\"text\" value={name} onChange={(e) => inputName(e)}  placeholder='Enter your Name'/>\n        <input name='surname' type=\"text\"  value={surname} onChange={(e) => inputSurName(e)} placeholder='Enter your Last Name'/>\n        <input name='login' type=\"text\"  value={login} onChange={(e) => inputLogin(e)} placeholder='Enter your Login'/>\n        <input name='email' type=\"email\"  value={email} onChange={(e) => inputEmail(e)} placeholder='Enter your Email'/>\n        <input name='password' type=\"password\" value={password} onChange={(e) => inputPassword(e)} placeholder='Enter your Password'/>\n        <input name='dob' type=\"date\" value={dob} onChange={(e) => inputDOB(e)} placeholder='Enter your Date of Born'/>\n        <input name='avatarUrl' type=\"url\" placeholder='Choice your Avatar'/>\n          <button type=\"submit\" className={styles.registrationButton}>REGISTRATION</button>\n      </form>\n    </Main>\n    );\n}\n\nexport default UserRegistration;\n","/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/pages/helloWindow/helloWindow.tsx",[],"/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/pages/login/loginPage.tsx",[],"/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/main/Main.tsx",[],"/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/Redux/reducer/userReducer.ts",[],"/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/api/index.ts",[],"/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/Redux/const.ts",[],"/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/Redux/types/useTypeSelector.ts",[],"/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/api/routePage/AppRouter.js",["116","117"],"/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/api/routePage/routes.js",["118"],"/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/pages/testPage/testPage.tsx",["119"],"/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/Redux/types/user.ts",[],"/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/Redux/action-creater/users.ts",["120","121","122"],"import { Dispatch } from \"redux\"\nimport instance from \"../../api\"\nimport { GET_ALL_USERS } from \"../const\"\nimport { userReducer } from \"../reducer/userReducer\"\nimport { UserAction, UserActionTypes } from \"../types/user\"\nimport { useTypedSelector } from \"../types/useTypeSelector\"\n\nexport const getAllUsers = () => {\n  return async (dispatch: Dispatch<UserAction>) => {\n    try{\n      dispatch({type: UserActionTypes.GET_ALL_USERS})\n      const res = await instance.get('/users')\n      dispatch({type: UserActionTypes.GET_ALL_USERS_SUCCESS, payload: res.data})\n    } catch(e){\n      dispatch({type: UserActionTypes.GET_ALL_USERS_FALSE, \n        payload: 'Some one error when load users'})\n    }\n  }\n}","/Users/chisto4/Documents/Projekt on Work/taskboard/client/src/components/api/const/const.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":5,"column":24,"nodeType":"129","messageId":"130","endLine":5,"endColumn":29},{"ruleId":"127","severity":1,"message":"131","line":26,"column":13,"nodeType":"129","messageId":"130","endLine":26,"endColumn":21},{"ruleId":"132","severity":1,"message":"133","line":4,"column":8,"nodeType":"129","messageId":"130","endLine":4,"endColumn":20},{"ruleId":"132","severity":1,"message":"134","line":5,"column":8,"nodeType":"129","messageId":"130","endLine":5,"endColumn":19},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"135","line":2,"column":9,"nodeType":"129","messageId":"130","endLine":2,"endColumn":20},{"ruleId":"127","severity":1,"message":"136","line":7,"column":8,"nodeType":"129","messageId":"130","endLine":7,"endColumn":16},{"ruleId":"127","severity":1,"message":"137","line":10,"column":11,"nodeType":"129","messageId":"130","endLine":10,"endColumn":24},{"ruleId":"127","severity":1,"message":"138","line":20,"column":8,"nodeType":"129","messageId":"130","endLine":20,"endColumn":13},{"ruleId":"127","severity":1,"message":"139","line":3,"column":27,"nodeType":"129","messageId":"130","endLine":3,"endColumn":36},{"ruleId":"127","severity":1,"message":"137","line":48,"column":13,"nodeType":"129","messageId":"130","endLine":48,"endColumn":26},{"ruleId":"127","severity":1,"message":"138","line":58,"column":8,"nodeType":"129","messageId":"130","endLine":58,"endColumn":13},{"ruleId":"132","severity":1,"message":"140","line":1,"column":16,"nodeType":"129","messageId":"130","endLine":1,"endColumn":26},{"ruleId":"132","severity":1,"message":"141","line":10,"column":7,"nodeType":"129","messageId":"130","endLine":10,"endColumn":13},{"ruleId":"132","severity":1,"message":"142","line":8,"column":7,"nodeType":"129","messageId":"130","endLine":8,"endColumn":11},{"ruleId":"143","severity":1,"message":"144","line":17,"column":4,"nodeType":"145","endLine":17,"endColumn":6,"suggestions":"146"},{"ruleId":"127","severity":1,"message":"147","line":3,"column":10,"nodeType":"129","messageId":"130","endLine":3,"endColumn":23},{"ruleId":"127","severity":1,"message":"148","line":4,"column":10,"nodeType":"129","messageId":"130","endLine":4,"endColumn":21},{"ruleId":"127","severity":1,"message":"149","line":6,"column":10,"nodeType":"129","messageId":"130","endLine":6,"endColumn":26},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"@typescript-eslint/no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","'AnyInput' is defined but never used.","no-unused-vars","'deleteButton' is defined but never used.","'closeButton' is defined but never used.","'useSelector' is defined but never used.","'instance' is defined but never used.","'UserInterface' is defined but never used.","'Props' is defined but never used.","'useEffect' is defined but never used.","'useContext' is defined but never used.","'isAuth' is assigned a value but never used.","'path' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["152"],"'GET_ALL_USERS' is defined but never used.","'userReducer' is defined but never used.","'useTypedSelector' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},"Update the dependencies array to be: [dispatch]",{"range":"155","text":"156"},[549,551],"[dispatch]"]