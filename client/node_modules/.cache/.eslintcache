[{"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/index.tsx":"1","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/index.ts":"2","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/App.tsx":"3","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/reducers.ts":"4","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/userReducer/userThunk.ts":"5","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/api/routePage/AppRouter.tsx":"6","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/components/header/header.tsx":"7","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/components/modalWindows/userRegistrationForm/UserRegistrationForm.tsx":"8","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/components/modalWindows/loginForm/loginForm.tsx":"9","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/userReducer/userReducer.ts":"10","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/userReducer/actionUser.ts":"11","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/api/userApi/userApi.ts":"12","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/api/userApi/uploadFile/uploadImageApi.ts":"13","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/api/const/const.js":"14","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/api/routePage/routes.tsx":"15","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/userReducer/constansUser.ts":"16","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/api/userApi/index.ts":"17","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/workSpace/WorkSpace.js":"18","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/homePage/homePage.tsx":"19","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/registration/registartionWindow.tsx":"20","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/login/loginPage.tsx":"21","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/userPage/userPage.tsx":"22","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/components/main/Main.tsx":"23"},{"size":241,"mtime":1629834786191,"results":"24","hashOfConfig":"25"},{"size":457,"mtime":1629834786194,"results":"26","hashOfConfig":"25"},{"size":1706,"mtime":1630360197003,"results":"27","hashOfConfig":"25"},{"size":503,"mtime":1629834786194,"results":"28","hashOfConfig":"25"},{"size":2554,"mtime":1630438206290,"results":"29","hashOfConfig":"25"},{"size":810,"mtime":1629928182830,"results":"30","hashOfConfig":"25"},{"size":2301,"mtime":1630445744359,"results":"31","hashOfConfig":"25"},{"size":2721,"mtime":1629931362589,"results":"32","hashOfConfig":"25"},{"size":923,"mtime":1629931346257,"results":"33","hashOfConfig":"25"},{"size":1997,"mtime":1630472083574,"results":"34","hashOfConfig":"25"},{"size":1888,"mtime":1630360197025,"results":"35","hashOfConfig":"25"},{"size":2572,"mtime":1630434438435,"results":"36","hashOfConfig":"25"},{"size":567,"mtime":1630360197008,"results":"37","hashOfConfig":"25"},{"size":390,"mtime":1630260116979,"results":"38","hashOfConfig":"25"},{"size":983,"mtime":1629934052113,"results":"39","hashOfConfig":"25"},{"size":1907,"mtime":1630360197027,"results":"40","hashOfConfig":"25"},{"size":781,"mtime":1630094991949,"results":"41","hashOfConfig":"25"},{"size":3583,"mtime":1630543675181,"results":"42","hashOfConfig":"25"},{"size":595,"mtime":1629932486152,"results":"43","hashOfConfig":"25"},{"size":3115,"mtime":1630360197017,"results":"44","hashOfConfig":"25"},{"size":1811,"mtime":1630405557018,"results":"45","hashOfConfig":"25"},{"size":9233,"mtime":1630536510936,"results":"46","hashOfConfig":"25"},{"size":927,"mtime":1629834786155,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1kt1cyw",{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/index.tsx",[],["102","103"],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/index.ts",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/App.tsx",["104","105"],"import React, { useEffect, useState } from 'react';\n\nimport './App.css';\nimport { BrowserRouter, Switch } from 'react-router-dom';\nimport UserRegistrationForm from './pages/components/modalWindows/userRegistrationForm/UserRegistrationForm'\nimport UserLoginForm from './pages/components/modalWindows/loginForm/loginForm';\nimport AppRouter from './api/routePage/AppRouter';\n\nimport Header from './pages/components/header/header';\nimport { useDispatch } from 'react-redux';\nimport { updateUserInformationToken } from './store/userReducer/userThunk';\nimport { useAppSelector } from './store/reducers';\n// import { useAppSelector } from './store/reducers';\n\nfunction App() {\n  const [logForm, setLogForm] = useState(false);\n  const [regForm, setRegForm] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const isAuth = useAppSelector((state) => state.user.auth)\n\n  const onClickLog = () => {\n    setLogForm(!logForm);\n    if (regForm) {\n      setRegForm(!regForm);\n    }\n  }\n  const onClickReg = () => {\n    setRegForm(!regForm);\n    if (logForm) {\n      setLogForm(!logForm);\n    }\n  }\n\n  useEffect(() => {\n    // if (!isAuth) return;\n    dispatch(updateUserInformationToken());\n  }, [])\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header onClickLog={onClickLog}\n          onClickReg={onClickReg}\n        />\n        {regForm && <UserRegistrationForm\n          onClickReg={onClickReg}\n        />}\n        {logForm && <UserLoginForm\n          onClickLog={onClickLog}\n        />}\n        <AppRouter />\\\n\n        <Switch>\n          {/* <Route path=\"registration\" component={UserRegistrationForm}/> */}\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/reducers.ts",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/userReducer/userThunk.ts",["106"],"import { getAvatarInfo, uploadImageApi } from \"../../api/userApi/uploadFile/uploadImageApi\";\nimport { editUsers, regUser, logUser, getToken, editUsersEmailPassword} from \"../../api/userApi/userApi\";\nimport { IUser } from \"../../types/types\";\nimport { AppDispatch } from \"../reducers\";\nimport {\n  actionsGetTokenError,\n  actionsLogAuth,\n  actionsLogError,\n  actionsLogOut,\n  actionsSetError,\n  actionsUpdateUser,\n  actionsSetAuth,\n  actionsUploadError,\n  actionsUploadImage\n} from './actionUser'\n\nexport const registrationUsers = (user: IUser) => async (dispatch: AppDispatch): Promise<void> => {\n  try {\n    const data = await regUser(user)\n    localStorage.setItem('token', data.token)\n    dispatch(actionsUpdateUser(data.newUser));\n    dispatch(actionsSetAuth(true));\n    } catch (error: any) {\n    dispatch(actionsSetError(error.message))\n  }\n};\nexport const loginUser = (user: IUser) => async (dispatch: AppDispatch): Promise<void> => {\n  try {\n    const data = await logUser(user)\n    localStorage.setItem('token', data.token)\n    dispatch(actionsUpdateUser(data.userLogin));\n    dispatch(actionsLogAuth(true));\n  } catch (error: any) {\n    dispatch(actionsLogError(error.message))\n  }\n};\nexport const updateUser = (user: IUser) => async (dispatch: AppDispatch): Promise<void> => {\n  try {\n    const data = await editUsers(user)\n    dispatch(actionsUpdateUser(data));\n    dispatch(actionsLogAuth(true));\n  } catch (error: any) {\n    dispatch(actionsLogError(error.message))\n  }\n};\nexport const editUsersEmail = (user: IUser) => async (dispatch: AppDispatch): Promise<void> => {\n  try {\n    const data = await editUsersEmailPassword(user)\n    dispatch(actionsUpdateUser(data));\n    dispatch(actionsLogAuth(true));\n  } catch (error: any) {\n    dispatch(actionsLogError(error.message))\n  }\n};\nexport const updateUserInformationToken = () => async (dispatch: AppDispatch): Promise<void> => {\n  try {\n    const user = await getToken();\n    dispatch(actionsUpdateUser(user));\n    dispatch(actionsSetAuth(true));\n  } catch (error: any) {\n    dispatch(actionsGetTokenError(error.message))\n  }\n};\nexport const uploadUserAvatar = (file: FormData) => async (dispatch: AppDispatch): Promise<void> => {\n  try {\n    const data = await uploadImageApi(file)\n    const pathImage = data.file.path\n    console.log(pathImage)\n    dispatch(actionsUploadImage(pathImage));\n  } catch (error: any) {\n    dispatch(actionsUploadError(error.message))\n  }\n};\nexport const logOutThunk = () => (dispatch: AppDispatch) => {\n  dispatch(actionsLogOut());\n  localStorage.clear();\n};\n","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/api/routePage/AppRouter.tsx",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/components/header/header.tsx",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/components/modalWindows/userRegistrationForm/UserRegistrationForm.tsx",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/components/modalWindows/loginForm/loginForm.tsx",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/userReducer/userReducer.ts",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/userReducer/actionUser.ts",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/api/userApi/userApi.ts",["107"],"import { Dispatch } from 'react';\nimport { Action } from 'redux';\nimport { IUser, ILogUser } from \"../../types/types\";\nimport axios from './index';\n\nexport const regUser = async (user: IUser) => {\n  const res = await axios.post('/registration', user);\n  console.log('User info registration', res.data);\n  return res.data\n};\n\nexport const logUser = async (user: ILogUser) => {\n  const res = await axios.post('/login', user);\n  console.log('res.data when login user', res.data)\n  return res.data\n};\n\nexport const getToken = async () => {\n  const res = await axios.get('/token');\n  console.log('User info token update', res.data);\n  return res.data\n};\n\nexport const editUsers = async (user: IUser) => {\n  const res = await axios.put('/user', user);\n  if(res.status === 200){\n    console.log('User info update2', res.data);\n  }\n  return res.data\n};\n\nexport const editUsersEmailPassword = async (user: IUser) => {\n  const res = await axios.put('/user/email', user);\n  if(res.status === 200){\n    console.log('Update user email and password', res.data);\n  }\n  return res.data\n};\n\nexport const logOut = (): void => {\n  localStorage.clear();\n  document.location.href = 'http://localhost:3000/';\n};\n\n\nexport const deleteUsers = (user: {\n  id: number,\n  email: string,\n  password: string,\n}, token: string) => {\n  return async (dispatch: Dispatch<Action>): Promise<void> => {\n\n    const response = await axios.delete(`/users/${user.id}`, {\n\n      headers: { Authorization: localStorage.getItem('token') }\n    })\n\n    const result = await response.data;\n\n    if (response.status === 200) {\n      console.log(result);\n      const users = [{\n        id: user.id,\n        email: user.email,\n      }];\n      document.location.href = 'http://localhost:3000/';\n    }\n    else {\n      alert(result.message);\n    }\n  };\n};\n// export const editUsers = async (user: IUser) => {\n//   try {\n//     const res = await axios.put('/user', user);\n//     console.log('User info registaration', res.data);\n//     // document.location.href = 'http://localhost:3000/login';\n//     return res.data\n\n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n\n// export const getToken = async () => {  \n//   try {\n//     const res = await axios.get('/token');\n//     console.log('User info token update', res.data);\n//         if (res.status == 200) {\n//       console.log(res);\n//       const users = [{\n//         id: user.id,\n//         surname: user.surname,\n//         email: user.email,\n//         dob: user.dob,\n//       }];\n//     return res.data\n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/api/userApi/uploadFile/uploadImageApi.ts",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/api/const/const.js",[],["108","109"],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/api/routePage/routes.tsx",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/userReducer/constansUser.ts",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/api/userApi/index.ts",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/workSpace/WorkSpace.js",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/homePage/homePage.tsx",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/registration/registartionWindow.tsx",["110"],"import Main from \"../components/main/Main\";\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styles from './userRegistrationFormStyle.module.scss';\n\nimport { registrationUsers } from \"../../store/userReducer/userThunk\";\nimport { IUser } from \"../../types/types\";\nimport { useAppSelector } from \"../../store/reducers\";\nimport { useHistory } from \"react-router\";\n\nconst UserRegistration: React.FC = (): JSX.Element => {\n  const [userName, setUserName] = useState('');\n  const [userSurName, setUserSurName] = useState('');\n  const [userLogin, setUserLogin] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n  const [userDob, setUserDob] = useState('');\n\n  const auth = useAppSelector((state) => state.user.auth)  \n\n  const dispatch = useDispatch();\n\n  let history = useHistory();\n\n\n  const userInfo: React.FormEventHandler<HTMLFormElement> = (event) => {\n    event.preventDefault();\n    console.log('event', event);\n    const parseDate = new Date(userDob);\n\n    const user: IUser = {\n      name: userName,\n      surname: userSurName,\n      login: userLogin,\n      email: userEmail,\n      password: userPassword,\n      dob: parseDate,\n      avatarId: null,\n      Image: null\n    };\n    dispatch(registrationUsers(user));\n  };\n\n  useEffect(() => {\n    if (auth) {history.push(\"/user\")}\n    }, [auth, history])\n\n  return (\n    <Main>\n      <form className={styles.form} onSubmit={userInfo}>\n        <h1>REGISTRATION</h1>\n        <input onChange={(e) => setUserName(e.target.value)} name='name' type=\"text\" placeholder='Enter your Name' />\n        <input onChange={(e) => setUserSurName(e.target.value)} name='surname' type=\"text\" placeholder='Enter your Last Name' />\n        <input onChange={(e) => setUserLogin(e.target.value)} name='login' type=\"text\" placeholder='Enter your Login' />\n        <input onChange={(e) => setUserEmail(e.target.value)} name='email' type=\"email\" placeholder='Enter your Email' />\n        <input onChange={(e) => setUserPassword(e.target.value)} name='password' type=\"password\" placeholder='Enter your Password' />\n        <input onChange={(e) => setUserDob(e.target.value)} name='dob' type=\"date\" placeholder='Enter your Date of Born' />\n        {/* <input name='avatar' type=\"text\" placeholder='Choice your Avatar'/> */}\n        <button type=\"submit\" className={styles.registrationButton}>REGISTRATION</button>\n      </form>\n    </Main>\n  );\n}\nexport default UserRegistration;\n\n\n//  const getUserIfo: React.FC<Props> = (props) =>{\n//     const [state, setState] = useState<UserInterface[]>([]);\n\n//     useEffect(() => {\n//       console.log('getUserIfo')\n//       instance.get('user')\n//         .then(r => {\n//           console.log('result', r.data)\n//           setState(r.data)\n//         })\n//         .catch(e => console.log('error', e.message))\n//     }, []);\n\n//     return (\n//     <main className={styles.main}>\n//       {state.map(item => <h1 key={item.id}>{item.name}</h1>)}\n//       {props.children}\n//     </main>\n//       );\n//   }\n\n\n","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/login/loginPage.tsx",["111"],"\nimport React, { useEffect, useState } from 'react';\n\nimport styles from './loginPage.module.scss';\nimport Main from \"../components/main/Main\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { IUser } from '../../types/types';\nimport { loginUser } from \"../../store/userReducer/userThunk\";\nimport { useAppSelector } from '../../store/reducers';\nimport { useHistory } from 'react-router';\n\nconst UserLogin: React.FC = (): JSX.Element => {\n  const [userLogin, setUserLogin] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n\n  const auth = useAppSelector((state) => state.user.auth)\n  let history = useHistory();\n  const dispatch = useDispatch();\n\n  const userInfo: React.FormEventHandler<HTMLFormElement> = (event) => {\n    event.preventDefault();\n    console.log('event', event);\n\n    const user: IUser = {\n      login: userLogin,\n      email: userEmail,\n      password: userPassword,\n      name: '',\n      surname: '',\n      dob: '',\n      avatarId: null,\n      Image: null\n    };\n    dispatch(loginUser(user));\n  };\n\n  useEffect(() => {\n    if (auth) { history.push(\"/user\") }\n  }, [auth, history])\n\n  return (\n    <Main>\n      <form className={styles.form} onSubmit={userInfo}>\n        <h1>LOGIN</h1>\n        <input onChange={(e) => setUserLogin(e.target.value)} name='login' type=\"text\" placeholder='Enter your Login' />\n        <input onChange={(e) => setUserEmail(e.target.value)} name='email' type=\"email\" placeholder='Enter your Email' />\n        <input onChange={(e) => setUserPassword(e.target.value)} name='password' type=\"password\" placeholder='Enter your Password' />\n        <button type=\"submit\" className={styles.registrationButton}>LOGIN</button>\n      </form>\n    </Main>\n  );\n}\nexport default UserLogin;\n","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/userPage/userPage.tsx",["112","113","114","115","116","117","118","119","120","121","122"],"import Main from \"../components/main/Main\";\n// import {useDispatch, useSelector} from \"react-redux\";\n// import { FormEvent } from 'react';\nimport React, { useState, useRef, useCallback, useEffect } from 'react';\nimport { baseURL } from '../../api/userApi/index';\n\nimport styles from './userPage.module.scss';\nimport baseAvatar from '../../image/wtf.jpeg';\nimport closeButton  from '../../icon/close.png';\nimport { useAppSelector } from \"../../store/reducers\";\nimport { IUser } from \"../../types/types\";\nimport { editUsersEmail, updateUser, updateUserInformationToken, uploadUserAvatar } from \"../../store/userReducer/userThunk\";\nimport { useDispatch } from \"react-redux\";\nimport { format, compareAsc } from 'date-fns';\nimport { Card, Form, Button, Figure } from 'react-bootstrap';\nimport axios from '../../api/userApi/index';\n\nconst UserPage: React.FC = (): JSX.Element => {\n  const { name: stateName, dob: stateDob, email: stateEmail,\n    login: stateLogin, surname: stateSurName, avatarId: stateAvatarId\n  } = useAppSelector((state) => state.user.user)\n\n  const error = useAppSelector((state) => state.user.error)\n  console.log('ERRRROR', error)\n\n  const thrueDateFormat = format(new Date(stateDob), 'MM/dd/yyyy')\n  const dispatch = useDispatch();\n\n  const image = useAppSelector((state) => state.user.user.Image)\n  // const imageIdstate = useAppSelector((state) => state.user.user)\n  const imageIdstate = useAppSelector((state) => state)\n  console.log('tut padaet', image)\n  console.log('tut padaet2', imageIdstate)\n  const urlAvatar = !image ? baseAvatar : baseURL + '/' + image?.pathImages;\n  \n\n  const [userName, setUserName] = useState(stateName);\n  const [userSurName, setUserSurName] = useState(stateSurName);\n  const [userLogin, setUserLogin] = useState(stateLogin);\n  const [userDob, setUserDob] = useState(stateDob);\n  \n  const [userEmail, setUserEmail] = useState(stateEmail);\n  const [userPassword, setUserPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const [formSwitch, setFormSwitch] = useState(false);\n  const [valuePassword, setValuePassword] = useState(false);\n  const [userAvatar, setUserAvatar] = useState<string | Blob>('');;\n\n  const [moadlMessage, setMoadlMessage] = useState('');\nconst uploadAvatar = \"Your avatar has been update\"\nconst updaitUserInfo = \"Your user information has been update\"\nconst updaitEmailPassword = \"Update success\"\n\n  const userInfo: React.FormEventHandler<HTMLFormElement> = (event) => {\n    event.preventDefault();\n    console.log('event', event);\n\n    const user: IUser = {\n      name: userName,\n      surname: userSurName,\n      login: userLogin,\n      password: userPassword,\n      dob: userDob,\n      email: userEmail,\n    };\n    console.log('send', user);\n\n    dispatch(updateUser(user));\n    setMoadlMessage(updaitUserInfo)\n\n };\n\n  const userInfoPassEmail: React.FormEventHandler<HTMLFormElement> = (event) => {\n    event.preventDefault();\n    console.log('Password and Email event', event);\n\n    const validNewPassword = (newPassword === confirmPassword);\n    if(!validNewPassword){\n      setValuePassword(true)\n    } else {\n      const updatePassword = newPassword\n    const user: IUser = {\n      name: userName,\n      surname: userSurName,\n      login: userLogin,\n      password: updatePassword,\n      dob: userDob,\n      email: userEmail,\n    };\n    console.log('send', user);\n\n    dispatch(editUsersEmail(user));\n    setValuePassword(false)\n    setMoadlMessage(updaitEmailPassword)\n\n }};\n\n  const submitUserImg = (e: React.FormEvent<HTMLFormElement>) => {\n    const formData = new FormData();\n    e.preventDefault();\n    formData.append('file', userAvatar);\n    // console.log(\"FORM DATA DLYA DIMY\", formData)\n    dispatch(uploadUserAvatar(formData));\n    setUserAvatar('')\n    setMoadlMessage(uploadAvatar)\n  };\n\n  const setUseFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.currentTarget.files?.length) {\n      const currentAvatar = e.currentTarget.files[0];\n      setUserAvatar(currentAvatar);\n    }\n  };\n\n  return (\n    <Main >\n\n    {moadlMessage && <div className={styles.modal_Inform_Window}>\n      <div className={styles.modal_Inform_Window_h4}>\n        <h4>{moadlMessage}test</h4>\n      </div>\n      <div className={styles.modal_Inform_Window_link}>\n      <a onClick={() => setMoadlMessage('')}>\n      <img src={closeButton} className={styles.close_button} alt='User Avatar'></img>\n      </a>\n      </div>\n    </div>}\n\n      <div className={styles.user_update_information_main_wrapper}>\n\n        <div className={styles.default_user_info_wrapper}>\n\n          <div className={styles.user_avatar}>\n            <img src={urlAvatar} className={styles.circle_avatar} alt='User Avatar'></img>\n          </div>\n\n          <form\n            onSubmit={(e) => submitUserImg(e)}\n            className={styles.avatar_form}\n          >\n            <div className={styles.upload_wrapper}>\n              <label htmlFor=\"inp\" className={styles.input_label}>upload avatar</label>\n              <input id=\"inp\" className={styles.upload_input_form}\n                type=\"file\" name=\"file\"\n                onChange={(e) => setUseFile(e)}\n              />\n            </div>\n            <Button\n              variant=\"outline-primary\"\n              className={styles.input_label}\n              as=\"input\" type=\"submit\" value=\"Load\"\n              hidden={!userAvatar}\n              // onClick={(e) => setUserAvatar('')}\n            />\n          </form>\n\n          <div className={styles.def_string_info}>\n            <h6>Name:</h6><p>{stateName}</p>\n          </div>\n\n          <div className={styles.def_string_info}>\n            <h6>Last Name:</h6><p>{stateSurName}</p>\n          </div>\n\n          <div className={styles.def_string_info}>\n            <h6>Login:</h6><p>{stateLogin}</p>\n          </div>\n\n          <div className={styles.def_string_info}>\n            <h6>Date of born:</h6><p>{thrueDateFormat}</p>\n          </div>\n          {/* USER EMAIL */}\n          {/* <div className={styles.link_change_email}>\n        <a href=\"/email\">Change Email@adress</a>\n      </div> */}\n          {/* <button onSubmit={(deleteUsers)} className={styles.del_user_button}>DELETE USER</button> */}\n          {/* <span onClick={() => deleteUsers({email, })} className={styles.del_user_button}>DELETE USER</span> */}\n        </div>\n\n        <div className={styles.change_user_info_wrapper}>\n        {!formSwitch && <h1>Change user information</h1>}\n        {formSwitch && <h1>Change E-mail and password</h1>}\n\n          <div className={styles.change_update_form_window}>\n            <button className={styles.change_user_form_window_left} onClick={() => setFormSwitch(false)} >USER INFO</button>\n            <button className={styles.change_user_form_window_right} onClick={() => setFormSwitch(true)}>EMAIL & PASSWORD</button>\n          </div>\n\n          {!formSwitch && <form className={styles.form} onSubmit={userInfo}>\n            <input onChange={(e) => setUserName(e.target.value)} name='name' required defaultValue={stateName} type=\"text\" placeholder='Enter your Name' />\n            <input onChange={(e) => setUserSurName(e.target.value)} name='surname' required defaultValue={stateSurName} type=\"text\" placeholder='Enter your Last Name' />\n            <input onChange={(e) => setUserLogin(e.target.value)} name='login' required defaultValue={stateLogin} type=\"text\" placeholder='Enter your Login' />\n            {/* <input onChange={(e) => setUserEmail(e.target.value)} name='email' required defaultValue={stateEmail} type=\"text\" placeholder='Enter your Email' /> */}\n            {/* <input name='oldPassword' type=\"password\" placeholder='Enter your Old password'/>\n        <input name='newPassword' type=\"password\" placeholder='Enter your New password'/> */}\n            {/* <input onChange={(e) => setUserPassword(e.target.value)} name='newPasswordControl' required type=\"password\" placeholder='Confirm password' /> */}\n            <input onChange={(e) => setUserDob(e.target.value)} name='dob' type=\"date\" placeholder='Enter your Date of Born' />\n            <button type=\"submit\" className={styles.registrationButton}>update information</button>\n          </form>}\n\n          {formSwitch && <form className={styles.form} onSubmit={userInfoPassEmail}>\n            <input onChange={(e) => setUserEmail(e.target.value)} name='email' required defaultValue={stateEmail} type=\"email\" placeholder='Enter New Email' />\n            <input onChange={(e) => setUserPassword(e.target.value)} name='Password' required type=\"password\" placeholder='Enter Old Password' />\n            <input onChange={(e) => setNewPassword(e.target.value)} name='newPassword' required type=\"password\" placeholder='Enter your New Password' />\n            <input onChange={(e) => setConfirmPassword(e.target.value)} name='confirmPassword' required type=\"password\" placeholder='Confirm New Password' />\n              {valuePassword && <p className={styles.password_valid_message}>Password mismatch</p>}\n            <button type=\"submit\" className={styles.registrationButton}>update email and password</button>\n          </form>}\n        </div>\n      </div>\n    </Main>\n  );\n\n};\n\nexport default UserPage;","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/components/main/Main.tsx",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":21,"column":9,"nodeType":"129","messageId":"130","endLine":21,"endColumn":15},{"ruleId":"131","severity":1,"message":"132","line":39,"column":6,"nodeType":"133","endLine":39,"endColumn":8,"suggestions":"134"},{"ruleId":"127","severity":1,"message":"135","line":1,"column":10,"nodeType":"129","messageId":"130","endLine":1,"endColumn":23},{"ruleId":"127","severity":1,"message":"136","line":62,"column":13,"nodeType":"129","messageId":"130","endLine":62,"endColumn":18},{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"137","line":4,"column":23,"nodeType":"129","messageId":"130","endLine":4,"endColumn":34},{"ruleId":"127","severity":1,"message":"137","line":6,"column":10,"nodeType":"129","messageId":"130","endLine":6,"endColumn":21},{"ruleId":"127","severity":1,"message":"138","line":4,"column":27,"nodeType":"129","messageId":"130","endLine":4,"endColumn":33},{"ruleId":"127","severity":1,"message":"139","line":4,"column":35,"nodeType":"129","messageId":"130","endLine":4,"endColumn":46},{"ruleId":"127","severity":1,"message":"140","line":4,"column":48,"nodeType":"129","messageId":"130","endLine":4,"endColumn":57},{"ruleId":"127","severity":1,"message":"141","line":12,"column":38,"nodeType":"129","messageId":"130","endLine":12,"endColumn":64},{"ruleId":"127","severity":1,"message":"142","line":14,"column":18,"nodeType":"129","messageId":"130","endLine":14,"endColumn":28},{"ruleId":"127","severity":1,"message":"143","line":15,"column":10,"nodeType":"129","messageId":"130","endLine":15,"endColumn":14},{"ruleId":"127","severity":1,"message":"144","line":15,"column":16,"nodeType":"129","messageId":"130","endLine":15,"endColumn":20},{"ruleId":"127","severity":1,"message":"145","line":15,"column":30,"nodeType":"129","messageId":"130","endLine":15,"endColumn":36},{"ruleId":"127","severity":1,"message":"146","line":16,"column":8,"nodeType":"129","messageId":"130","endLine":16,"endColumn":13},{"ruleId":"127","severity":1,"message":"147","line":20,"column":57,"nodeType":"129","messageId":"130","endLine":20,"endColumn":70},{"ruleId":"148","severity":1,"message":"149","line":125,"column":7,"nodeType":"150","endLine":125,"endColumn":46},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"@typescript-eslint/no-unused-vars","'isAuth' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["153"],"'getAvatarInfo' is defined but never used.","'users' is assigned a value but never used.","'useSelector' is defined but never used.","'useRef' is defined but never used.","'useCallback' is defined but never used.","'useEffect' is defined but never used.","'updateUserInformationToken' is defined but never used.","'compareAsc' is defined but never used.","'Card' is defined but never used.","'Form' is defined but never used.","'Figure' is defined but never used.","'axios' is defined but never used.","'stateAvatarId' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},"Update the dependencies array to be: [dispatch]",{"range":"156","text":"157"},[1187,1189],"[dispatch]"]