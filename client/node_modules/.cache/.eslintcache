[{"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/index.tsx":"1","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/index.ts":"2","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/App.tsx":"3","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/reducers.ts":"4","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/userReducer/userThunk.ts":"5","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/api/routePage/AppRouter.tsx":"6","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/components/header/header.tsx":"7","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/components/modalWindows/userRegistrationForm/UserRegistrationForm.tsx":"8","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/components/modalWindows/loginForm/loginForm.tsx":"9","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/userReducer/userReducer.ts":"10","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/boardReducer/boardReducer.ts":"11","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/userReducer/actionUser.ts":"12","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/api/userApi/userApi.ts":"13","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/api/userApi/uploadFile/uploadImageApi.ts":"14","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/api/const/const.js":"15","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/api/routePage/routes.tsx":"16","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/userReducer/constansUser.ts":"17","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/boardReducer/constansBoard.ts":"18","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/api/index.ts":"19","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/boardspace/boardSpace.tsx":"20","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/homePage/homePage.tsx":"21","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/login/loginPage.tsx":"22","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/workSpace/WorkSpace.tsx":"23","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/registration/registartionWindow.tsx":"24","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/userPage/userPage.tsx":"25","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/boardReducer/boardThunk.ts":"26","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/components/main/Main.tsx":"27","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/boardspace/BoardItem/BoardItem.tsx":"28","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/boardReducer/actionBoard.ts":"29","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/api/boardApi/boardApi.ts":"30","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/boardspace/ColumnItem/ColumnItem.tsx":"31","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/boardspace/TaskList/TaskList.tsx":"32","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/boardspace/TaskItem/TaskItem.tsx":"33","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/boardspace/DescriptionTask/DescriptionTaskModal.tsx":"34"},{"size":241,"mtime":1631202217841,"results":"35","hashOfConfig":"36"},{"size":457,"mtime":1631202217852,"results":"37","hashOfConfig":"36"},{"size":1777,"mtime":1631202217810,"results":"38","hashOfConfig":"36"},{"size":585,"mtime":1631202217852,"results":"39","hashOfConfig":"36"},{"size":2554,"mtime":1631202217853,"results":"40","hashOfConfig":"36"},{"size":810,"mtime":1631202217812,"results":"41","hashOfConfig":"36"},{"size":2369,"mtime":1631202217844,"results":"42","hashOfConfig":"36"},{"size":2721,"mtime":1631202217847,"results":"43","hashOfConfig":"36"},{"size":923,"mtime":1631202217846,"results":"44","hashOfConfig":"36"},{"size":1944,"mtime":1631202217853,"results":"45","hashOfConfig":"36"},{"size":5290,"mtime":1631279009097,"results":"46","hashOfConfig":"36"},{"size":1893,"mtime":1631202217853,"results":"47","hashOfConfig":"36"},{"size":2749,"mtime":1631202217813,"results":"48","hashOfConfig":"36"},{"size":570,"mtime":1631202217813,"results":"49","hashOfConfig":"36"},{"size":438,"mtime":1631202217811,"results":"50","hashOfConfig":"36"},{"size":1116,"mtime":1631202217812,"results":"51","hashOfConfig":"36"},{"size":1907,"mtime":1631202217853,"results":"52","hashOfConfig":"36"},{"size":2788,"mtime":1631202217852,"results":"53","hashOfConfig":"36"},{"size":780,"mtime":1631202217811,"results":"54","hashOfConfig":"36"},{"size":5643,"mtime":1631295323583,"results":"55","hashOfConfig":"36"},{"size":595,"mtime":1631202217848,"results":"56","hashOfConfig":"36"},{"size":2485,"mtime":1631202217848,"results":"57","hashOfConfig":"36"},{"size":3235,"mtime":1631202217850,"results":"58","hashOfConfig":"36"},{"size":3762,"mtime":1631202217849,"results":"59","hashOfConfig":"36"},{"size":9223,"mtime":1631202217849,"results":"60","hashOfConfig":"36"},{"size":4525,"mtime":1631278736536,"results":"61","hashOfConfig":"36"},{"size":940,"mtime":1631202217845,"results":"62","hashOfConfig":"36"},{"size":4603,"mtime":1631292237587,"results":"63","hashOfConfig":"36"},{"size":3033,"mtime":1631202217851,"results":"64","hashOfConfig":"36"},{"size":2820,"mtime":1631277182472,"results":"65","hashOfConfig":"36"},{"size":3022,"mtime":1631293352417,"results":"66","hashOfConfig":"36"},{"size":1151,"mtime":1631291853075,"results":"67","hashOfConfig":"36"},{"size":2589,"mtime":1631202485464,"results":"68","hashOfConfig":"36"},{"size":2242,"mtime":1631202460134,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kt1cyw",{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"128"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"128"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"128"},{"filePath":"139","messages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"128"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"128"},"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/index.tsx",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/index.ts",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/App.tsx",["145","146"],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/reducers.ts",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/userReducer/userThunk.ts",["147"],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/api/routePage/AppRouter.tsx",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/components/header/header.tsx",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/components/modalWindows/userRegistrationForm/UserRegistrationForm.tsx",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/components/modalWindows/loginForm/loginForm.tsx",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/userReducer/userReducer.ts",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/boardReducer/boardReducer.ts",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/userReducer/actionUser.ts",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/api/userApi/userApi.ts",["148"],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/api/userApi/uploadFile/uploadImageApi.ts",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/api/const/const.js",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/api/routePage/routes.tsx",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/userReducer/constansUser.ts",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/boardReducer/constansBoard.ts",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/api/index.ts",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/boardspace/boardSpace.tsx",["149","150","151","152","153","154","155","156","157","158","159"],"import React, { useState } from 'react';\nimport styles from './boardSpace.module.scss';\nimport deleteButton from '../../icon/deleteAll.png';\nimport deleteTaskButton from '../../icon/close.png';\n\nimport { useEffect } from 'react';\n\nimport Main from '../components/main/Main';\nimport { useAppSelector } from '../../store/reducers';\nimport { IColumn, ITask } from '../../types/types';\nimport { useLocation, useParams } from 'react-router';\nimport { useDispatch } from 'react-redux';\nimport { creatColumn, creatTask, deleteColumn, deleteTask, getAllColumns, getAllTasks, reorderTask } from '../../store/boardReducer/boardThunk';\nimport BoardItem from './BoardItem/BoardItem';\nimport { DragDropContext, DropResult, ResponderProvided } from 'react-beautiful-dnd';\n\n\ninterface IUseParams {\n  id: string;\n}\n\nconst BoardSpace = () => {\n  const useBoardId = useParams<IUseParams>()\n  const boardIdNumber = Number(useBoardId.id)\n\n  const dispatch = useDispatch();\n\n const [titleColumn, setTitleColumn] = useState('');\n  const [positionColumn, setPositionColumn] = useState(null);\n  const userColumnArray = useAppSelector((state) => state.board.column)\n\n\n\n  const craetNewColumnForm = (event: React.FormEvent<HTMLFormElement>) => {\n    const column: IColumn = {\n      title: titleColumn,\n      position: positionColumn,\n      boardId: boardIdNumber,\n      Tasks: []\n    }\n    dispatch(creatColumn(column));\n    setTitleColumn(\"\");\n    event.preventDefault();\n  }\n\n  function onDragEnd(result: DropResult, provided: ResponderProvided) {\n    const { source, destination, draggableId, type } = result;\n    if (!destination) return\n    // const taskId = +draggableId;\n    // const columnIDEnd = +(destination.droppableId.split(' ')[1]);\n    if(type !== 'column'){\n      const taskIndexEnd = destination?.index;\n      const columnIndexEnd = Number((destination.droppableId.split(' ')[0]));\n      const taskIndexStart = source.index;\n      const columnIndexStart = Number((source.droppableId.split(' ')[0]));\n      console.log('value', taskIndexEnd)\n  \n  \n  \n      if (columnIndexStart === columnIndexEnd && taskIndexStart !== taskIndexEnd) {\n        const newColumnState = userColumnArray.slice();\n        const newTaskState = newColumnState[columnIndexEnd].Tasks;\n        const [removed] = newTaskState.splice(taskIndexStart, 1);\n        newTaskState.splice(taskIndexEnd, 0, removed);\n  \n        newColumnState[columnIndexEnd].Tasks = newTaskState;\n        const sortArr = newTaskState.map((item, index) => item = {\n          id: item.id,\n          title: item.title,\n          description: item.description,\n          position: index,\n          priority: item.priority,\n          columnId: item.columnId,\n        })\n              \n        const columnIndex: number = columnIndexStart;\n        const task: ITask[] = sortArr\n        dispatch(reorderTask(task, taskIndexStart, taskIndexEnd, columnIndex))\n      }\n      else if(columnIndexStart !== columnIndexEnd){\n        if(!userColumnArray[columnIndexEnd].Tasks){\n          userColumnArray[columnIndexEnd].Tasks = []\n        }\n        const baseColumnArr = userColumnArray;\n        const arrTaskStart = userColumnArray[columnIndexStart].Tasks.slice();\n        const arrTaskEnd = userColumnArray[columnIndexEnd].Tasks.slice();\n        const [removed] = arrTaskStart.splice(taskIndexStart, 1);\n        removed.columnId = baseColumnArr[columnIndexEnd].id\n        // const updateTaskArrStart = arrTaskStart.splice(taskIndexStart, 1);\n        // const updateTaskArrEnd = arrTaskEnd.splice(taskIndexEnd, 0, removed)\n        arrTaskEnd.splice(taskIndexEnd, 0, removed)\n        const arrTaskStartSort = arrTaskStart.map((item, index) => item={\n          id: item.id,\n          title: item.title,\n          description: item.description,\n          position: index,\n          priority: item.priority,\n          columnId: item.columnId,\n        })\n        dispatch(reorderTask(arrTaskStartSort, taskIndexStart, taskIndexEnd, columnIndexStart))\n        baseColumnArr[columnIndexStart].Tasks = arrTaskStartSort;\n        const ARRR = baseColumnArr[columnIndexStart]\n        // dispatch(updateColumn(ARRR))\n        console.log('ARRR ', ARRR)\n  \n        const arrTaskEndSort = arrTaskEnd.map((item, index) => item={\n          id: item.id,\n          title: item.title,\n          description: item.description,\n          position: index,\n          priority: item.priority,\n          columnId: item.columnId,\n        })\n        console.log('REMOVE', arrTaskEndSort)\n  \n        dispatch(reorderTask(arrTaskEndSort, taskIndexStart, taskIndexEnd, columnIndexEnd))\n        baseColumnArr[columnIndexEnd].Tasks = arrTaskEndSort;\n        const column = baseColumnArr[columnIndexEnd];\n        // dispatch(updateColumn(column))\n        console.log('UPDATE COLUMN', column)\n        // dispatch(reorderColumn(column))\n      }\n    } else     if(type === 'column'){\n      console.log('VOT TUT', result)\n\n    }\n\n  }\n\n  return (\n    <Main>\n      <div className={styles.columnSpace}>\n        <div className={styles.new_column_input_wrapper}>\n          <form onSubmit={craetNewColumnForm} className={styles.header_input_form}>\n            <input\n              onChange={(e) => setTitleColumn(e.target.value)}\n              name='board' required\n              value={titleColumn}\n              type=\"text\"\n              placeholder='New column'\n            />\n            <button type=\"submit\" className={styles.create_button}>CREATE</button>\n          </form >\n        </div>\n      </div>\n\n      <DragDropContext\n      onDragEnd={onDragEnd}\n    >\n        <BoardItem />\n      </DragDropContext>\n\n\n    </Main>\n\n  );\n};\n\nexport default BoardSpace;","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/homePage/homePage.tsx",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/login/loginPage.tsx",["160","161"],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/workSpace/WorkSpace.tsx",["162","163"],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/registration/registartionWindow.tsx",["164","165"],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/userPage/userPage.tsx",["166","167","168","169","170","171","172","173","174","175","176"],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/boardReducer/boardThunk.ts",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/components/main/Main.tsx",["177"],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/boardspace/BoardItem/BoardItem.tsx",["178","179","180","181","182","183","184","185"],"\nimport { useAppSelector } from '../../../store/reducers';\nimport styles from '../boardSpace.module.scss';\nimport ColumnItem from '../ColumnItem/ColumnItem';\nimport { DragDropContext, Droppable, DropResult, ResponderProvided } from 'react-beautiful-dnd';\nimport { ITask } from '../../../types/types';\nimport { useDispatch } from 'react-redux';\nimport { reorderTask, updateColumn, updateTask } from '../../../store/boardReducer/boardThunk';\n\nconst BoardItem = () => {\n\n\n  const dispatch = useDispatch();\n\n  const userColumnArray = useAppSelector((state) => state.board.column)\n  // const boardId = userColumnArray[0].boardId\n\n  // function onDragEnd(result: DropResult, provided: ResponderProvided) {\n  //   const { source, destination, draggableId } = result;\n  //   if (!destination) return\n  //   // const taskId = +draggableId;\n  //   // const columnIDEnd = +(destination.droppableId.split(' ')[1]);\n  //   const taskIndexEnd = destination?.index;\n  //   const columnIndexEnd = Number((destination.droppableId.split(' ')[0]));\n  //   const taskIndexStart = source.index;\n  //   const columnIndexStart = Number((source.droppableId.split(' ')[0]));\n  //   console.log('value', taskIndexEnd)\n\n  //   if (columnIndexStart === columnIndexEnd && taskIndexStart !== taskIndexEnd) {\n  //     const newColumnState = userColumnArray.slice();\n  //     const newTaskState = newColumnState[columnIndexEnd].Tasks;\n  //     const [removed] = newTaskState.splice(taskIndexStart, 1);\n  //     newTaskState.splice(taskIndexEnd, 0, removed);\n\n  //     newColumnState[columnIndexEnd].Tasks = newTaskState;\n  //     const sortArr = newTaskState.map((item, index) => item = {\n  //       id: item.id,\n  //       title: item.title,\n  //       description: item.description,\n  //       position: index,\n  //       priority: item.priority,\n  //       columnId: item.columnId,\n  //     })\n            \n  //     const columnIndex: number = columnIndexStart;\n  //     const task: ITask[] = sortArr\n  //     dispatch(reorderTask(task, taskIndexStart, taskIndexEnd, columnIndex))\n  //   }\n  //   else if(columnIndexStart !== columnIndexEnd){\n  //     if(!userColumnArray[columnIndexEnd].Tasks){\n  //       userColumnArray[columnIndexEnd].Tasks = []\n  //     }\n  //     const baseColumnArr = userColumnArray;\n  //     const arrTaskStart = userColumnArray[columnIndexStart].Tasks.slice();\n  //     const arrTaskEnd = userColumnArray[columnIndexEnd].Tasks.slice();\n  //     const [removed] = arrTaskStart.splice(taskIndexStart, 1);\n  //     removed.columnId = baseColumnArr[columnIndexEnd].id\n  //     // const updateTaskArrStart = arrTaskStart.splice(taskIndexStart, 1);\n  //     // const updateTaskArrEnd = arrTaskEnd.splice(taskIndexEnd, 0, removed)\n  //     arrTaskEnd.splice(taskIndexEnd, 0, removed)\n  //     const arrTaskStartSort = arrTaskStart.map((item, index) => item={\n  //       id: item.id,\n  //       title: item.title,\n  //       description: item.description,\n  //       position: index,\n  //       priority: item.priority,\n  //       columnId: item.columnId,\n  //     })\n  //     dispatch(reorderTask(arrTaskStartSort, taskIndexStart, taskIndexEnd, columnIndexStart))\n  //     baseColumnArr[columnIndexStart].Tasks = arrTaskStartSort;\n  //     const ARRR = baseColumnArr[columnIndexStart]\n  //     // dispatch(updateColumn(ARRR))\n  //     console.log('ARRR ', ARRR)\n\n  //     const arrTaskEndSort = arrTaskEnd.map((item, index) => item={\n  //       id: item.id,\n  //       title: item.title,\n  //       description: item.description,\n  //       position: index,\n  //       priority: item.priority,\n  //       columnId: item.columnId,\n  //     })\n  //     console.log('REMOVE', arrTaskEndSort)\n\n  //     dispatch(reorderTask(arrTaskEndSort, taskIndexStart, taskIndexEnd, columnIndexEnd))\n  //     baseColumnArr[columnIndexEnd].Tasks = arrTaskEndSort;\n  //     const column = baseColumnArr[columnIndexEnd];\n  //     // dispatch(updateColumn(column))\n  //     console.log('UPDATE COLUMN', column)\n\n  //     // dispatch(reorderColumn(column))\n\n  //   }\n\n  // }\n\n\n\n  return (\n    // <DragDropContext\n    //   onDragEnd={onDragEnd}\n    // >\n\n  <Droppable droppableId='boardId' type='column'>\n    {(provided) => (\n      <div className={styles.column_wrapper}\n      {...provided.droppableProps}\n      ref={provided.innerRef}>\n        {userColumnArray.map(\n          (column, index) =>\n            <ColumnItem key={column.id} column={column} columnIndex={index}\n            />\n            )\n          }\n    {provided.placeholder}\n      </div>\n    )}\n\n  </Droppable>\n\n    // </DragDropContext>\n  )\n}\n\nexport default BoardItem\n",["186","187"],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/boardReducer/actionBoard.ts",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/api/boardApi/boardApi.ts",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/boardspace/ColumnItem/ColumnItem.tsx",["188","189","190","191","192","193"],"import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\n\nimport { creatTask, deleteColumn } from '../../../store/boardReducer/boardThunk';\nimport { IColumn, ITask } from '../../../types/types';\nimport styles from '../boardSpace.module.scss';\nimport TaskList from '../TaskList/TaskList';\nimport deleteButton from '../../../icon/deleteAll.png';\nimport { useAppSelector } from '../../../store/reducers';\n\n\ninterface Props {\n  column: IColumn;\n  columnIndex: number\n}\n\nconst ColumnItem: React.FC<Props> = ({ column, columnIndex }) => {\n\n  const columnArr = useAppSelector((state) => state.board.column[columnIndex].Tasks?.length)\n  const arrLenth = () => {\n    if (!columnArr) {\n      return 0\n    }\n    return columnArr\n  }\n\n\n  const [titleTask, setTitleTask] = useState('');\n  const [priorityTask, setPriorityTask] = useState(null);\n  const [taskColumnId, setColumnId] = useState('');\n  const [taskDescription, setTaskDescription] = useState('');\n\n  const dispatch = useDispatch();\n\n  const craetNewTaskForm = (event: React.FormEvent<HTMLFormElement>, id: number | undefined) => {\n    const task: ITask = {\n      title: titleTask,\n      position: arrLenth(),\n      priority: priorityTask,\n      description: taskDescription,\n      columnId: id,\n    }\n    dispatch(creatTask(task));\n    setTitleTask(\"\");\n    event.preventDefault();\n  }\n\n  const deleteOneColumn = (id: number | undefined) => {\n    const column: IColumn = {\n      id: id,\n      Tasks: []\n    };\n    console.log('BdfgsdgsD ID', column)\n    dispatch(deleteColumn(column));\n  }\n\n  return (\n    <Draggable key={columnIndex} draggableId={`${column.id}`} index={columnIndex}>\n      {(provided) => (\n        <div className={styles.OneColumn}\n        {...provided.draggableProps}\n        {...provided.dragHandleProps}\n        style={{ ...provided.draggableProps.style }}\n        ref={provided.innerRef}\n        >\n          <div className={styles.column__title}\n          >\n            {column.title}\n          </div>\n\n\n          {/* <div\n          className={styles.task_list_drop}\n        > */}\n            {column.Tasks && <TaskList tasks={column.Tasks} columnIndex={columnIndex} columnID={column.id} />}\n          {/* </div> */}\n\n            <form\n              onSubmit={(e) => craetNewTaskForm(e, column.id)}\n              className={styles.new_task_input_form}>\n              <input\n                onChange={(e) => setTitleTask(e.target.value)}\n                name='name' required\n                value={titleTask}\n                type=\"text\"\n                placeholder='`New task'\n              />\n            </form >\n\n            <div className={styles.delete_oneColumn_button_wrapper}>\n              <a onClick={() => deleteOneColumn(column.id)}>\n                <img src={deleteButton} className={styles.delete_column_button} alt='delete'></img>\n              </a>\n            </div>\n          </div>\n\n        )}\n          </Draggable >\n  )\n}\n\nexport default ColumnItem\n\n","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/boardspace/TaskList/TaskList.tsx",["194","195"],"import { useEffect } from 'react';\nimport { Droppable } from 'react-beautiful-dnd';\nimport { useAppSelector } from '../../../store/reducers';\nimport { ITask } from '../../../types/types';\nimport styles from '../boardSpace.module.scss';\nimport TaskItem from '../TaskItem/TaskItem';\n\ninterface Props {\n  tasks?: ITask[],\n  columnIndex: number,\n  columnID?: number\n}\n\nconst TaskList: React.FC<Props> = ({ tasks, columnIndex, columnID }) => {\n  const sortArr = tasks?.sort((a, b) => {\n    if(!a.position || !b.position) return 0\n    if (a.position > b.position) return 1\n    if (a.position < b.position) return -1\n    return 0\n  })\n\n  const content = sortArr?.map((task, index) =>\n    // <TaskItem task={task} />\n    <TaskItem task={task} taskIndex={index} key={task.id} columnIndex={columnIndex} />\n  )\n\n\n  return (\n    <Droppable key={columnIndex} droppableId={`${columnIndex} ${columnID}`} >\n      {(provided) => (\n      <div className={styles.task_wrapper}\n      {...provided.droppableProps}\n      ref={provided.innerRef}\n      >\n        {content}\n        {provided.placeholder}\n      </div>\n      )}\n    </Droppable>\n\n  )\n}\n\nexport default TaskList\n\n","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/boardspace/TaskItem/TaskItem.tsx",["196","197","198"],"import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux';\nimport { Draggable } from 'react-beautiful-dnd';\n\n\nimport { ITask } from '../../../types/types';\nimport styles from '../boardSpace.module.scss';\nimport deleteTaskButton from '../../../icon/close.png';\nimport descriptionTaskButton from '../../../icon/description.png';\nimport { deleteTask } from '../../../store/boardReducer/boardThunk';\nimport DescriptionTask from '../DescriptionTask/DescriptionTaskModal'\nimport { useAppSelector } from '../../../store/reducers';\n\ninterface Props {\n  task: ITask,\n  taskIndex: number,\n  columnIndex: number\n}\n\nconst TaskItem: React.FC<Props> = ({ task, taskIndex, columnIndex }) => {\n\n  // const taskPosiotion = useAppSelector((state) => state.board.column[taskIndex].Tasks[taskIndex].position)\n\n  const dispatch = useDispatch();\n  const [visionDescription, setVisionDescription] = useState(false);\n\n  const deleteOneTask = (id: number | undefined) => {\n    const task: ITask = {\n      id: id,\n    };\n    console.log('BdfgsdgsD ID', task)\n    dispatch(deleteTask(task));\n  }\n\n  return (\n    <Draggable key={task.id} draggableId={`${task.id}`} index={taskIndex}>\n      {(provided, snapshot) => {\n\n        return (\n          <div className={styles.task_style}\n            // draggable={true}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n            style={{ ...provided.draggableProps.style }}\n\n          // onDragStart={(event) => dragStartHeandler(event, task.id, task.columnId)}\n          >\n            <p>\n              {task.title}\n            </p>\n            <div className={styles.description_button_wrapper}>\n              <a onClick={() => setVisionDescription(true)}>\n                <img src={descriptionTaskButton} className={styles.description_task_button} alt='delete'></img>\n              </a>\n            </div>\n            <div className={styles.delete_button_wrapper}>\n              <a onClick={() => deleteOneTask(task.id)}>\n                <img src={deleteTaskButton} className={styles.delete_task_button} alt='delete'></img>\n              </a>\n            </div>\n            {visionDescription && <DescriptionTask\n              setVisionDescription={setVisionDescription}\n              taskId={task.id}\n              taskIndex={taskIndex}\n              columnIndex={columnIndex}\n              taskDescriptionValue={task.description}\n              taskTitleValue={task.title}\n            />}\n          </div>\n        )\n      }}\n    </Draggable >\n\n  )\n}\n\nexport default TaskItem\n","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/boardspace/DescriptionTask/DescriptionTaskModal.tsx",["199","200"],"import React, { useState } from 'react';\n\nimport styles from './descriptionTaskModal.module.scss';\nimport deleteTaskButton from '../../../icon/close.png';\nimport { ITask } from '../../../types/types';\nimport { useDispatch } from 'react-redux';\nimport { updateTask } from '../../../store/boardReducer/boardThunk';\nimport { useAppSelector } from '../../../store/reducers';\n\n\ninterface Props {\n  setVisionDescription: React.Dispatch<React.SetStateAction<boolean>>,\n  taskId?: number,\n  taskDescriptionValue?: string,\n  taskTitleValue?: string,\n  taskIndex: number,\n  columnIndex: number\n}\n\nconst DescriptionTask: React.FC<Props> = ({ setVisionDescription, taskId, taskIndex,\n  columnIndex, taskDescriptionValue, taskTitleValue}) => {\n\n\n  const dispatch = useDispatch();\n\n  const [taskDescription, setTaskDescription] = useState(taskDescriptionValue);\n  const [taskTitle, setTaskTitle] = useState(taskTitleValue);\n  const updateDescription = (event: React.FormEvent<HTMLFormElement>, taskId?: number) => {\n    const task: ITask = {\n      id: taskId,\n      description: taskDescription,\n      title: taskTitle,\n    }\n    dispatch(updateTask( task, columnIndex, taskIndex ))\n    setVisionDescription(false)\n    event.preventDefault();\n  }\n\n  return (\n    <div className={styles.description_wrapper}>\n      <form\n        onSubmit={(e) => updateDescription(e, taskId)}\n        className={styles.description_form}>\n      <h4>Change title name</h4>\n      <input\n        className={styles.input_task_title}\n        onChange={(e) => setTaskTitle(e.target.value)}\n        defaultValue={taskTitleValue}\n      ></input>\n            <h6>Description</h6>\n\n         <textarea\n          className={styles.input_description}\n          onChange={(e) => setTaskDescription(e.target.value)}\n          defaultValue={taskDescriptionValue}\n        ></textarea>\n        <button type=\"submit\" className={styles.save_description_button}>SAVE</button>\n      </form>\n\n      <div className={styles.close_button_wrapper}>\n        <a\n          onClick={() => setVisionDescription(false)}\n        >\n          <img src={deleteTaskButton} className={styles.close_description_button} alt='close'></img>\n        </a>\n      </div>\n\n    </div>\n  )\n}\nexport default DescriptionTask\n\n\n",{"ruleId":"201","severity":1,"message":"202","line":24,"column":9,"nodeType":"203","messageId":"204","endLine":24,"endColumn":15},{"ruleId":"205","severity":1,"message":"206","line":41,"column":6,"nodeType":"207","endLine":41,"endColumn":8,"suggestions":"208"},{"ruleId":"201","severity":1,"message":"209","line":1,"column":10,"nodeType":"203","messageId":"204","endLine":1,"endColumn":23},{"ruleId":"201","severity":1,"message":"210","line":62,"column":13,"nodeType":"203","messageId":"204","endLine":62,"endColumn":18},{"ruleId":"201","severity":1,"message":"211","line":3,"column":8,"nodeType":"203","messageId":"204","endLine":3,"endColumn":20},{"ruleId":"201","severity":1,"message":"212","line":4,"column":8,"nodeType":"203","messageId":"204","endLine":4,"endColumn":24},{"ruleId":"201","severity":1,"message":"213","line":6,"column":10,"nodeType":"203","messageId":"204","endLine":6,"endColumn":19},{"ruleId":"201","severity":1,"message":"214","line":11,"column":10,"nodeType":"203","messageId":"204","endLine":11,"endColumn":21},{"ruleId":"201","severity":1,"message":"215","line":13,"column":23,"nodeType":"203","messageId":"204","endLine":13,"endColumn":32},{"ruleId":"201","severity":1,"message":"216","line":13,"column":34,"nodeType":"203","messageId":"204","endLine":13,"endColumn":46},{"ruleId":"201","severity":1,"message":"217","line":13,"column":48,"nodeType":"203","messageId":"204","endLine":13,"endColumn":58},{"ruleId":"201","severity":1,"message":"218","line":13,"column":60,"nodeType":"203","messageId":"204","endLine":13,"endColumn":73},{"ruleId":"201","severity":1,"message":"219","line":13,"column":75,"nodeType":"203","messageId":"204","endLine":13,"endColumn":86},{"ruleId":"201","severity":1,"message":"220","line":29,"column":26,"nodeType":"203","messageId":"204","endLine":29,"endColumn":43},{"ruleId":"201","severity":1,"message":"221","line":47,"column":34,"nodeType":"203","messageId":"204","endLine":47,"endColumn":45},{"ruleId":"201","severity":1,"message":"222","line":8,"column":10,"nodeType":"203","messageId":"204","endLine":8,"endColumn":21},{"ruleId":"223","severity":1,"message":"224","line":56,"column":11,"nodeType":"225","endLine":56,"endColumn":50},{"ruleId":"201","severity":1,"message":"226","line":14,"column":10,"nodeType":"203","messageId":"204","endLine":14,"endColumn":29},{"ruleId":"223","severity":1,"message":"224","line":85,"column":15,"nodeType":"225","endLine":85,"endColumn":59},{"ruleId":"201","severity":1,"message":"222","line":4,"column":23,"nodeType":"203","messageId":"204","endLine":4,"endColumn":34},{"ruleId":"223","severity":1,"message":"224","line":63,"column":7,"nodeType":"225","endLine":63,"endColumn":46},{"ruleId":"201","severity":1,"message":"227","line":4,"column":27,"nodeType":"203","messageId":"204","endLine":4,"endColumn":33},{"ruleId":"201","severity":1,"message":"228","line":4,"column":35,"nodeType":"203","messageId":"204","endLine":4,"endColumn":46},{"ruleId":"201","severity":1,"message":"213","line":4,"column":48,"nodeType":"203","messageId":"204","endLine":4,"endColumn":57},{"ruleId":"201","severity":1,"message":"229","line":12,"column":38,"nodeType":"203","messageId":"204","endLine":12,"endColumn":64},{"ruleId":"201","severity":1,"message":"230","line":14,"column":18,"nodeType":"203","messageId":"204","endLine":14,"endColumn":28},{"ruleId":"201","severity":1,"message":"231","line":15,"column":10,"nodeType":"203","messageId":"204","endLine":15,"endColumn":14},{"ruleId":"201","severity":1,"message":"232","line":15,"column":16,"nodeType":"203","messageId":"204","endLine":15,"endColumn":20},{"ruleId":"201","severity":1,"message":"233","line":15,"column":30,"nodeType":"203","messageId":"204","endLine":15,"endColumn":36},{"ruleId":"201","severity":1,"message":"234","line":16,"column":8,"nodeType":"203","messageId":"204","endLine":16,"endColumn":13},{"ruleId":"201","severity":1,"message":"235","line":20,"column":57,"nodeType":"203","messageId":"204","endLine":20,"endColumn":70},{"ruleId":"223","severity":1,"message":"224","line":125,"column":7,"nodeType":"225","endLine":125,"endColumn":46},{"ruleId":"223","severity":1,"message":"224","line":29,"column":9,"nodeType":"225","endLine":29,"endColumn":42},{"ruleId":"201","severity":1,"message":"236","line":5,"column":10,"nodeType":"203","messageId":"204","endLine":5,"endColumn":25},{"ruleId":"201","severity":1,"message":"237","line":5,"column":38,"nodeType":"203","messageId":"204","endLine":5,"endColumn":48},{"ruleId":"201","severity":1,"message":"238","line":5,"column":50,"nodeType":"203","messageId":"204","endLine":5,"endColumn":67},{"ruleId":"201","severity":1,"message":"239","line":6,"column":10,"nodeType":"203","messageId":"204","endLine":6,"endColumn":15},{"ruleId":"201","severity":1,"message":"240","line":8,"column":10,"nodeType":"203","messageId":"204","endLine":8,"endColumn":21},{"ruleId":"201","severity":1,"message":"241","line":8,"column":23,"nodeType":"203","messageId":"204","endLine":8,"endColumn":35},{"ruleId":"201","severity":1,"message":"242","line":8,"column":37,"nodeType":"203","messageId":"204","endLine":8,"endColumn":47},{"ruleId":"201","severity":1,"message":"243","line":13,"column":9,"nodeType":"203","messageId":"204","endLine":13,"endColumn":17},{"ruleId":"244","replacedBy":"245"},{"ruleId":"246","replacedBy":"247"},{"ruleId":"201","severity":1,"message":"248","line":4,"column":21,"nodeType":"203","messageId":"204","endLine":4,"endColumn":30},{"ruleId":"201","severity":1,"message":"249","line":31,"column":24,"nodeType":"203","messageId":"204","endLine":31,"endColumn":39},{"ruleId":"201","severity":1,"message":"250","line":32,"column":10,"nodeType":"203","messageId":"204","endLine":32,"endColumn":22},{"ruleId":"201","severity":1,"message":"251","line":32,"column":24,"nodeType":"203","messageId":"204","endLine":32,"endColumn":35},{"ruleId":"201","severity":1,"message":"252","line":33,"column":27,"nodeType":"203","messageId":"204","endLine":33,"endColumn":45},{"ruleId":"223","severity":1,"message":"224","line":93,"column":15,"nodeType":"225","endLine":93,"endColumn":61},{"ruleId":"201","severity":1,"message":"213","line":1,"column":10,"nodeType":"203","messageId":"204","endLine":1,"endColumn":19},{"ruleId":"201","severity":1,"message":"253","line":3,"column":10,"nodeType":"203","messageId":"204","endLine":3,"endColumn":24},{"ruleId":"201","severity":1,"message":"253","line":12,"column":10,"nodeType":"203","messageId":"204","endLine":12,"endColumn":24},{"ruleId":"223","severity":1,"message":"224","line":53,"column":15,"nodeType":"225","endLine":53,"endColumn":61},{"ruleId":"223","severity":1,"message":"224","line":58,"column":15,"nodeType":"225","endLine":58,"endColumn":57},{"ruleId":"201","severity":1,"message":"253","line":8,"column":10,"nodeType":"203","messageId":"204","endLine":8,"endColumn":24},{"ruleId":"223","severity":1,"message":"224","line":61,"column":9,"nodeType":"225","endLine":63,"endColumn":10},"@typescript-eslint/no-unused-vars","'isAuth' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["254"],"'getAvatarInfo' is defined but never used.","'users' is assigned a value but never used.","'deleteButton' is defined but never used.","'deleteTaskButton' is defined but never used.","'useEffect' is defined but never used.","'useLocation' is defined but never used.","'creatTask' is defined but never used.","'deleteColumn' is defined but never used.","'deleteTask' is defined but never used.","'getAllColumns' is defined but never used.","'getAllTasks' is defined but never used.","'setPositionColumn' is assigned a value but never used.","'draggableId' is assigned a value but never used.","'useSelector' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'actionsGetAllColumn' is defined but never used.","'useRef' is defined but never used.","'useCallback' is defined but never used.","'updateUserInformationToken' is defined but never used.","'compareAsc' is defined but never used.","'Card' is defined but never used.","'Form' is defined but never used.","'Figure' is defined but never used.","'axios' is defined but never used.","'stateAvatarId' is assigned a value but never used.","'DragDropContext' is defined but never used.","'DropResult' is defined but never used.","'ResponderProvided' is defined but never used.","'ITask' is defined but never used.","'reorderTask' is defined but never used.","'updateColumn' is defined but never used.","'updateTask' is defined but never used.","'dispatch' is assigned a value but never used.","no-native-reassign",["255"],"no-negated-in-lhs",["256"],"'Droppable' is defined but never used.","'setPriorityTask' is assigned a value but never used.","'taskColumnId' is assigned a value but never used.","'setColumnId' is assigned a value but never used.","'setTaskDescription' is assigned a value but never used.","'useAppSelector' is defined but never used.",{"desc":"257","fix":"258"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [dispatch]",{"range":"259","text":"260"},[1258,1260],"[dispatch]"]