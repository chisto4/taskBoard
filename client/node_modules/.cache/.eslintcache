[{"/Users/chistofor/Documents/project/taskBoard/client/src/index.tsx":"1","/Users/chistofor/Documents/project/taskBoard/client/src/store/index.ts":"2","/Users/chistofor/Documents/project/taskBoard/client/src/App.tsx":"3","/Users/chistofor/Documents/project/taskBoard/client/src/store/reducers.ts":"4","/Users/chistofor/Documents/project/taskBoard/client/src/store/userReducer/userThunk.ts":"5","/Users/chistofor/Documents/project/taskBoard/client/src/api/routePage/AppRouter.tsx":"6","/Users/chistofor/Documents/project/taskBoard/client/src/pages/components/header/header.tsx":"7","/Users/chistofor/Documents/project/taskBoard/client/src/pages/components/modalWindows/userRegistrationForm/UserRegistrationForm.tsx":"8","/Users/chistofor/Documents/project/taskBoard/client/src/pages/components/modalWindows/loginForm/loginForm.tsx":"9","/Users/chistofor/Documents/project/taskBoard/client/src/store/userReducer/userReducer.ts":"10","/Users/chistofor/Documents/project/taskBoard/client/src/store/userReducer/actionUser.ts":"11","/Users/chistofor/Documents/project/taskBoard/client/src/api/const/const.js":"12","/Users/chistofor/Documents/project/taskBoard/client/src/api/userApi/userApi.ts":"13","/Users/chistofor/Documents/project/taskBoard/client/src/api/routePage/routes.tsx":"14","/Users/chistofor/Documents/project/taskBoard/client/src/store/userReducer/constansUser.ts":"15","/Users/chistofor/Documents/project/taskBoard/client/src/api/userApi/index.ts":"16","/Users/chistofor/Documents/project/taskBoard/client/src/pages/workSpace/WorkSpace.js":"17","/Users/chistofor/Documents/project/taskBoard/client/src/pages/userPage/userPage.tsx":"18","/Users/chistofor/Documents/project/taskBoard/client/src/pages/homePage/homePage.tsx":"19","/Users/chistofor/Documents/project/taskBoard/client/src/pages/login/loginPage.tsx":"20","/Users/chistofor/Documents/project/taskBoard/client/src/pages/registration/registartionWindow.tsx":"21","/Users/chistofor/Documents/project/taskBoard/client/src/pages/components/main/Main.tsx":"22"},{"size":241,"mtime":1629877235719,"results":"23","hashOfConfig":"24"},{"size":457,"mtime":1629877235799,"results":"25","hashOfConfig":"24"},{"size":1716,"mtime":1629998006617,"results":"26","hashOfConfig":"24"},{"size":503,"mtime":1629877235801,"results":"27","hashOfConfig":"24"},{"size":2044,"mtime":1630055533554,"results":"28","hashOfConfig":"24"},{"size":810,"mtime":1629959531256,"results":"29","hashOfConfig":"24"},{"size":2099,"mtime":1629994575017,"results":"30","hashOfConfig":"24"},{"size":2721,"mtime":1629959531319,"results":"31","hashOfConfig":"24"},{"size":923,"mtime":1629959531317,"results":"32","hashOfConfig":"24"},{"size":1712,"mtime":1629912730276,"results":"33","hashOfConfig":"24"},{"size":1145,"mtime":1629912857054,"results":"34","hashOfConfig":"24"},{"size":359,"mtime":1629877235623,"results":"35","hashOfConfig":"24"},{"size":2288,"mtime":1629997855425,"results":"36","hashOfConfig":"24"},{"size":983,"mtime":1629959531256,"results":"37","hashOfConfig":"24"},{"size":1631,"mtime":1629877267369,"results":"38","hashOfConfig":"24"},{"size":781,"mtime":1629997652269,"results":"39","hashOfConfig":"24"},{"size":3508,"mtime":1629959531326,"results":"40","hashOfConfig":"24"},{"size":7914,"mtime":1630055073067,"results":"41","hashOfConfig":"24"},{"size":595,"mtime":1629959531323,"results":"42","hashOfConfig":"24"},{"size":1779,"mtime":1629959531324,"results":"43","hashOfConfig":"24"},{"size":3075,"mtime":1629959531325,"results":"44","hashOfConfig":"24"},{"size":927,"mtime":1629959531315,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"a3mr1x",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/chistofor/Documents/project/taskBoard/client/src/index.tsx",[],["98","99"],"/Users/chistofor/Documents/project/taskBoard/client/src/store/index.ts",[],"/Users/chistofor/Documents/project/taskBoard/client/src/App.tsx",["100","101"],"import React, { useEffect, useState } from 'react';\n\nimport './App.css';\nimport { BrowserRouter, Switch } from 'react-router-dom';\nimport UserRegistrationForm from './pages/components/modalWindows/userRegistrationForm/UserRegistrationForm'\nimport UserLoginForm from './pages/components/modalWindows/loginForm/loginForm';\nimport AppRouter from './api/routePage/AppRouter';\n\nimport Header from './pages/components/header/header';\nimport { useDispatch } from 'react-redux';\nimport { updateUserInformationToken } from './store/userReducer/userThunk';\nimport { useAppSelector } from './store/reducers';\n// import { useAppSelector } from './store/reducers';\n\nfunction App() {\n  const [logForm, setLogForm] = useState(false);\n  const [regForm, setRegForm] = useState(false);\n\n  const dispatch: any = useDispatch<any>();\n\n  const isAuth = useAppSelector((state) => state.user.auth)\n\n  const onClickLog = () => {\n    setLogForm(!logForm);\n    if (regForm) {\n      setRegForm(!regForm);\n    }\n  }\n  const onClickReg = () => {\n    setRegForm(!regForm);\n    if (logForm) {\n      setLogForm(!logForm);\n    }\n  }\n\n  useEffect(() => {\n    // if (!isAuth) return;\n    dispatch(updateUserInformationToken());\n  }, [])\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header onClickLog={onClickLog}\n          onClickReg={onClickReg}\n        />\n        {regForm && <UserRegistrationForm\n          onClickReg={onClickReg}\n        />}\n        {logForm && <UserLoginForm\n          onClickLog={onClickLog}\n        />}\n        <AppRouter />\\\n\n        <Switch>\n          {/* <Route path=\"registration\" component={UserRegistrationForm}/> */}\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/chistofor/Documents/project/taskBoard/client/src/store/reducers.ts",[],"/Users/chistofor/Documents/project/taskBoard/client/src/store/userReducer/userThunk.ts",["102","103","104"],"import { editUsers, regUser, logUser, getToken  } from \"../../api/userApi/userApi\";\nimport { IUser } from \"../../types/types\";\nimport { actionsGetTokenAuth, actionsGetTokenError, actionsLogAuth, actionsLogError, actionsLogOut, actionsLogUser, actionsSetAuth, actionsSetError, actionsSetUser, actionsUpdateUser } from './actionUser'\n\nexport const registrationUsers = (user: IUser) => async (dispatch: any): Promise<void> => {\n  try {\n    const data = await regUser(user)\n    localStorage.setItem('token', data.token)\n    dispatch(actionsUpdateUser(data.newUser));\n    dispatch(actionsSetAuth(true));\n  } catch (error: any) {\n    dispatch(actionsSetError(error.message))\n  }\n};\nexport const loginUser = (user: IUser) => async (dispatch: any): Promise<void> => {\n  try {\n    const data = await logUser(user)\n    localStorage.setItem('token', data.token)\n    dispatch(actionsUpdateUser(data.userLogin));\n    dispatch(actionsLogAuth(true));\n  } catch (error: any) {\n    dispatch(actionsLogError(error.message))\n  }\n};\nexport const updateUser = (user: IUser) => async (dispatch: any): Promise<void> => {\n  try {\n    const data = await editUsers(user)\n    dispatch(actionsUpdateUser(data));\n    dispatch(actionsLogAuth(true));\n  } catch (error: any) {\n    dispatch(actionsLogError(error.message))\n  }\n};\nexport const updateUserInformationToken = () => async (dispatch: any): Promise<void> => {\n  try {\n    const user = await getToken();\n    dispatch(actionsUpdateUser(user));\n    dispatch(actionsSetAuth(true));\n    // const data = await getToken()\n    // if (data) {\n    //   dispatch(actionsUpdateUser(data));\n    // }\n    // console.log('el problema', data)\n    // const isToken = localStorage.getItem('token');\n    // if (isToken) {\n    //   dispatch(actionsSetAuth(true));\n    // }else {\n    //   localStorage.clear();\n    // }\n  } catch (error: any) {\n    dispatch(actionsGetTokenError(error.message))\n    localStorage.clear();\n  }\n};\nexport const logOutThunk = () => (dispatch: any) => {\n  dispatch(actionsLogOut());\n  localStorage.clear();\n};\n","/Users/chistofor/Documents/project/taskBoard/client/src/api/routePage/AppRouter.tsx",[],"/Users/chistofor/Documents/project/taskBoard/client/src/pages/components/header/header.tsx",[],"/Users/chistofor/Documents/project/taskBoard/client/src/pages/components/modalWindows/userRegistrationForm/UserRegistrationForm.tsx",[],"/Users/chistofor/Documents/project/taskBoard/client/src/pages/components/modalWindows/loginForm/loginForm.tsx",[],"/Users/chistofor/Documents/project/taskBoard/client/src/store/userReducer/userReducer.ts",[],"/Users/chistofor/Documents/project/taskBoard/client/src/store/userReducer/actionUser.ts",[],"/Users/chistofor/Documents/project/taskBoard/client/src/api/const/const.js",[],["105","106"],"/Users/chistofor/Documents/project/taskBoard/client/src/api/userApi/userApi.ts",["107"],"import { Dispatch } from 'react';\nimport { Action } from 'redux';\nimport { IUser, ILogUser } from \"../../types/types\";\nimport axios from './index';\n\nexport const regUser = async (user: IUser) => {\n    const res = await axios.post('/registration', user);\n    console.log('User info registaration', res.data);\n    return res.data\n};\n\nexport const logUser = async (user: ILogUser) => {\n    const res = await axios.post('/login', user);\n    return res.data\n};\n\nexport const getToken = async () => {  \n    const res = await axios.get('/token');\n    console.log('User info token update', res.data);\n    return res.data\n};\n\nexport const editUsers = async (user: IUser) => {\n    const res = await axios.put('/user', user);\n    console.log('User info update', res.data);\n    return res.data\n};\n\nexport const logOut = (): void => {\n  localStorage.clear();\n  document.location.href = 'http://localhost:3000/';\n};\n\n\nexport const deleteUsers = (user: {\n  id: number,\n  email: string,\n  password: string,\n}, token: string) => {\n  return async (dispatch: Dispatch<Action>): Promise<void> => {\n   \n    const response = await axios.delete(`/users/${user.id}`, {\n\n    headers: { Authorization:localStorage.getItem('token') } })\n    \n    const result = await response.data;\n    \n    if (response.status === 200) {\n      console.log(result);\n      const users = [{\n        id: user.id,\n        email: user.email,\n      }];\n      document.location.href = 'http://localhost:3000/';\n    }\n    else {\n      alert(result.message);\n    }\n  };\n};\n// export const editUsers = async (user: IUser) => {\n//   try {\n//     const res = await axios.put('/user', user);\n//     console.log('User info registaration', res.data);\n//     // document.location.href = 'http://localhost:3000/login';\n//     return res.data\n\n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n\n// export const getToken = async () => {  \n//   try {\n//     const res = await axios.get('/token');\n//     console.log('User info token update', res.data);\n//         if (res.status == 200) {\n//       console.log(res);\n//       const users = [{\n//         id: user.id,\n//         surname: user.surname,\n//         email: user.email,\n//         dob: user.dob,\n//       }];\n//     return res.data\n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n","/Users/chistofor/Documents/project/taskBoard/client/src/api/routePage/routes.tsx",[],"/Users/chistofor/Documents/project/taskBoard/client/src/store/userReducer/constansUser.ts",[],"/Users/chistofor/Documents/project/taskBoard/client/src/api/userApi/index.ts",[],"/Users/chistofor/Documents/project/taskBoard/client/src/pages/workSpace/WorkSpace.js",[],"/Users/chistofor/Documents/project/taskBoard/client/src/pages/userPage/userPage.tsx",["108","109","110","111","112","113","114","115","116"],"import Main from \"../components/main/Main\";\n// import {useDispatch, useSelector} from \"react-redux\";\n// import { FormEvent } from 'react';\nimport React, { useState, useRef, useCallback } from 'react';\n\nimport styles from './userPage.module.scss';\nimport userAvatar from '../../image/user2.jpg';\nimport { useAppSelector } from \"../../store/reducers\";\nimport { IUser } from \"../../types/types\";\nimport { updateUser } from \"../../store/userReducer/userThunk\";\nimport { useDispatch } from \"react-redux\";\nimport { format, compareAsc } from 'date-fns';\nimport { Card, Form, Button, Figure } from 'react-bootstrap';\nimport axios from '../../api/userApi/index';\n\n// import {deleteUsers} from '../..//api/deleteUser'\n// import {editUsers} from '../..//api/updateUser'\n\n// const userInfo = async (event: { preventDefault: () => void; }) => {\n//   const res = await instance.post('/user',      \n//   {\n//     name: name,\n//     surname: surname,\n//     login: login,\n//     email: email,\n//     password: password,\n//     dob: dob\n// })\n//   event.preventDefault();\n\n//   return (\n//       <div className={styles.userRegistrationSucces}>\n//         User Hes registration\n//         console.log('registracia rabotaet');\n//       </div>\n//   );\n// } \n\nconst UserPage: React.FC = (): JSX.Element => {\n  // const dispatch = useDispatch;\n  // cons user = useSelector((state) => state.user)\n\n  // interface defState {\n\n  // }\n\n\n  const { name: stateName, dob: stateDob, email: stateEmail, login: stateLogin, surname: stateSurName } = useAppSelector((state) => state.user.user)\n  const thrueDateFormat = format(new Date(stateDob), 'MM/dd/yyyy')\n\n  const [userName, setUserName] = useState(stateName);\n  const [userSurName, setUserSurName] = useState(stateSurName);\n  const [userLogin, setUserLogin] = useState(stateLogin);\n  const [userPassword, setUserPassword] = useState('');\n  const [userDob, setUserDob] = useState(stateDob);\n\n  const dispatch = useDispatch();\n\n  const userInfo: React.FormEventHandler<HTMLFormElement> = (event) => {\n    event.preventDefault();\n    console.log('event', event);\n\n    const user: IUser = {\n      name: userName,\n      surname: userSurName,\n      login: userLogin,\n      password: userPassword,\n      dob: userDob,\n      email: stateEmail,\n    };\n    console.log('send', user);\n\n    dispatch(updateUser(user));\n  };\n  console.log('text', userName);\n  const handlerUpload = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n  }\n\n\n  //UPLOAD IMAGE\n  // const fileRef = useRef(null);\n  // const [ loading, setLoading ] = useState(false);\n  // const startUploadSumbit = useCallback( event => {\n  //   event.preventDefault();\n\n  //   const fetchData = async (uint8Array: any) => {\n  //     try {\n  //       const response = await axios({\n  //         method: 'post',\n  //         url: '/avatar',\n  //         data: [...uint8Array] // не отправляем в JSON, размер изображения увеличится\n  //       });\n\n  //       setLoading(false);\n  //       console.log(response);\n  //     } catch (e) {\n  //       console.error((e), 'function handleSubmit')\n  //     }\n  //   };\n  //   fetchData(Uint8Array);\n  // if(!fileRef.current) return void null;\n\n  // const reader = new FileReader();\n  // reader.onloadend = () => {\n  //   const uint8Array = new Uint8Array(reader.result);\n  //   setLoading(true);\n  //   fetchData(uint8Array);\n  // };\n\n  // рекомендованный метод\n  // reader.readAsArrayBuffer(fileRef.current[0]);\n\n  // метод reader.readAsBinaryString(fileRef.current[0])\n  // согласно MDN,\n  // уже был однажды удален из File API specification,\n  // но после его вернули\n  // в использование, но все же рекомендуют\n  // использовать readAsArrayBuffer\n  // https://developer.mozilla.org/en-US/docs/Web/API/FileReader/readAsBinaryString\n  // }, []);\n\n\n  return (\n    <Main >\n      <div className={styles.user_update_information_main_wrapper}>\n        <div className={styles.default_user_info_wrapper}>\n          <div className={styles.user_avatar}>\n            <img src={userAvatar} className={styles.circle_avatar} alt='User Avatar'></img>\n\n            {/* <form onSubmit={startUploadSumbit}>\n              <div>\n                <input\n                  onChange={e => e.target.files}\n                  accept=\"image/*\"\n                  type=\"file\"\n                  id=\"button-file\"\n                />\n              </div>\n              <button type=\"submit\">{loading ? 'Сохраняю...' : 'Сохранить'}</button>\n          </form> */}\n\n          </div>\n\n          <form\n            // onSubmit={(e) => handlerUpload(e)}\n            className={styles.avatar_form}\n            action=\"/user\"\n            method=\"post\"\n            encType=\"multipart/form-data\"\n          >\n            <label>Change your Avatar</label><br />\n            <input className={styles.avatar_form_input} type=\"file\" name=\"filedata\" /><br />\n            <input className={styles.avatar_form_send_button} type=\"submit\" value=\"Send\" />\n          </form>\n\n          {/* <Form>\n                        <Form.Group>\n                            <Button\n                                style={{ marginTop: '10px' }}\n                                variant=\"outline-primary\" \n                                className=\"mt-2\"\n                                as=\"input\"\n                                type=\"submit\"\n                                value=\"Load\"\n                                size=\"sm\"\n                                disabled={!userAvatar}\n                            />\n                        </Form.Group>\n                    </Form> */}\n          <div className={styles.def_string_info}>\n            <h6>Name:</h6><p>{stateName}</p>\n          </div>\n\n          <div className={styles.def_string_info}>\n            <h6>Last Name:</h6><p>{stateSurName}</p>\n          </div>\n\n          <div className={styles.def_string_info}>\n            <h6>Login:</h6><p>{stateLogin}</p>\n          </div>\n\n          <div className={styles.def_string_info}>\n            <h6>Date of born:</h6><p>{thrueDateFormat}</p>\n          </div>\n\n          <div className={styles.link_change_email}>\n            <a href=\"/email\">Change Email@adress</a>\n          </div>\n          {/* <button onSubmit={(deleteUsers)} className={styles.del_user_button}>DELETE USER</button> */}\n          {/* <span onClick={() => deleteUsers({email, })} className={styles.del_user_button}>DELETE USER</span> */}\n        </div>\n\n        <div className={styles.change_user_info_wrapper}>\n          {/* <form className={styles.form} onSubmit={userInfo}> */}\n          <form className={styles.form} onSubmit={userInfo}>\n            <h1>Change user information</h1>\n            <input onChange={(e) => setUserName(e.target.value)} name='name' defaultValue={stateName} type=\"text\" placeholder='Enter your Name' />\n            <input onChange={(e) => setUserSurName(e.target.value)} name='surname' defaultValue={stateSurName} type=\"text\" placeholder='Enter your Last Name' />\n            <input onChange={(e) => setUserLogin(e.target.value)} name='login' defaultValue={stateLogin} type=\"text\" placeholder='Enter your Login' />\n            {/* <input name='oldPassword' type=\"password\" placeholder='Enter your Old password'/>\n        <input name='newPassword' type=\"password\" placeholder='Enter your New password'/> */}\n            <input onChange={(e) => setUserPassword(e.target.value)} name='newPasswordControl' required type=\"password\" placeholder='New password' />\n            <input onChange={(e) => setUserDob(e.target.value)} name='dob' type=\"date\" placeholder='Enter your Date of Born' />\n            <button type=\"submit\" className={styles.registrationButton}>upadte information</button>\n          </form>\n        </div>\n      </div>\n    </Main>\n  );\n};\n\nexport default UserPage;","/Users/chistofor/Documents/project/taskBoard/client/src/pages/homePage/homePage.tsx",[],"/Users/chistofor/Documents/project/taskBoard/client/src/pages/login/loginPage.tsx",["117"],"\nimport React, { useEffect, useState } from 'react';\n\nimport styles from './loginPage.module.scss';\nimport Main from \"../components/main/Main\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { IUser } from '../../types/types';\nimport { loginUser } from \"../../store/userReducer/userThunk\";\nimport { useAppSelector } from '../../store/reducers';\nimport { useHistory } from 'react-router';\n\nconst UserLogin: React.FC = (): JSX.Element => {\n  const [userLogin, setUserLogin] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n\n  const auth = useAppSelector((state) => state.user.auth)\n\n  let history = useHistory();\n\n\n  const dispatch = useDispatch();\n\n\n  const userInfo: React.FormEventHandler<HTMLFormElement> = (event) => {\n    event.preventDefault();\n    console.log('event', event);\n\n    const user: IUser = {\n      login: userLogin,\n      email: userEmail,\n      password: userPassword,\n      name: '',\n      surname: '',\n      dob: ''\n    };\n    dispatch(loginUser(user));\n  };\n\n  useEffect(() => {\n    if (auth) {history.push(\"/user\")}\n    }, [auth, history])\n    \n\n  return (\n    <Main>\n      <form className={styles.form} onSubmit={userInfo}>\n        <h1>LOGIN</h1>\n        <input onChange={(e) => setUserLogin(e.target.value)} name='login' type=\"text\" placeholder='Enter your Login' />\n        <input onChange={(e) => setUserEmail(e.target.value)} name='email' type=\"email\" placeholder='Enter your Email' />\n        <input onChange={(e) => setUserPassword(e.target.value)} name='password' type=\"password\" placeholder='Enter your Password' />\n        <button type=\"submit\" className={styles.registrationButton}>LOGIN</button>\n      </form>\n    </Main>\n  );\n}\nexport default UserLogin;\n","/Users/chistofor/Documents/project/taskBoard/client/src/pages/registration/registartionWindow.tsx",["118"],"import Main from \"../components/main/Main\";\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styles from './userRegistrationFormStyle.module.scss';\n\nimport { registrationUsers } from \"../../store/userReducer/userThunk\";\nimport { IUser } from \"../../types/types\";\nimport { useAppSelector } from \"../../store/reducers\";\nimport { useHistory } from \"react-router\";\n\nconst UserRegistration: React.FC = (): JSX.Element => {\n  const [userName, setUserName] = useState('');\n  const [userSurName, setUserSurName] = useState('');\n  const [userLogin, setUserLogin] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n  const [userDob, setUserDob] = useState('');\n\n  const auth = useAppSelector((state) => state.user.auth)  \n\n  const dispatch = useDispatch();\n\n  let history = useHistory();\n\n\n  const userInfo: React.FormEventHandler<HTMLFormElement> = (event) => {\n    event.preventDefault();\n    console.log('event', event);\n    const parseDate = new Date(userDob);\n\n    const user: IUser = {\n      name: userName,\n      surname: userSurName,\n      login: userLogin,\n      email: userEmail,\n      password: userPassword,\n      dob: parseDate,\n    };\n    dispatch(registrationUsers(user));\n  };\n\n  useEffect(() => {\n    if (auth) {history.push(\"/user\")}\n    }, [auth, history])\n\n  return (\n    <Main>\n      <form className={styles.form} onSubmit={userInfo}>\n        <h1>REGISTRATION</h1>\n        <input onChange={(e) => setUserName(e.target.value)} name='name' type=\"text\" placeholder='Enter your Name' />\n        <input onChange={(e) => setUserSurName(e.target.value)} name='surname' type=\"text\" placeholder='Enter your Last Name' />\n        <input onChange={(e) => setUserLogin(e.target.value)} name='login' type=\"text\" placeholder='Enter your Login' />\n        <input onChange={(e) => setUserEmail(e.target.value)} name='email' type=\"email\" placeholder='Enter your Email' />\n        <input onChange={(e) => setUserPassword(e.target.value)} name='password' type=\"password\" placeholder='Enter your Password' />\n        <input onChange={(e) => setUserDob(e.target.value)} name='dob' type=\"date\" placeholder='Enter your Date of Born' />\n        {/* <input name='avatar' type=\"text\" placeholder='Choice your Avatar'/> */}\n        <button type=\"submit\" className={styles.registrationButton}>REGISTRATION</button>\n      </form>\n    </Main>\n  );\n}\nexport default UserRegistration;\n\n\n//  const getUserIfo: React.FC<Props> = (props) =>{\n//     const [state, setState] = useState<UserInterface[]>([]);\n\n//     useEffect(() => {\n//       console.log('getUserIfo')\n//       instance.get('user')\n//         .then(r => {\n//           console.log('result', r.data)\n//           setState(r.data)\n//         })\n//         .catch(e => console.log('error', e.message))\n//     }, []);\n\n//     return (\n//     <main className={styles.main}>\n//       {state.map(item => <h1 key={item.id}>{item.name}</h1>)}\n//       {props.children}\n//     </main>\n//       );\n//   }\n\n\n","/Users/chistofor/Documents/project/taskBoard/client/src/pages/components/main/Main.tsx",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":21,"column":9,"nodeType":"125","messageId":"126","endLine":21,"endColumn":15},{"ruleId":"127","severity":1,"message":"128","line":39,"column":6,"nodeType":"129","endLine":39,"endColumn":8,"suggestions":"130"},{"ruleId":"123","severity":1,"message":"131","line":3,"column":10,"nodeType":"125","messageId":"126","endLine":3,"endColumn":29},{"ruleId":"123","severity":1,"message":"132","line":3,"column":101,"nodeType":"125","messageId":"126","endLine":3,"endColumn":115},{"ruleId":"123","severity":1,"message":"133","line":3,"column":150,"nodeType":"125","messageId":"126","endLine":3,"endColumn":164},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"134","line":50,"column":13,"nodeType":"125","messageId":"126","endLine":50,"endColumn":18},{"ruleId":"123","severity":1,"message":"135","line":4,"column":27,"nodeType":"125","messageId":"126","endLine":4,"endColumn":33},{"ruleId":"123","severity":1,"message":"136","line":4,"column":35,"nodeType":"125","messageId":"126","endLine":4,"endColumn":46},{"ruleId":"123","severity":1,"message":"137","line":12,"column":18,"nodeType":"125","messageId":"126","endLine":12,"endColumn":28},{"ruleId":"123","severity":1,"message":"138","line":13,"column":10,"nodeType":"125","messageId":"126","endLine":13,"endColumn":14},{"ruleId":"123","severity":1,"message":"139","line":13,"column":16,"nodeType":"125","messageId":"126","endLine":13,"endColumn":20},{"ruleId":"123","severity":1,"message":"140","line":13,"column":22,"nodeType":"125","messageId":"126","endLine":13,"endColumn":28},{"ruleId":"123","severity":1,"message":"141","line":13,"column":30,"nodeType":"125","messageId":"126","endLine":13,"endColumn":36},{"ruleId":"123","severity":1,"message":"142","line":14,"column":8,"nodeType":"125","messageId":"126","endLine":14,"endColumn":13},{"ruleId":"123","severity":1,"message":"143","line":76,"column":9,"nodeType":"125","messageId":"126","endLine":76,"endColumn":22},{"ruleId":"123","severity":1,"message":"144","line":6,"column":10,"nodeType":"125","messageId":"126","endLine":6,"endColumn":21},{"ruleId":"123","severity":1,"message":"144","line":4,"column":23,"nodeType":"125","messageId":"126","endLine":4,"endColumn":34},"no-native-reassign",["145"],"no-negated-in-lhs",["146"],"@typescript-eslint/no-unused-vars","'isAuth' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["147"],"'actionsGetTokenAuth' is defined but never used.","'actionsLogUser' is defined but never used.","'actionsSetUser' is defined but never used.","'users' is assigned a value but never used.","'useRef' is defined but never used.","'useCallback' is defined but never used.","'compareAsc' is defined but never used.","'Card' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'Figure' is defined but never used.","'axios' is defined but never used.","'handlerUpload' is assigned a value but never used.","'useSelector' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},"Update the dependencies array to be: [dispatch]",{"range":"150","text":"151"},[1197,1199],"[dispatch]"]