[{"/Users/chistofor/Documents/project/taskBoard/client/src/index.tsx":"1","/Users/chistofor/Documents/project/taskBoard/client/src/App.tsx":"2","/Users/chistofor/Documents/project/taskBoard/client/src/components/routePage/AppRouter.js":"3","/Users/chistofor/Documents/project/taskBoard/client/src/components/header/header.tsx":"4","/Users/chistofor/Documents/project/taskBoard/client/src/components/modalWindows/loginForm/loginForm.tsx":"5","/Users/chistofor/Documents/project/taskBoard/client/src/components/modalWindows/userRegistrationForm/UserRegistrationForm.tsx":"6","/Users/chistofor/Documents/project/taskBoard/client/src/components/routePage/routes.js":"7","/Users/chistofor/Documents/project/taskBoard/client/src/components/const/consts.js":"8","/Users/chistofor/Documents/project/taskBoard/client/src/components/pages/workSpace/WorkSpace.js":"9","/Users/chistofor/Documents/project/taskBoard/client/src/components/pages/login/loginPage.tsx":"10","/Users/chistofor/Documents/project/taskBoard/client/src/components/pages/registration/registartionWindow.tsx":"11","/Users/chistofor/Documents/project/taskBoard/client/src/components/pages/helloWindow/helloWindow.tsx":"12","/Users/chistofor/Documents/project/taskBoard/client/src/components/main/Main.tsx":"13","/Users/chistofor/Documents/project/taskBoard/client/src/components/api/index.ts":"14","/Users/chistofor/Documents/project/taskBoard/client/src/components/pages/userPage/userPage.tsx":"15","/Users/chistofor/Documents/project/taskBoard/client/src/components/Redux/store/index.ts":"16","/Users/chistofor/Documents/project/taskBoard/client/src/components/Redux/reducer/index.ts":"17","/Users/chistofor/Documents/project/taskBoard/client/src/components/Redux/reducer/userReducer.ts":"18","/Users/chistofor/Documents/project/taskBoard/client/src/components/Redux/const.ts":"19"},{"size":279,"mtime":1629477073746,"results":"20","hashOfConfig":"21"},{"size":1246,"mtime":1629477073746,"results":"22","hashOfConfig":"21"},{"size":882,"mtime":1629381642452,"results":"23","hashOfConfig":"21"},{"size":1007,"mtime":1629475875070,"results":"24","hashOfConfig":"21"},{"size":920,"mtime":1629381642447,"results":"25","hashOfConfig":"21"},{"size":2765,"mtime":1629381642448,"results":"26","hashOfConfig":"21"},{"size":956,"mtime":1629476066502,"results":"27","hashOfConfig":"21"},{"size":250,"mtime":1629475998455,"results":"28","hashOfConfig":"21"},{"size":3543,"mtime":1629381642451,"results":"29","hashOfConfig":"21"},{"size":1705,"mtime":1629381642451,"results":"30","hashOfConfig":"21"},{"size":3839,"mtime":1629464125852,"results":"31","hashOfConfig":"21"},{"size":593,"mtime":1629381642450,"results":"32","hashOfConfig":"21"},{"size":815,"mtime":1629464277621,"results":"33","hashOfConfig":"21"},{"size":165,"mtime":1629389018401,"results":"34","hashOfConfig":"21"},{"size":2450,"mtime":1629477017779,"results":"35","hashOfConfig":"21"},{"size":198,"mtime":1629477073746,"results":"36","hashOfConfig":"21"},{"size":155,"mtime":1629477209834,"results":"37","hashOfConfig":"21"},{"size":786,"mtime":1629472758045,"results":"38","hashOfConfig":"21"},{"size":1272,"mtime":1629472124812,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"a3mr1x",{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"47"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/chistofor/Documents/project/taskBoard/client/src/index.tsx",[],"/Users/chistofor/Documents/project/taskBoard/client/src/App.tsx",["85"],"/Users/chistofor/Documents/project/taskBoard/client/src/components/routePage/AppRouter.js",["86","87"],"import React, {useContext} from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom'\nimport {authRoutes, publicRoutes} from \"./routes\";\nimport {HOME_PAGE} from \"../const/consts\";\n// import {Context} from \"../../index\";\nimport {observer} from \"mobx-react-lite\";\n\nconst AppRouter = observer(() => {\n    // const {user} = useContext(Context)\nconst isAuth = false\n    // console.log(user)\n    return (\n        <Switch>\n            {/* {user.isAuth && authRoutes.map(({path, Component}) => */}\n            {authRoutes.map(({path, Component}) =>\n                <Route key={path} path={path} component={Component} exact/>\n            )}\n            {publicRoutes.map(({path, Component}) =>\n                <Route key={path} path={path} component={Component} exact/>\n            )}\n            <Redirect to={HOME_PAGE}/>\n        </Switch>\n    );\n});\n\nexport default AppRouter;",["88","89"],"/Users/chistofor/Documents/project/taskBoard/client/src/components/header/header.tsx",[],"/Users/chistofor/Documents/project/taskBoard/client/src/components/modalWindows/loginForm/loginForm.tsx",[],["90","91"],"/Users/chistofor/Documents/project/taskBoard/client/src/components/modalWindows/userRegistrationForm/UserRegistrationForm.tsx",["92"],"import React from 'react';\nimport { useState } from 'react';\nimport './userRegistrationFormStyle.css';\nimport closeButton from '../../../icon/close.png'\n\ninterface IUserRegistrationForm {\n  onClickReg: () => void;\n  // id: number;\n  // name: string;\n  // lastName: string;\n  // login: string;\n  // email: string;\n  // password: string;\n  // avatarUrl: string;\n}\n\nconst UserRegistrationForm: React.FC<IUserRegistrationForm> = ({onClickReg}) => {\n\n  const [name, setName] = useState('');\n  const [surname, setLastName] = useState('');\n  const [login, setLogin] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [dob, setDOB] = useState('');\n\n  interface AnyInput {\n    inputName: any;\n  }\n\n  const inputName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setName(event.target.value)\n    console.log('zalupa', name)\n  }\n  const inputSurName = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setLastName(event.target.value)\n    console.log('zalupa', surname)\n  }\n  const inputLogin = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setLogin(event.target.value)\n    console.log('zalupa', login)\n  }\n  const inputEmail = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setEmail(event.target.value)\n    console.log('zalupa', email)\n  }\n  const inputPassword = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPassword(event.target.value)\n    console.log('zalupa', password)\n  }\n  const inputDOB = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setDOB(event.target.value)\n    console.log('zalupa', dob)\n  }\n\n  return (\n    <form className=\"form\">\n      <h1>Registration</h1>\n      <button onClick={onClickReg} className=\"closeButton\">\n        <img src={closeButton} className=\"icon\" alt=\"closeButton\"/>\n      </button>\n      <input name='name' type=\"text\" value={name} onChange={(e) => inputName(e)}  placeholder='Enter your Name'/>\n      <input name='surname' type=\"text\"  value={surname} onChange={(e) => inputSurName(e)} placeholder='Enter your Last Name'/>\n      <input name='login' type=\"text\"  value={login} onChange={(e) => inputLogin(e)} placeholder='Enter your Login'/>\n      <input name='email' type=\"email\"  value={email} onChange={(e) => inputEmail(e)} placeholder='Enter your Email'/>\n      <input name='password' type=\"password\" value={password} onChange={(e) => inputPassword(e)} placeholder='Enter your Password'/>\n      <input name='dob' type=\"date\" value={dob} onChange={(e) => inputDOB(e)} placeholder='Enter your Date of Born'/>\n      <input name='avatarUrl' type=\"url\" placeholder='Choice your Avatar'/>\n        <button type=\"submit\" className=\"registrationButton\">REGISTRATION</button>\n    </form>\n    );\n}\n\nexport default UserRegistrationForm;\n","/Users/chistofor/Documents/project/taskBoard/client/src/components/routePage/routes.js",["93"],"/Users/chistofor/Documents/project/taskBoard/client/src/components/const/consts.js",[],"/Users/chistofor/Documents/project/taskBoard/client/src/components/pages/workSpace/WorkSpace.js",["94","95"],"import React, {useState} from 'react';\nimport './workSpaceStyled.css';\n\nimport deleteButton  from '../../../icon/delete.png';\nimport closeButton  from '../../../icon/close.png';\n\nimport Main from '../../main/Main';\n\n\ninterface IWorkSpace {\n}\n\nconst WorkSpace: React.FC<IWorkSpace> = () => {\n  const [columns, setColumns] = useState([\n    {id:1, title:\"What need\", items:[{id:1, title:\"Develpometn\"},{id:2, title:'Create desigen Todo'},\n                {id:3, title:'made Hello world made Hello world '},{id:4, title:'Always make Zalupa test on console'}]},\n    {id:2, title:\"Process on work\", items:[{id:1, title:'Write your cold develope'}, \n                {id:2, title:'Choice deisgen on Dribble'},{id:3, title:'react Native'}]},\n    {id:3, title:'Complete', items:[{id:1, title:'Make a photo'}]}\n  ])\n\n  //FORE ITEM\n  const [currentColumn, setCurrentColumn] = useState(null)\n  const [currentItem, setCurrentItem] = useState(null)\n\n  function dragOverHandler(event){\n    event.preventDefault()\n    if(event.target.className === 'item'){\n      event.target.classList.toggle('boxShadow')\n    }\n  }\n\n  function dragLeaveHandler(event){\n    event.target.classList.remove('boxShadow')\n  }\n\n  function dragStartHandler(event, column, item){\n    // debugger\n    console.log('Start column', column) \n    console.log('Start item', item) \n    setCurrentColumn(column)\n    setCurrentItem(item)\n  }\n\n  function dragEndHandler(event){\n    event.target.classList.remove('boxShadow')\n  }\n\n  function dragDropHandler(event, column, item){\n    event.preventDefault()\n    const currentIndex = currentColumn.items.indexOf(currentItem)\n    currentColumn.items.splice(currentIndex, 1)\n    const dropIndex = column.items.indexOf(item)\n    column.items.splice(dropIndex + 1, 0, currentItem)\n    setColumns(columns.map(brd => {\n      if (brd.id === column.id){\n        return column\n      }\n      if (brd.id === currentColumn.id){\n        return currentColumn\n      }\n      return brd\n    }))\n  }\n\n  function dropeZeroStickHandler(event, column, item) {\n    const currentId = column.items.map(item => item.id)\nif (!currentId.includes(currentItem.id)) {\n  column.items.push(currentItem)\n         const currentIndex = currentColumn.items.indexOf(currentItem)\n         currentColumn.items.splice(currentIndex, 1)\n         setColumns(columns.map(b => {\n            if (b.id === column.id) {\n               return column\n            }\n            if (b.id === currentColumn.id) {\n               return currentColumn\n            }\n            return b\n         }))\n      }\n  }\n\n  return (\n    <Main>\n    <div className=\"workSpace\">\n      {columns.map(column =>\n        <div className=\"column\"\n        onDragOver={(event)=> dragOverHandler(event)}\n        onDrop={(event)=> dropeZeroStickHandler(event, column, {item: column.item})}\n        >\n          <div className=\"column__title\">{column.title}\n          </div>\n            {column.items.map(item =>\n                <div \n                onDragOver={(event)=> dragOverHandler(event)}\n                onDragLeave={(event)=> dragLeaveHandler(event)}\n                onDragStart={(event)=> dragStartHandler(event, column, item)}\n                onDragEnd={(event)=> dragEndHandler(event)}\n                onDrop={(event)=> dragDropHandler(event, column, item)}\n                className=\"item\"\n                draggable={true}\n                >\n                  {item.title}\n                </div>\n                \n              )}\n        </div>\n        )}\n    </div>\n    </Main>\n    );\n  };\n\nexport default WorkSpace;","/Users/chistofor/Documents/project/taskBoard/client/src/components/pages/login/loginPage.tsx",["96","97"],"import Main from \"../../main/Main\";\n\nimport React from 'react';\nimport { useState } from 'react';\nimport styles from './loginPage.module.scss';\n\nimport instance from '../../api/index'\n\n\nconst UserLogin: React.FC = () => {\n\n  const [login, setLogin] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const inputLogin = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setLogin(event.target.value.toLocaleLowerCase())\n    console.log('zalupa', login)\n  }\n  const inputEmail = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setEmail(event.target.value.toLocaleLowerCase())\n    console.log('zalupa', email)\n  }\n  const inputPassword = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPassword(event.target.value)\n    console.log('zalupa', password)\n  }\n\n  const userInfo = async (event: { preventDefault: () => void; }) => {\n    event.preventDefault();\n    const res = await instance. post('/login',      \n    {\n      \"login\": login,\n      \"email\": email,\n      \"password\": password,\n  })\ndebugger\n  }\n\n  return (\n    <Main>\n      <form className={styles.form} onSubmit={userInfo}>\n        <h1>LOG IN</h1>\n        <input name='login' type=\"text\"  value={login} onChange={(e) => inputLogin(e)} placeholder='Enter your Login'/>\n        <input name='email' type=\"email\"  value={email} onChange={(e) => inputEmail(e)} placeholder='Enter your Email'/>\n        <input name='password' type=\"password\" value={password} onChange={(e) => inputPassword(e)} placeholder='Enter your Password'/>\n          <button type=\"submit\" className={styles.registrationButton}>LOG IN</button>\n      </form>\n    </Main>\n    );\n}\n\nexport default UserLogin;\n","/Users/chistofor/Documents/project/taskBoard/client/src/components/pages/registration/registartionWindow.tsx",["98","99","100","101"],"/Users/chistofor/Documents/project/taskBoard/client/src/components/pages/helloWindow/helloWindow.tsx",[],"/Users/chistofor/Documents/project/taskBoard/client/src/components/main/Main.tsx",[],"/Users/chistofor/Documents/project/taskBoard/client/src/components/api/index.ts",[],"/Users/chistofor/Documents/project/taskBoard/client/src/components/pages/userPage/userPage.tsx",["102"],"import Main from \"../../main/Main\";\nimport {useSelector} from \"react-redux\";\nimport styles from './userPage.module.scss'\nimport { ReactNode } from \"react\";\nimport instance from \"../../api\";\n\ninterface UserInterface {\n    id: number;\n    name: string;\n    surname: string;\n    login: string;\n    email: string;\n    token: string;\n    dob: Date;\n  }\n\n  type Props = {\n    children?: ReactNode | undefined;\n  }\n\n  const userInfo = async (event: { preventDefault: () => void; }) => {\n    const res = await instance.post('/user',      \n    {\n      name: name,\n      surname: surname,\n      login: login,\n      email: email,\n      password: password,\n      dob: dob\n  })\n    event.preventDefault();\n\n    return (\n        <div className={styles.userRegistrationSucces}>\n          User Hes registration\n          console.log('registracia rabotaet');\n        </div>\n    );\n  } \n\nconst UserPage: React.FC = () => {\nconst state = const state = useSelector(state => state.users)\nreturn (\n\n<Main>\n<div className={styles.default_user_info_wrapper}>\n<div className={styles.def_string_info}>\n<h6>Name:</h6>{name}\n</div>\n<div className={styles.def_string_info}>\n<h6>Last Name:</h6>{surname}\n</div>\n<div className={styles.def_string_info}>\n<h6>Login:</h6>{login}\n</div>\n<div className={styles.def_string_info}>\n<h6>Date of born:</h6>{dob}\n</div>\n<div className={styles.link_change_email}>\n<a href=\"/email\">Change Email@adress</a>\n</div>\n</div>\n\n<div className={styles.change_user_info_wrapper}>\n<form className={styles.form} onSubmit={userInfo}>\n<h1>REGISTRATION</h1>\n<input name='name' type=\"text\" value={name} onChange={(e) => inputName(e)}  placeholder='Enter your Name'/>\n<input name='surname' type=\"text\"  value={surname} onChange={(e) => inputSurName(e)} placeholder='Enter your Last Name'/>\n<input name='login' type=\"text\"  value={login} onChange={(e) => inputLogin(e)} placeholder='Enter your Login'/>\n<input name='email' type=\"email\"  value={email} onChange={(e) => inputEmail(e)} placeholder='Enter your Email'/>\n<input name='password' type=\"password\" value={password} onChange={(e) => inputPassword(e)} placeholder='Enter your Password'/>\n<input name='dob' type=\"date\" value={dob} onChange={(e) => inputDOB(e)} placeholder='Enter your Date of Born'/>\n<input name='avatarUrl' type=\"url\" placeholder='Choice your Avatar'/>\n<button type=\"submit\" className={styles.registrationButton}>REGISTRATION</button>\n</form>\n</div>\n</Main>\n);\n};\n\nexport default UserPage;","/Users/chistofor/Documents/project/taskBoard/client/src/components/Redux/store/index.ts",[],"/Users/chistofor/Documents/project/taskBoard/client/src/components/Redux/reducer/index.ts",[],"/Users/chistofor/Documents/project/taskBoard/client/src/components/Redux/reducer/userReducer.ts",[],"/Users/chistofor/Documents/project/taskBoard/client/src/components/Redux/const.ts",[],{"ruleId":"103","severity":1,"message":"104","line":5,"column":24,"nodeType":"105","messageId":"106","endLine":5,"endColumn":29},{"ruleId":"107","severity":1,"message":"108","line":1,"column":16,"nodeType":"105","messageId":"106","endLine":1,"endColumn":26},{"ruleId":"107","severity":1,"message":"109","line":10,"column":7,"nodeType":"105","messageId":"106","endLine":10,"endColumn":13},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"103","severity":1,"message":"114","line":26,"column":13,"nodeType":"105","messageId":"106","endLine":26,"endColumn":21},{"ruleId":"107","severity":1,"message":"115","line":7,"column":7,"nodeType":"105","messageId":"106","endLine":7,"endColumn":11},{"ruleId":"107","severity":1,"message":"116","line":4,"column":8,"nodeType":"105","messageId":"106","endLine":4,"endColumn":20},{"ruleId":"107","severity":1,"message":"117","line":5,"column":8,"nodeType":"105","messageId":"106","endLine":5,"endColumn":19},{"ruleId":"103","severity":1,"message":"118","line":31,"column":11,"nodeType":"105","messageId":"106","endLine":31,"endColumn":14},{"ruleId":"119","severity":1,"message":"120","line":31,"column":23,"nodeType":"121","messageId":"122","endLine":31,"endColumn":37,"fix":"123"},{"ruleId":"103","severity":1,"message":"124","line":3,"column":27,"nodeType":"105","messageId":"106","endLine":3,"endColumn":36},{"ruleId":"103","severity":1,"message":"125","line":48,"column":13,"nodeType":"105","messageId":"106","endLine":48,"endColumn":26},{"ruleId":"103","severity":1,"message":"126","line":58,"column":8,"nodeType":"105","messageId":"106","endLine":58,"endColumn":13},{"ruleId":"103","severity":1,"message":"118","line":63,"column":11,"nodeType":"105","messageId":"106","endLine":63,"endColumn":14},{"ruleId":null,"fatal":true,"severity":2,"message":"127","line":42,"column":14},"@typescript-eslint/no-unused-vars","'Route' is defined but never used.","Identifier","unusedVar","no-unused-vars","'useContext' is defined but never used.","'isAuth' is assigned a value but never used.","no-native-reassign",["128"],"no-negated-in-lhs",["129"],"'AnyInput' is defined but never used.","'path' is assigned a value but never used.","'deleteButton' is defined but never used.","'closeButton' is defined but never used.","'res' is assigned a value but never used.","no-whitespace-before-property","Unexpected whitespace before property post.","MemberExpression","unexpectedWhitespace",{"range":"130","text":"131"},"'useEffect' is defined but never used.","'UserInterface' is defined but never used.","'Props' is defined but never used.","Parsing error: Expression expected.","no-global-assign","no-unsafe-negation",[958,960],"."]