[{"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/index.tsx":"1","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/index.ts":"2","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/App.tsx":"3","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/reducers.ts":"4","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/userReducer/userThunk.ts":"5","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/api/routePage/AppRouter.tsx":"6","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/userReducer/userReducer.ts":"7","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/userReducer/actionUser.ts":"8","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/api/const/const.js":"9","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/api/routePage/routes.tsx":"10","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/userReducer/constansUser.ts":"11","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/api/userApi/index.ts":"12","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/workSpace/WorkSpace.js":"13","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/login/loginPage.tsx":"14","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/registration/registartionWindow.tsx":"15","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/userPage/userPage.tsx":"16","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/components/header/header.tsx":"17","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/components/modalWindows/userRegistrationForm/UserRegistrationForm.tsx":"18","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/components/modalWindows/loginForm/loginForm.tsx":"19","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/components/main/Main.tsx":"20","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/api/userApi/userApi.ts":"21","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/homePage/homePage.tsx":"22"},{"size":241,"mtime":1629834786191,"results":"23","hashOfConfig":"24"},{"size":457,"mtime":1629834786194,"results":"25","hashOfConfig":"24"},{"size":1704,"mtime":1629928269161,"results":"26","hashOfConfig":"24"},{"size":503,"mtime":1629834786194,"results":"27","hashOfConfig":"24"},{"size":1812,"mtime":1629931138787,"results":"28","hashOfConfig":"24"},{"size":810,"mtime":1629928182830,"results":"29","hashOfConfig":"24"},{"size":1712,"mtime":1629925898302,"results":"30","hashOfConfig":"24"},{"size":1145,"mtime":1629925898300,"results":"31","hashOfConfig":"24"},{"size":359,"mtime":1629834786153,"results":"32","hashOfConfig":"24"},{"size":983,"mtime":1629934052113,"results":"33","hashOfConfig":"24"},{"size":1631,"mtime":1629866832513,"results":"34","hashOfConfig":"24"},{"size":786,"mtime":1629834786157,"results":"35","hashOfConfig":"24"},{"size":3508,"mtime":1629928269170,"results":"36","hashOfConfig":"24"},{"size":1779,"mtime":1629928269161,"results":"37","hashOfConfig":"24"},{"size":3075,"mtime":1629928269161,"results":"38","hashOfConfig":"24"},{"size":4899,"mtime":1629953789841,"results":"39","hashOfConfig":"24"},{"size":2219,"mtime":1629951817129,"results":"40","hashOfConfig":"24"},{"size":2721,"mtime":1629931362589,"results":"41","hashOfConfig":"24"},{"size":923,"mtime":1629931346257,"results":"42","hashOfConfig":"24"},{"size":927,"mtime":1629834786155,"results":"43","hashOfConfig":"24"},{"size":2551,"mtime":1629930778872,"results":"44","hashOfConfig":"24"},{"size":595,"mtime":1629932486152,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1kt1cyw",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/index.tsx",[],["98","99"],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/index.ts",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/App.tsx",["100"],"import React, { useEffect, useState } from 'react';\n\nimport './App.css';\nimport { BrowserRouter, Switch } from 'react-router-dom';\nimport UserRegistrationForm from './pages/components/modalWindows/userRegistrationForm/UserRegistrationForm'\nimport UserLoginForm from './pages/components/modalWindows/loginForm/loginForm';\nimport AppRouter from './api/routePage/AppRouter';\n\nimport Header from './pages/components/header/header';\nimport { useDispatch } from 'react-redux';\nimport { updateUserInformationToken } from './store/userReducer/userThunk';\n// import { useAppSelector } from './store/reducers';\n\nfunction App() {\n  const [logForm, setLogForm] = useState(false);\n  const [regForm, setRegForm] = useState(false);\n\n  const dispatch: any = useDispatch<any>();\n\n  // const isAuth = useAppSelector((state) => state.user.auth)\n\n  const onClickLog = () => {\n    setLogForm(!logForm);\n    if (regForm) {\n      setRegForm(!regForm);\n    }\n  }\n  const onClickReg = () => {\n    setRegForm(!regForm);\n    if (logForm) {\n      setLogForm(!logForm);\n    }\n  }\n\n  useEffect(() => {\n    // if (!isAuth) return;\n    dispatch(updateUserInformationToken());\n  }, [dispatch, updateUserInformationToken])\n\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header onClickLog={onClickLog}\n          onClickReg={onClickReg}\n        />\n        {regForm && <UserRegistrationForm\n          onClickReg={onClickReg}\n        />}\n        {logForm && <UserLoginForm\n          onClickLog={onClickLog}\n        />}\n        <AppRouter />\\\n\n        <Switch>\n          {/* <Route path=\"registration\" component={UserRegistrationForm}/> */}\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/reducers.ts",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/userReducer/userThunk.ts",["101","102","103"],"import { editUsers, regUser, logUser, getToken  } from \"../../api/userApi/userApi\";\nimport { IUser } from \"../../types/types\";\nimport { actionsGetTokenAuth, actionsGetTokenError, actionsLogAuth, actionsLogError, actionsLogOut, actionsLogUser, actionsSetAuth, actionsSetError, actionsSetUser, actionsUpdateUser } from './actionUser'\n\nexport const registrationUsers = (user: IUser) => async (dispatch: any): Promise<void> => {\n  try {\n    const data = await regUser(user)\n    localStorage.setItem('token', data.token)\n    dispatch(actionsUpdateUser(data.newUser));\n    dispatch(actionsSetAuth(true));\n  } catch (error: any) {\n    dispatch(actionsSetError(error.message))\n  }\n};\nexport const loginUser = (user: IUser) => async (dispatch: any): Promise<void> => {\n  try {\n    const data = await logUser(user)\n    localStorage.setItem('token', data.token)\n    dispatch(actionsUpdateUser(data.userLogin));\n    dispatch(actionsLogAuth(true));\n  } catch (error: any) {\n    dispatch(actionsLogError(error.message))\n  }\n};\nexport const updateUser = (user: IUser) => async (dispatch: any): Promise<void> => {\n  try {\n    const data = await editUsers(user)\n    dispatch(actionsUpdateUser(data));\n    dispatch(actionsLogAuth(true));\n  } catch (error: any) {\n    dispatch(actionsLogError(error.message))\n  }\n};\nexport const updateUserInformationToken = () => async (dispatch: any): Promise<void> => {\n  try {\n    const data = await getToken()\n\n    if (data) {\n      dispatch(actionsUpdateUser(data));\n    }\n    console.log('el problema', data)\n    const isToken = localStorage.getItem('token');\n    if (isToken) {\n      dispatch(actionsSetAuth(true));\n    }\n  } catch (error: any) {\n    dispatch(actionsGetTokenError(error.message))\n  }\n};\nexport const logOutThunk = () => (dispatch: any) => {\n  dispatch(actionsLogOut());\n};\n","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/api/routePage/AppRouter.tsx",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/userReducer/userReducer.ts",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/userReducer/actionUser.ts",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/api/const/const.js",[],["104","105"],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/api/routePage/routes.tsx",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/store/userReducer/constansUser.ts",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/api/userApi/index.ts",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/workSpace/WorkSpace.js",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/login/loginPage.tsx",["106"],"\nimport React, { useEffect, useState } from 'react';\n\nimport styles from './loginPage.module.scss';\nimport Main from \"../components/main/Main\";\nimport { useSelector, useDispatch } from 'react-redux';\nimport { IUser } from '../../types/types';\nimport { loginUser } from \"../../store/userReducer/userThunk\";\nimport { useAppSelector } from '../../store/reducers';\nimport { useHistory } from 'react-router';\n\nconst UserLogin: React.FC = (): JSX.Element => {\n  const [userLogin, setUserLogin] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n\n  const auth = useAppSelector((state) => state.user.auth)\n\n  let history = useHistory();\n\n\n  const dispatch = useDispatch();\n\n\n  const userInfo: React.FormEventHandler<HTMLFormElement> = (event) => {\n    event.preventDefault();\n    console.log('event', event);\n\n    const user: IUser = {\n      login: userLogin,\n      email: userEmail,\n      password: userPassword,\n      name: '',\n      surname: '',\n      dob: ''\n    };\n    dispatch(loginUser(user));\n  };\n\n  useEffect(() => {\n    if (auth) {history.push(\"/user\")}\n    }, [auth, history])\n    \n\n  return (\n    <Main>\n      <form className={styles.form} onSubmit={userInfo}>\n        <h1>LOGIN</h1>\n        <input onChange={(e) => setUserLogin(e.target.value)} name='login' type=\"text\" placeholder='Enter your Login' />\n        <input onChange={(e) => setUserEmail(e.target.value)} name='email' type=\"email\" placeholder='Enter your Email' />\n        <input onChange={(e) => setUserPassword(e.target.value)} name='password' type=\"password\" placeholder='Enter your Password' />\n        <button type=\"submit\" className={styles.registrationButton}>LOGIN</button>\n      </form>\n    </Main>\n  );\n}\nexport default UserLogin;\n","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/registration/registartionWindow.tsx",["107"],"import Main from \"../components/main/Main\";\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport styles from './userRegistrationFormStyle.module.scss';\n\nimport { registrationUsers } from \"../../store/userReducer/userThunk\";\nimport { IUser } from \"../../types/types\";\nimport { useAppSelector } from \"../../store/reducers\";\nimport { useHistory } from \"react-router\";\n\nconst UserRegistration: React.FC = (): JSX.Element => {\n  const [userName, setUserName] = useState('');\n  const [userSurName, setUserSurName] = useState('');\n  const [userLogin, setUserLogin] = useState('');\n  const [userEmail, setUserEmail] = useState('');\n  const [userPassword, setUserPassword] = useState('');\n  const [userDob, setUserDob] = useState('');\n\n  const auth = useAppSelector((state) => state.user.auth)  \n\n  const dispatch = useDispatch();\n\n  let history = useHistory();\n\n\n  const userInfo: React.FormEventHandler<HTMLFormElement> = (event) => {\n    event.preventDefault();\n    console.log('event', event);\n    const parseDate = new Date(userDob);\n\n    const user: IUser = {\n      name: userName,\n      surname: userSurName,\n      login: userLogin,\n      email: userEmail,\n      password: userPassword,\n      dob: parseDate,\n    };\n    dispatch(registrationUsers(user));\n  };\n\n  useEffect(() => {\n    if (auth) {history.push(\"/user\")}\n    }, [auth, history])\n\n  return (\n    <Main>\n      <form className={styles.form} onSubmit={userInfo}>\n        <h1>REGISTRATION</h1>\n        <input onChange={(e) => setUserName(e.target.value)} name='name' type=\"text\" placeholder='Enter your Name' />\n        <input onChange={(e) => setUserSurName(e.target.value)} name='surname' type=\"text\" placeholder='Enter your Last Name' />\n        <input onChange={(e) => setUserLogin(e.target.value)} name='login' type=\"text\" placeholder='Enter your Login' />\n        <input onChange={(e) => setUserEmail(e.target.value)} name='email' type=\"email\" placeholder='Enter your Email' />\n        <input onChange={(e) => setUserPassword(e.target.value)} name='password' type=\"password\" placeholder='Enter your Password' />\n        <input onChange={(e) => setUserDob(e.target.value)} name='dob' type=\"date\" placeholder='Enter your Date of Born' />\n        {/* <input name='avatar' type=\"text\" placeholder='Choice your Avatar'/> */}\n        <button type=\"submit\" className={styles.registrationButton}>REGISTRATION</button>\n      </form>\n    </Main>\n  );\n}\nexport default UserRegistration;\n\n\n//  const getUserIfo: React.FC<Props> = (props) =>{\n//     const [state, setState] = useState<UserInterface[]>([]);\n\n//     useEffect(() => {\n//       console.log('getUserIfo')\n//       instance.get('user')\n//         .then(r => {\n//           console.log('result', r.data)\n//           setState(r.data)\n//         })\n//         .catch(e => console.log('error', e.message))\n//     }, []);\n\n//     return (\n//     <main className={styles.main}>\n//       {state.map(item => <h1 key={item.id}>{item.name}</h1>)}\n//       {props.children}\n//     </main>\n//       );\n//   }\n\n\n","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/userPage/userPage.tsx",["108"],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/components/header/header.tsx",["109"],"// import React, { SetStateAction } from 'react';\nimport styles from './headerStyle.module.scss'\nimport { useHistory } from \"react-router-dom\";\n// import {NavLink} from 'react-router-dom';\n\nimport userAvatar from '../../../image/user2.jpg';\n\nimport { useAppSelector } from '../../../store/reducers';\nimport { logOutThunk } from '../../../store/userReducer/userThunk';\nimport { useDispatch } from 'react-redux';\n\ninterface IHeader {\n  onClickLog: () => void;\n  onClickReg: () => void;\n}\n\nconst Header: React.FC<IHeader> = ({ onClickLog, onClickReg }) => {\n\n  const dispatch = useDispatch();\n  let history = useHistory();\n  function logOuting() {\n    dispatch(logOutThunk());\n    localStorage.clear();\n    history.push(\"/\");\n  }\n\n  const isToken = localStorage.getItem('token');\n\n  const isAuth = useAppSelector((state) => state.user.auth)\n\n  const login = useAppSelector((state) => state.user.user.login)\n  // const login = 'login'\n  // {!isAuth && const login = 'login'}\n\n\n\n  const testState = useAppSelector((state) => state)\n  console.log(testState)\n\n  return (\n    <div className={styles.headerWrapper}>\n      <div className={styles.header}>\n        <span onClick={() => { history.push(\"/\") }}>Task Board</span>\n\n        <div className={styles.userAuthWrapper}>\n          <div className={styles.user_avatar}>\n            {isAuth && <img src={userAvatar} className={styles.circle_avatar} alt='User Avatar'></img>}\n          </div>\n          {isAuth && <span onClick={() => { history.push(\"/user\") }} >{login}</span>}\n          {isAuth && <span onClick={() => { history.push(\"/work\") }} >Work Space</span>}\n          {!isAuth && <span onClick={() => { history.push(\"/login\") }} >Login</span>}\n          {isAuth && <span onClick={(logOuting)} className={styles.log_out}>Log Out</span>}\n          {!isAuth && <span onClick={() => { history.push(\"/registration\") }}>Registration</span>}\n\n          {/* <NavLink className={styles.RegLogLink} to=\"/registration\"><a>Login</a></NavLink>\n              <NavLink className={styles.RegLogLink} onClick={onClickReg} to=\"/registration\">Registration</NavLink> */}\n        </div>\n      </div>\n\n      <div className={styles.bottomLine}></div>\n    </div>\n  )\n}\n\nexport default Header;\n","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/components/modalWindows/userRegistrationForm/UserRegistrationForm.tsx",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/components/modalWindows/loginForm/loginForm.tsx",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/components/main/Main.tsx",[],"/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/api/userApi/userApi.ts",["110"],"import { Dispatch } from 'react';\nimport { Action } from 'redux';\nimport { IUser, ILogUser } from \"../../types/types\";\nimport axios from './index';\n\nexport const regUser = async (user: IUser) => {\n  try {\n    const res = await axios.post('/registration', user);\n    console.log('User info registaration', res.data);\n    return res.data\n\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const logUser = async (user: ILogUser) => {\n  try{\n    const res = await axios.post('/login', user);\n    return res.data\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const getToken = async () => {  \n  try {\n    const res = await axios.get('/token');\n    console.log('User info token update', res.data);\n    return res.data\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const editUsers = async (user: IUser) => {\n  try {\n    const res = await axios.put('/user', user);\n    console.log('User info registaration', res.data);\n    // document.location.href = 'http://localhost:3000/login';\n    return res.data\n\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const logOut = (): void => {\n  localStorage.clear();\n  document.location.href = 'http://localhost:3000/';\n};\n\n\nexport const deleteUsers = (user: {\n  id: number,\n  email: string,\n  password: string,\n}, token: string) => {\n  return async (dispatch: Dispatch<Action>): Promise<void> => {\n   \n    const response = await axios.delete(`/users/${user.id}`, {\n\n    headers: { Authorization:localStorage.getItem('token') } })\n    \n    const result = await response.data;\n    \n    if (response.status === 200) {\n      console.log(result);\n      const users = [{\n        id: user.id,\n        email: user.email,\n      }];\n      document.location.href = 'http://localhost:3000/';\n    }\n    else {\n      alert(result.message);\n    }\n  };\n};\n// export const editUsers = async (user: IUser) => {\n//   try {\n//     const res = await axios.put('/user', user);\n//     console.log('User info registaration', res.data);\n//     // document.location.href = 'http://localhost:3000/login';\n//     return res.data\n\n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n\n// export const getToken = async () => {  \n//   try {\n//     const res = await axios.get('/token');\n//     console.log('User info token update', res.data);\n//         if (res.status == 200) {\n//       console.log(res);\n//       const users = [{\n//         id: user.id,\n//         surname: user.surname,\n//         email: user.email,\n//         dob: user.dob,\n//       }];\n//     return res.data\n//   } catch (e) {\n//     console.log(e);\n//   }\n// };\n","/Users/chisto4/Documents/Projekt on Work/taskBoard/client/src/pages/homePage/homePage.tsx",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":38,"column":6,"nodeType":"117","endLine":38,"endColumn":44,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":3,"column":10,"nodeType":"121","messageId":"122","endLine":3,"endColumn":29},{"ruleId":"119","severity":1,"message":"123","line":3,"column":101,"nodeType":"121","messageId":"122","endLine":3,"endColumn":115},{"ruleId":"119","severity":1,"message":"124","line":3,"column":150,"nodeType":"121","messageId":"122","endLine":3,"endColumn":164},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"119","severity":1,"message":"125","line":6,"column":10,"nodeType":"121","messageId":"122","endLine":6,"endColumn":21},{"ruleId":"119","severity":1,"message":"125","line":4,"column":23,"nodeType":"121","messageId":"122","endLine":4,"endColumn":34},{"ruleId":null,"fatal":true,"severity":2,"message":"126","line":81,"column":7},{"ruleId":"119","severity":1,"message":"127","line":27,"column":9,"nodeType":"121","messageId":"122","endLine":27,"endColumn":16},{"ruleId":"119","severity":1,"message":"128","line":69,"column":13,"nodeType":"121","messageId":"122","endLine":69,"endColumn":18},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'updateUserInformationToken'. Either exclude it or remove the dependency array. Outer scope values like 'updateUserInformationToken' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["131"],"@typescript-eslint/no-unused-vars","'actionsGetTokenAuth' is defined but never used.","Identifier","unusedVar","'actionsLogUser' is defined but never used.","'actionsSetUser' is defined but never used.","'useSelector' is defined but never used.","Parsing error: ';' expected.","'isToken' is assigned a value but never used.","'users' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"132","fix":"133"},"Update the dependencies array to be: [dispatch]",{"range":"134","text":"135"},[1149,1187],"[dispatch]"]